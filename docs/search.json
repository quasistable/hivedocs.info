[
  
    
    
    
    
    
    {
      "title"    : "lonelywolf",
      "title"    : "Quick Tip: Hive Scripting - In 3 easy steps",
      "category" : "howto, nodejs",
      "url"      : "/howto/nodejs/2020/04/10/quick-tip-hive-scripting-in-3-easy-steps.html",
      "date"     : "2020-04-10 16:38:45 -0700",
      "desc"     : "Hello, devs!my name is stav...",
      "content"  : "hello, devs!my name is stav aka lonelywolf,i’m a web developer, i worked with utopian-io for good amount of time back in the days, made lot useful tutorials mainly about steemjswhich what we’re going to talk today.so i’m not really familiar hive scripting, don’t have any idea how transfer some projects mine hivebut found out that one command can my steemjs projects.so, step 1install if you haven’tnpm install steem --savestep 2create your script, example:const = require('steem');steem.api.getaccounts(['lonelywolf'], function(err, res){ console.log(res, err)})this will give me all profile configuration and informationso now we want it api, right?step 3now, just need change api url,steem.api.setoptions({ url: 'https://api.hive.blog' })you use other node there hive.so i’ll get but as information(results at end post)hope useful, please leave an upvote comment down below are scripting blockchain[ { id: 495898, name: 'lonelywolf', owner: weight_threshold: 1, account_auths: [], key_auths: [array] }, active: posting: [array], memo_key: 'stm7rnp4djl3ztumsxsejuy7grc3aoh1ptvgfv4cuhfvsthwat4iw', json_metadata: '{profile:{name:therealwolf,about:realityhubs moderator -- fs developer,website:https://steemit.com/@lonelywolf,cover_image:https://cdn.steemitimages.com/dqmuxqc72fjzerakezlju7wfj89eju4ftugoxrnersc3gtc/steembanner.png,profile_image:https://cdn.steemitimages.com/dqmvsxtvsoeugvn9sjvcfmbqucpcvzcgor9gouu8nwg8quq/therealwolf_logo.png}}', posting_json_metadata: proxy: '', last_owner_update: '2018-10-13t14:13:21', last_account_update: '2019-08-08t11:40:00', created: '2017-12-14t15:13:15', mined: false, recovery_account: 'steem', last_account_recovery: '1970-01-01t00:00:00', reset_account: 'null', comment_count: 0, lifetime_vote_count: post_count: 865, can_vote: true, voting_manabar: current_mana: '161750492879', last_update_time: 1586559381 downvote_manabar: '43566594492', voting_power: 9281, balance: '0.001 hive', savings_balance: '0.000 sbd_balance: hbd', sbd_seconds: '52214760', sbd_seconds_last_update: '2020-04-07t23:19:45', sbd_last_interest_payment: '2020-03-23t20:43:36', savings_sbd_balance: savings_sbd_seconds: '0', savings_sbd_seconds_last_update: '2020-04-10t04:08:21', savings_sbd_last_interest_payment: savings_withdraw_requests: reward_sbd_balance: reward_steem_balance: reward_vesting_balance: '0.000000 vests', reward_vesting_steem: vesting_shares: '2984.805714 delegated_vesting_shares: '2982.828925 received_vesting_shares: '174264.401181 vesting_withdraw_rate: next_vesting_withdrawal: '1969-12-31t23:59:59', withdrawn: '60272175916', to_withdraw: withdraw_routes: curation_rewards: 6910, posting_rewards: 1207947, proxied_vsf_votes: [ 0 ], witnesses_voted_for: 3, last_post: '2020-04-10t23:12:00', last_root_post: '2020-04-10t19:32:24', last_vote_time: '2020-04-10t22:56:21', post_bandwidth: pending_claimed_accounts: vesting_balance: reputation: '16422564795330', transfer_history: market_history: post_history: vote_history: other_history: witness_votes: 'actifit', 'bdcommunity', 'emrebeyler' tags_usage: guest_bloggers: [] }] null see: quick tip: - 3 easy steps by @lonelywolf"
    } ,
  
    
    
    
    
    
    {
      "title"    : "holger80",
      "title"    : "Update for beem: beempy installer for windows and beempy as shell",
      "category" : "howto, beem, python, wallet",
      "url"      : "/howto/beem/python/wallet/2020/04/08/update-for-beem-beempy-installer-for-windows-and-beempy-as-shell.html",
      "date"     : "2020-04-08 07:26:15 -0700",
      "desc"     : "Repositoryhttps://github.co...",
      "content"  : "repositoryhttps://github.com/holgern/beembeem is a python library for steem and hive. the current version 0.22.14.there also discord channel beem: https://discord.gg/4hm592vthe newest beem can be installed by:pip install -u beemcheck that you are using hive nodes. following commandbeempy updatenodes --hiveupdates nodelist uses only after setting as default_chain, beempy used without switching to steem.the list of nodes checked withbeempy configandbeempy currentnodeshows currently connected node.upcoming changesthe next release will 0.23.0 blockchain then set new default. i rework countless steem_instance parameters replace them with more fitting name. create class which steem() conterpart.changelog versions 0.22.14 add click_shell turn into shell utility autocompletion added requirements installer on windows get_hive_nodes get_steem_nodes functions command resteem renamed reblog when in mode, walletinfo –unlock unlock wallet –lock it again get_blockchain_name steem, returns either or switch_blockchain switch between storage has now config “default_chain”, updatenode –hive switches use –steem nodesupload imagesthe url imageupload been fixed hive:beempy uploadimage -a holger80 .\beempy_screencast.gifresults in:![](https://images.hive.blog/dqmx39y3dpzxurvvxrggmzsnxympekmcdce3xoutbafpodo/image)shell mode beempybeempy activated started any parameter:beempyyou an see here action:windows beempya automatically pushed section:https://github.com/holgern/beem/releases/tag/0.22.14after downloading installing beempysetup, icon shown start menu:when clicking it, terminal started.wallet unlocking modewhen unlocked withwalletinfo --unlockand locked --lockclosing program locks wallet.nodelists steemthe two functions:from beem.nodelist import nodelistnodelist = nodelist()print(nodelist.get_hive_nodes())print(nodelist.get_steem_nodes())this helps, sure always correct node.default_chain parameterthe chain stored default_chain. hive.beempy configreturns now:+-----------------+---------------------------------------------+| key | value |+-----------------+---------------------------------------------+| default_account || default_chain [ https://anyx.io, http://anyx.io, https://api.hivekings.com, https://api.hive.blog, https://api.openhive.network, https://techcoderx.com, https://rpc.esteem.app, https://hived.privex.io ] data_dir ...\beem\beem |+-----------------+---------------------------------------------+beempy updatenodeswill return nodes, steem.switching pythonthe object function booth blockchains.from steemstm steem()stm.switch_blockchain(steem)print(stm)stm.switch_blockchain(hive)print(stm)returns&lt;steem node=https://steemd.minnowsupportproject.org, nobroadcast=false&gt;&lt;steem node=https://anyx.io, nobroadcast=false&gt;switching --steemswitches blockchainandbeempy --hivewill blockchain.if like what do, consider casting vote me witness hivesigner peakd. see: update by @holger80"
    } ,
  
    
    
    
    
    
    {
      "title"    : "hiveio",
      "title"    : "Community Discussion and Updates: Hive Airdrop Exclusion List and Code Corrections, Core Developer Meetings",
      "category" : "news",
      "url"      : "/news/2020/04/06/community-discussion-updates-hive-airdrop-exclusion-core-developer-meetings.html",
      "date"     : "2020-04-06 14:48:21 -0700",
      "desc"     : "Read more about corrected airdrop code, appeal groups, and Hive core development meetings!",
      "content"  : "the buzz this week has been busy, busy. update will cover two important topics: airdrop corrections and appeals, hive core developer meetings. in last update, we discussed initial exclusion list, community feedback proposals, that an error had found in distribution code. over course of week, script reviewed depth by a number developers corrected, so before anything else: updated list compiled user accounts who be correctly dropped tokens via next upcoming hardfork. we’re including all public links to code post should you wish take closer look.the incorrectly excluded are as follows:these corrected automatically does not need make any vote.[ akiroq, balticbadger, dailychina, dailystats, dftba, double-u, edgarare1, electrodo, fadetoblack, freedompoint, friendlystranger, john371911, juancar347, kdtkaren, lichtblick, lifeskills-tv, lotusfleur, ricko66, rynow, scottcbusiness, seo-boss, sgbonus, spoke, steemchiller, steemflower, stimp1024, travelnepal, truce, tuckerjtruman, wisdomandjustice, yanirauseche]the original was edge case arose from proxies were switched or cleared, where revoted way wasn’t accounted for. new results available here.what did these scripts do? what criteria? groups left for vote on?  reading understanding can tricky if it isn’t your forte. used pull is based on set criteria produces transparent reproducible data steem blockchain. included first block hardfork when distributed. was: voting 2 more sockpuppet witness accounts, proxied someone unvote unproxy announcement 1000 sp the remaining accurately still able use they see fit: blocked locked using chain interfaces, many already doing so. however, very passionate across range opinions whether appeal distribution. there main airdrop: those voter sockpuppets matched above voted sock puppets themselves criteria these have proposals made @hiveio account coming weeks leading up opportunity support secondary drop one, both, neither fit. encourage discussion among groups, ask consider carefully communicate openly respectfully each other, even may share same opinions!one most difficult things about moving towards decentralization deciding do what! today began looking at ways help stay organized get done. to end, morning marked developers’ meeting hive. live streaming approved time inaugural meeting, but recorded (you listen here- like subscribe channel future notifications). meetings streamed youtube other platforms forwards.these open anyone working development participate in, would listen. cases, likely technical probably won’t interesting everyone ecosystem (sorry, devs!) sure people abilities date, creating “what’s buzzing around repo” posts following day with summarize what’s covered easier understand. expect tomorrow!to finish today’s post, here few handy remind lot source work happening. involved, look might good fit! public, gitlab: https://gitlab.syncad.com/hive developer’s portal: https://developers.hive.io/ website: https://hive.io/ (links useful here, under continual development) one project sites browse projects ecosystem: https://hiveprojects.io/ explorers: https://hiveblocks.com/ https://hive-db.com/thanks another solid week! please spread info 🐝 see: updates: corrections,"
    } ,
  
    
    
    
    
    
    {
      "title"    : "holger80",
      "title"    : "Update for beem: huge performance improvements and bridge API support",
      "category" : "howto, beem, python, communities",
      "url"      : "/howto/beem/python/communities/2020/04/06/update-for-beem-huge-performance-improvements-and-bridge-api-support.html",
      "date"     : "2020-04-06 05:04:18 -0700",
      "desc"     : "Repositoryhttps://github.co...",
      "content"  : "repositoryhttps://github.com/holgern/beembeem is a python library for steem and hive. the current version 0.22.13.there also discord channel beem: https://discord.gg/4hm592vthe newest beem can be installed by:pip install -u beemcheck that you are using hive nodes. following commandbeempy updatenodes --hiveupdates nodelist uses only list of nodes checked withbeempy configandbeempy currentnodeshows currently connected node.changelog versions 0.22.13 hivesigner support added api link to steemconnect has been fixed change recovery account beempy node add get_notifications mark_notifications_as_read notifications bridge config storage improved get_default_config_storage, get_default_key_storage get_default_token_storage list_all_subscriptions get_account_posts reduce number performed calls on object creationperformance boost beemall integration tests finishing now in========== 469 passed, 27 skipped, 11 warnings in 1040.19s (0:17:20) ===========which an improvement 49% (version 0.22.12 needed 1551 seconds).this huge could accomplished by reducing when creating object. importing objects from beem, configstorage no longer created during import. read creation with get_default_config_storage. this speeds up modules stored parameter needed.these changes improves speed all commands.bridge apibeem supports parts api. more functions missing will follow.notificationsbeempy holger80prints table unread notifications.+---------------------+------+-------------------------------------------+| date | type message |+---------------------+------+-------------------------------------------+| 2020-04-06 10:15:57 vote @uwelang voted your post ($0.23) || 12:52:00 @steemcleaners ($2.45) |+---------------------+------+-------------------------------------------+they marked as -mbeempy -m holger80which broadcasts notify custom_json.list subscribtionsthe which returns cummunities subscript.get_account_poststhe function, used fetch posts shown feed account.get_ranked_postsa new class rankedposts was beem.comment receive ranked posts.change beempyit possible beempybeempy changerecovery -a holge80 recovery.accounthivesigner addedthe example shows how create login link:from beem.hivesigner import hivesignerhivesigner = hivesigner(client_id=rewarding.app, scope=login, get_refresh_token=false)hivesigner.get_login_url('https://rewarding.app/welcome')returns'https://hivesigner.com/oauth2/authorize?client_id=rewarding.app&amp;redirect_uri=https%3a%2f%2frewarding.app%2fwelcome&amp;scope=login'the received token then check if user successfully entering its posting key script:try: hivesigner.set_access_token(access_token) name hivesigner.me()[name]except: print(wrong token) see: update performance improvements @holger80"
    } ,
  
    
    
    
    
    
    {
      "title"    : "beggars",
      "title"    : "Tutorial: Building A Dice Game Contract With Hive Stream (Part 2)",
      "category" : "howto, dapps, nodejs",
      "url"      : "/howto/dapps/nodejs/2020/04/06/tutorial-building-a-dice-game-contract-with-hive-stream-part-2.html",
      "date"     : "2020-04-06 04:00:21 -0700",
      "desc"     : "Elaborating on part one of our dice contract tutorial and beefing it up",
      "content"  : "if you missed part one here, we built a basic dice game contract which allows people to bet on an outcome and either win or lose. the tutorial left out some things that might want do in real deployment.install mongodbfor this tutorial, are going use mongodb as database behind it. we’ll be storing transactions outcomes database, so can ensure transfers not processed multiple times.while streamer keeps track of last block number json file sqlite what happens your node goes down gets edited deleted? it would result pain manually process.download community version installer from official website. choose appropriate for operating system follow instructions. should require very little input, just keep clicking next basically everything default.build adapternow, need write adapter will allow hive stream work with instead databases is configured out-of-the-box use. provided have installed (version 2+) new adapter’s functionality.an standard cases consists two mandatory methods loadstate savestate method called when starts start at finished. updates latest block.there however other lifecycle our more functional adapters. create initialisation, setup instances connections here. destroy stopped, naturally close here.the processoperation number, transaction id forth. it’s metadata used identify specific their data. processtransfer processcustomjson matching transfer custom operation matched contract. also information well payload helpful info.save following mongo.adapter.jsimport { adapterbase } 'hive-stream';import mongoclient, db 'mongodb';export class mongodbadapter extends client; db; mongo = uri: '', database: options: {} }; blocknumber; lastblocknumber; blockid; prevblockid; transactionid; constructor(uri, databasw, options usenewurlparser: true, useunifiedtopology: true }) super(); this.mongo.uri uri; this.mongo.database database; this.mongo.options options; async create() try this.client await mongoclient.connect(this.mongo.uri, this.mongo.options); this.db this.client.db(this.mongo.database); return true; catch (e) throw e; loadstate() const collection this.db.collection('params'); params collection.findone({}); (params) params; savestate(data) collection.replaceone({}, data, upsert: true}); processoperation(op, blocknumber, blockid, prevblockid, trxid, blocktime) this.blocknumber this.blockid this.prevblockid this.transactionid trxid; processtransfer(operation, payload, metadata) this.db.collection('transfers'); data id: this.transactionid, blockid: this.blockid, blocknumber: this.blocknumber, sender: metadata.sender, amount: metadata.amount, contractname: payload.name, contractaction: payload.action, contractpayload: payload.payload collection.insertone(data); processcustomjson(operation, this.db.collection('transactions'); issignedwithactivekey: metadata.issignedwithactivekey, destroy() this.client.close(); }}expanding contractnow support added via adapter, let’s modify code flag whether was (winnings sent loss memo sent). us replay worry about paying users who already received winnings times.above (verify) line code, access client connection.const this._instance['adapter']['db'];const db.collection('transfers');because contracts get instance, means property. downside here any doesn’t property, fail. case, know slightly tighter coupling fine.inside balance check refunds account than maximum bet, add sets status refundput inside statement: (balance &lt; max_bet) underneath transferhivetokens call.await collection.findoneandupdate({ }, $set: status: 'refund' });what doing querying based its id, then using $set property only add/update collection.next, statement (parsefloat(tokenswon) &gt; balance) same beneath call:await });underneath this._instance.transferhivetokens(account, sender, tokenswon, token_symbol, winningmemo); following:await 'win' });and now else '0.001', losingmemo);await 'loss' });finally, another amounttrim[0], amounttrim[1], `[refund] invalid params.`); user amount higher max, roll too high low.await });the final ends up looking like this:import utils seedrandom 'seedrandom';import bignumber 'bignumber.js';const contract_name 'hivedice';const 'beggars';const token_symbol 'hive';const house_edge 0.05;const min_bet 1;const max_bet 10;// random generatorconst rng (previousblockid, transactionid) =&gt; seedrandom(`${previousblockid}${blockid}${transactionid}`).double(); randomroll math.floor(random * 100) + 1; randomroll;};// valid betting currenciesconst valid_currencies ['hive'];class dicecontract _instancs; previousblockid; // runs every time register logic (creating etc) unregister run connections, state, etc current automatically exists updateblockinfo(blocknumber, previousblockid, info this.previousblockid /** helper getting balance. case make sure has enough money pay bets @returns */ getbalance() this._instance['client'].database.getaccounts([account]); (account?.[0]) (account[0].balance string).split(' '); balance[0]; parsefloat(amount); null; action matches @param param1 - sender roll(payload, destructure values payload; formatted 100 value first part, currency symbol second amounttrim amount.split(' parse numeric amountparsed parsefloat(amounttrim[0]); format 3 decimal places amountformatted parsefloat(amounttrim[0]).tofixed(3); trim space amountcurrency amounttrim[1].trim(); console.log(`roll: ${roll} parsed: ${amountparsed} formatted: ${amountformatted} currency: ${amountcurrency}`); blockchain this._instance.gettransaction(this.blocknumber, this.transactionid); call verifytransfer confirm happened verify this._instance.verifytransfer(transaction, 'beggars', amount); this.getbalance(); this._instance['adapter']['db']; db.collection('transfers'); server less max cancel refund send back sent, broke could fufill bet.`); }); return; (amountparsed &gt;= &amp;&amp; &lt;= validate ((roll 2 96) valid_currencies.includes(amountcurrency)) rng(this.previousblockid, calculate multiplier percentage bignumber(1).minus(house_edge).multipliedby(100).dividedby(roll); tokens won tokenswon bignumber(amountparsed).multipliedby(multiplier).tofixed(3, bignumber.round_down); shows they winningmemo `you ${tokenswon} ${token_symbol}. roll: ${random}, guess: ${roll}`; lose losingmemo lost afford, (random roll) losingmemo); parameters, amount.`); console.log(e); }}export default dicecontract();register itwe take bootstrapped app remains largely untouched, except pass configuration constructor.import './dice.contract';import './mongo.adapter';const streamer({ active_key: needed json_id: 'testdice' identifier payloads});streamer.registeradapter(new mongodbadapter('mongodb://127.0.0.1:27017', 'hivestream'));// contractstreamer.registercontract('hivedice', dicecontract);// watching blockchainstreamer.start();here screenshot modified refunded updated show all works intended.conclusionwhat did learn? learned how interfacing instance interact look by within actions them (in setting property).ps. ships package, don’t yourself, i process tutorial. enjoy. see: tutorial: building (part 2) @beggars"
    } ,
  
    
    
    
    
    
    {
      "title"    : "good-karma",
      "title"    : "SteemConnect notice",
      "category" : "news, hivesigner",
      "url"      : "/news/hivesigner/2020/04/05/steemconnect-notice.html",
      "date"     : "2020-04-05 12:07:21 -0700",
      "desc"     : "In this post we would like ...",
      "content"  : "in this post we would like to update everyone about discontinuation of steemconnect.it has been incredible few years serving all users and dapps on steem, but now that have migrated hive as hivesigner. it is time focus our effort making hivesigner the best authentication service, can be hive.sunset datewe are setting a date stop steemconnect services 1st june, 2020. kindly request dapp developers plan inform their changes.migration optionswe will actively improving encourage build hive. if for some reason you want stay please migrate other fork - example steemlogin. not any way connected with forks, always do your own research, audit security new forks.hivesigner developmentfor developers, visitors, redirecting homepage help them get started development adding faq more detailed documentation how integrate website, authenticate extension, sign transactions securely, etc. published roadmap proposal support continuous project. read here bringing secure social masses. vote github: ledgerconnect/hivesigner discord support: https://discord.gg/pnjn7wh email: hello@hivesigner.com see: notice by @good-karma"
    } ,
  
    
    
    
    
    
    {
      "title"    : "beggars",
      "title"    : "Tutorial: Building A Dice Game Contract With Hive Stream",
      "category" : "howto, dapps, nodejs",
      "url"      : "/howto/dapps/nodejs/2020/04/04/tutorial-building-a-dice-game-contract-with-hive-stream.html",
      "date"     : "2020-04-04 03:59:09 -0700",
      "desc"     : "Hot off the heels of announ...",
      "content"  : "hot off the heels of announcing some huge updates to hive stream which features ability write “smart” contracts, i promised a tutorial would be coming showing you how one and what could more fitting than writing contract for dice game?basing this that engine ships with as an example, i’ve created accepts roll value needs above server roll. by end tutorial, you’ll have understanding contracts are written (they’re just classes) can create your own smart dapps using them.if you’re kind person who wants see code, covered. code found here. it is in typescript but resembles javascript basically if not familiar. based engine, except they’re both fundamentally different pieced together.install packagein application, install hive-stream package running npm it’s published on npm. we also want seedrandom bignumber.js well since those used our code.npm bignumber.jswriting contractsave following dice.contract.js application.import { streamer, utils } from 'hive-stream';import 'seedrandom';import bignumber 'bignumber.js';const contract_name = 'hivedice';const account ''; // replace accountconst token_symbol 'hive';const house_edge 0.05;const min_bet 1;const max_bet 10;// random number generatorconst rng (previousblockid, blockid, transactionid) =&gt; const seedrandom(`${previousblockid}${blockid}${transactionid}`).double(); randomroll math.floor(random * 100) + 1; return randomroll;};// valid betting currenciesconst valid_currencies ['hive'];class dicecontract client; config; blocknumber; blockid; previousblockid; transactionid; create() runs every time register called do setup logic here (creating database, etc) destroy() unregister run close database connections, state, etc information about current block method automatically exists updateblockinfo(blocknumber, previousblockid, lifecycle sets info this.blocknumber this.blockid this.previousblockid this.transactionid /** get balance helper getting balance. case make sure has enough money pay out any bets @returns */ async getbalance() await this._client.database.getaccounts([account]); (account?.[0]) (account[0].balance string).split(' '); amount balance[0]; parsefloat(amount); when custom json action matches @param payload param1 - sender roll(payload, sender, }) destructure values payload; formatted like 100 first part, currency symbol second amounttrim amount.split(' parse numeric real amountparsed parsefloat(amounttrim[0]); format 3 decimal places amountformatted parsefloat(amounttrim[0]).tofixed(3); trim space amountcurrency amounttrim[1].trim(); console.log(`roll: ${roll} parsed: ${amountparsed} formatted: ${amountformatted} currency: ${amountcurrency}`); transaction blockchain utils.gettransaction(this._client, this.blocknumber, this.transactionid); call verifytransfer confirm transfer happened verify utils.verifytransfer(transaction, 'beggars', amount); this.getbalance(); (verify) less max bet, cancel refund (balance &lt; max_bet) send back was sent, broke utils.transferhivetokens(this._client, this._config, account, amounttrim[0], amounttrim[1], `[refund] fufill bet.`); return; bet (amountparsed &gt;= &amp;&amp; &lt;= validate ((roll 2 96) (direction === 'lesserthan' || direction 'greaterthan') valid_currencies.includes(amountcurrency)) rng(this.previousblockid, this.blockid, calculate multiplier percentage new bignumber(1).minus(house_edge).multipliedby(100).dividedby(roll); tokens won tokenswon bignumber(amountparsed).multipliedby(multiplier).tofixed(3, bignumber.round_down); memo shows users they win winningmemo `you ${tokenswon} ${token_symbol}. roll: ${random}, guess: ${roll}`; lose losingmemo lost user afford, (parsefloat(tokenswon) &gt; balance) (random roll) tokenswon, token_symbol, winningmemo); else '0.001', losingmemo); invalid parameters, their params.`); try need sent amount.`); console.log(transfer); catch (e) console.log(e); }}export default dicecontract();adding applicationcreate file app.js add following.import streamer './dice.contract';const streamer({ active_key: '', needed transfers json_id: 'testdice' identifier payloads});// contractstreamer.registercontract('hivedice', dicecontract);// starts watching blockchainstreamer.start();test outin put username then (to you). supply active key constructor (between single quotes).in field, enter stringified this:{hivecontract:{id:testdice, name:hivedice,action:roll,payload:{roll:10 }}}the id must match provided config property json_id uses transactions. case, testdice id. name registercontract method’s argument hivedice example. function finally object data call.i took liberty testing my show process works.as two transactions winning losing, works (which verified checking wallet or explorer):conclusionthis rudimentary example basic contract. improvements might include support odds, supporting more. but, hopefully build now. see: tutorial: building game @beggarsmore node.js"
    } ,
  
    
    
    
    
    
    {
      "title"    : "blocktrades",
      "title"    : "Hive workflow proposal",
      "category" : "howto, contribute, development",
      "url"      : "/howto/contribute/development/2020/04/03/hive-workflow-proposal.html",
      "date"     : "2020-04-03 14:20:39 -0700",
      "desc"     : "Note: this post is primaril...",
      "content"  : "note: this post is primarily intended for hive developers, but it may be of interest to other readers who are interested in the details software development process. i’ll make another later with ideas about how general community members can become involved process and go submitting bug reports.i propose we adopt a common workflow most if not all hive-related projects. will easier developers collaborate on multiple projects minimum amount friction.i believe primary goals (in no particular order) our should be: create an easily findable list tasks prevent duplication work effort allow easy collaboration between establish determining task priority setup testing standards each project review ensure existence code functional/compilable state where test their new against potential interactions production which safe deployed publicbelow some my initial proposals achieve above goals.creating issues taskswhen comes up, issue appropriate inside group.selecting (issue)if clear what belongs to, or existing project, called without yet. assigned specific corresponding correct close yet.describing labelschoose labels describe nature issue, such as “bug”, “enhancement”, “documentation”. currently only have group-level labels. generally preferred, unless you need that really sense group.optional assignment person taskthe at creation time developer, self-assigning assigning someone confident want take latter case, probably also contact them directly issue).using boards monitor issuesusing gitlab, individual group has “board” shows states project’s issues: open: exists, decision yet been made do: do awaiting it, blocked by precursor doing: one more working review: done, independent after completed, changed either do, doing, closed closed: completed passed reviewwhen first created show up “open” list. setting label moves from review. closing list.using board workflowin addition project-level boards, there aggregates status group: https://gitlab.syncad.com/hive/hive/-/boardsprocess statusthe likely vary across example, web site hosted entity, entity determine worked on, works them, they reviewed.some core blockchain rigorous criterion selection those reviewed, because ripple effects projects.the sensitive, features impacts memory, disk, cpu utilization could increase cost operating node.similarly, changes commonly used libraries hive-js financial-related wallet apps malicious injected.reference when committing associated source repositoryit’s very useful link possible. commit related place tag your comment to. forget code, manually update afterward adding url commit.testing requirementsunit tests image “tests”one included change, verify properly, able detect future regressions (future break functionality). backend usually too difficult required process.for user interface (ui) changes, it’s often tests, cases, attach “before” “after” set images reviewer understand was done.continuous integration (ci) projectsanother important component proper compiles developer still others. due environment differences, properly developer’s machine, then fails others.to problems, ci gitlab automatically recompile run regression pushed repository. enable rapid detection problems avoid wasting developers.branch management repositoriesthe master branch serves deployment production.tags indicate recent version approved use environment. tagged versions environments!the head represent believed compilable functional.note flow require cleanup steemd (now renamed hive) repo.public testnet codepreferably, always public testnets available apps, requiring main network. witnesses encouraged operate consensus api nodes support testnet(s).a any deemed potentially impact third party apps.we whatever being testnet. see: proposal @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "title"    : "therealwolf",
      "title"    : "dhive: RPC Failover Support",
      "category" : "howto, rpc, nodejs",
      "url"      : "/howto/rpc/nodejs/2020/04/03/dhive-rpc-failover-support.html",
      "date"     : "2020-04-03 05:00:03 -0700",
      "desc"     : "Greetings #Hivers &amp; fel...",
      "content"  : "greetings #hivers &amp; fellow developers,i’ve just pushed a new version, 0.13.3, to dhive (js library) that enables native rpc node failover-support. this feature is optional and only active if an array of nodes given as the first argument in client.import {client} from '@hivechain/dhive'// failoverconst client = client(['https://api.hive.blog', 'https://api.hivekings.com', 'https://anyx.io'], { failoverthreshold: 3 /* default */})// no simpleclient client('https://api.hive.blog')relevant options parametersnew client(url, options)- failoverthreshold (default: 3): specifies number times urls (rpc nodes) should be iterated retried case timeout errors. requires url parameter array! it can set 0 iterate retry forever.- 60 * 1000ms): send timeout, how long wait milliseconds before giving up on call. forever.gitlab pull request (code)https://gitlab.syncad.com/hive/dhive/-/merge_requests/3why relevant?normally, you have take care potential failovers your application yourself. produce redundant code. having solution far cleaner.another wrapper around failover. there dsteem-pool, but didn’t work for me.infocode has been tested everything working fine: https://gitlab.syncad.com/hive/dhive/-/blob/master/test/client.ts#l15-20however, very sensitive operations, please still careful rather double-check.with said:if are any problems/questions, create issue https://gitlab.syncad.com/hive/dhive/issues#hiveonwolftherealwolf.me see: dhive: failover support by @therealwolfmore about node.js"
    } ,
  
    
    
    
    
    
    {
      "title"    : "holger80",
      "title"    : "How to review account permissions and change your recovery account",
      "category" : "howto, beem, python, account",
      "url"      : "/howto/beem/python/account/2020/04/02/how-to-review-account-permissions-and-change-your-recovery-account.html",
      "date"     : "2020-04-02 15:04:27 -0700",
      "desc"     : "sourceAll accounts on the H...",
      "content"  : "sourceall accounts on the hive blockchain that existed also before fork may have posting permissions granted to apps do not exists blockchain. it is a good idea remove them for now.you can use beempy your account. at first,all account posting/active should be printed withbeempy holger80+------------+-----------+-----------------------------------------------------------+| permission | threshold key/account |+------------+-----------+-----------------------------------------------------------+| owner 1 stm5xdyn3netqimd1wczzjf9spijqy2uqw9hrwt6lr6rqytaxwnfz (1) || active stm7ta7mh81wjv1j8ew8nyglc3xcsyxndfnhah8f8byyd8yacy6ew actifit.app dpoll.xyz esteemapp nc-client nextcolony peakd.app rewarding stm6t5exkhztql1pdkrrzjcgzbadnb3yuyczgrywdxvdnu5bp57jl |+------------+-----------+-----------------------------------------------------------+remove permissionnow, needed removed bybeempy disallow -a holger80 busy.appwhere name set with -a.this command broadcasts account_update operation and removes given from account_auths field.this done https://hivesigner.com/revoke/ followed by name, e.g. https://hivesigner.com/revoke/busy.appchanging reviewing possible peakd:https://peakd.com/@holger80/permissionsrecovery accountthe recovery check https://hiveblocks.com/@holger80it @steem my as most unlikely will ever sign request_account_recovery hive, i’m unable account, when i would accidentally leak key someone change using leaked key.this unlikely, but could happen.how does work?assuming, was changed within 30 days, previous recover signing, account: need create new public signed its then broadcast recover_account old private key. now all keys an key.currently this work me, hive.changing accounti created @recovery.account account.it hivesigner this:https://hivesigner.com/sign/change_recovery_account?account_to_recover=holger80&amp;new_recovery_account=recovery.account&amp;extensions=%5b%5dor peakd: https://peakd.com/@holger80/permissionsbut like own script:from beem.account import accountfrom beem.nodelist nodelistfrom beem steemfrom beem.transactionbuilder transactionbuilderfrom beemgraphenebase.account privatekeyimport beembaseimport getpassif __name__ == __main__: nodes = nodelist() nodes.update_nodes() getpass.getpass(prompt='owner key: ') owner_key privatekey(wif=key) print(pub: %s % str(owner_key.pubkey)) account_name input(account name: ) new_recovery_account input(new recovery_account: steem(node=nodes.get_nodes(hive=true)) assert hive.is_hive account(account_name, steem_instance=hive) new_rec_acc account(new_recovery_account, op beembase.operations.change_recovery_account(**{ 'account_to_recover': account['name'], 'new_recovery_account': new_rec_acc['name'], 'extensions': [] }) print(op) prompt input(broadcast operation? [y/n]) if prompt[0] y: tb transactionbuilder(steem_instance=hive) tb.appendops([op]) tb.appendwif(str(owner_key)) #tb.appendsigner(account['name'], 'owner') tb.sign() trx tb.broadcast() print(trx) results inthis means in days changed.i keep of safe place them.is there provider?do you want account? how work? let me know. see: review @holger80more about python"
    } ,
  
    
    
    
    
    
    {
      "title"    : "deathwing",
      "title"    : "How to set up your Witness server with MIRA?",
      "category" : "howto, witness",
      "url"      : "/howto/witness/2020/04/01/how-to-set-up-your-witness-server-with-mira.html",
      "date"     : "2020-04-01 17:30:33 -0700",
      "desc"     : "Hello there, as you may or ...",
      "content"  : "hello there, as you may or not know the server requirements for hosting a witness is growing very fast. to combat this, with recent hardforks blockchain mira was introduced.mira caches data on rocksdb files rather than random acces memory, ram. which means will require higher storage fast r/w speeds like ssds example. instead of 64 gb ram.right now, today (02.04.2020) absolute minimum node 8 gigabytes ram, 400gb ssd storage, 4 cores, 100 mbps dl/ul speed.the recommended specifications witness/seed 32 500gb 1 gbps speed.block logs currently take about 258 space while takes 37 gb.witnesses are course, crucial longevity, stability and decentralization chain. if wan create become witness, good thank volunteering! managing servers keeping tabs them no easy feat. lets forget mention, cheap.start setting up your fresh install [diy]so have decided using mira. ready, freshly installed. preferably ubuntu debian, but that’s just my taste.for setup, we be steem-docker made by someguy123 provided privex.iolet’s get started. throughout this tutorial, i assuming root.first, git so can use clone necessary from github.apt -ynow, repository github.git https://github.com/someguy123/steem-docker.gitnow that has downloaded server, cd into folder.cd steem-dockernext, going custom-made script docker us../run.sh install_dockerthis probably minute.next, installing package../run.sh someguy123/hive:latest-miranext, .env docker.nano .envdocker_name=witnessports=paste these in file save it pressing ctrl+x then y.next step download block_log.mkdir root/data/witness_node_data_dir/blockchaincd root/data/witness_node_data_dir/blockchaincurl -fssl http://files.privex.io/hive/block_log.lz4 -o - | lz4 -d block_logas block_log quite big, anywhere 20 minutes several hours depending internet connection server.after been installed, privex.iofor hive,rsync -av --progress --delete rsync://files.privex.io/hive/rocksdb/ /root/steem-docker/data/rocksdb/now our downloaded, must generate brain key security.cd root/steem-docker./run.sh remote_walletsuggest_brain_keythis pair witness. copy output it.after generating keys edit config.ini main configuration server.nano root/steem-docker/data/witness_node_data_dir/config.inion first line, see p2p-endpoint should comment out goal make looking host seed keep on.you putting pound (#) front line. look this,#p2p-endpoint = 0.0.0.0:2001next, few lines below see,shared-file-size 64gplease change 16 16g on.next, scroll down until private-key lines.for part, put username “” this,witness deathwingnext, private previously saved without any quotation marks.private-key 5thisisyourpreviosulygeneratedprivatekeyagain, press y exit.you almost done!our next replay chain, long time process single-threaded can’t advantage multi-core cpus, processors’ single-thread performance, amount vary. likely an hour more../run.sh replayafter complete, start let sync network../run.sh startyou ./run.sh view log output. normal errors appearing here time. check every 20-30 something this:when seeing messages, ctrl+c leave logs.now synced ready go, update account broadcast network. do that, need run wallet../run.sh walletthe wallet prompt set password.set_password hunter2 (set own password)unlock hunter2import_key 5yourwitnessaccountsactiveprivatekeyyou find peakd https://peakd.com/@yourusername/permissionsremember import_key witnessing chain one generated tutorial.now, journey supporting stability, longevity blockchain.update_witness witnessname witnessurl stmxxxxxxx {account_creation_fee:3.000 hive,maximum_block_size:65536,sbd_interest_rate:0} truewitnessname account.witnessurl preferably, announcement post.stmxxxxxxx= paste generated.you hiveblocks.com/@yourusername everything worked transaction this;congratulations! now you!i want don’t thing servers!best way situation purchasing pre-replayed privex.io who both scripts used tutorial. option best users knowledge excellent customer support during their becoming witness.after order vps-hive from, receive mail containing information connect login in, what first, switch user root, type,suthen, using./run.sh remote_walletsuggest_brain_keythen, nano data/witness_node_data_dir/config.ini with./run.sh wait sync,then shown previously.let me questions!&lt;p&gt;post scriptum&lt;/p&gt;remember voting witnesses important. would appreciate could vote me.use peakd’s page clicking here.use hivesigner here.thank you! see: how mira? @deathwing"
    } ,
  
    
    
    
    
    
    {
      "title"    : "inertia",
      "title"    : "Jekyll::Hive",
      "category" : "tools, ruby, jekyll",
      "url"      : "/tools/ruby/jekyll/2020/04/01/jekyll-hive.html",
      "date"     : "2020-04-01 16:43:15 -0700",
      "desc"     : "Liquid tag for displaying Hive content in Jekyll sites: `{% hive %}`.",
      "content"  : "jekyll::hiveliquid tag for displaying hive content in jekyll sites: {% %}.installationadd this line to your application’s gemfile:gem 'jekyll-hive'and then execute:bundleor install it yourself as:gem jekyll-hivethen add the following site’s _config.yml:plugins: - jekyll-hive💡 if you are using a version less than 3.5.0, use gems key instead of plugins.usageuse as follows pages, posts and collections:{% author/permlink %}this will place associated on page.jekyll buildwhen building site with jekyll, can continue default command:jekyll buildif would like provide an alternate node:node_url=https://anyx.io buildcontributing fork ( https://github.com/inertia186/jekyll-hive/fork ) create feature branch (git checkout -b my-new-feature) commit changes -am 'add some feature') push origin new pull requestget touch!if you’re jekyll::hive, i’d love hear from you. drop me tell what think! i’m @inertia hive.licensei don’t believe intellectual “property”. do, consider jekyll::hive licensed under creative commons license. see: by"
    } ,
  
    
    
    
    
    
    {
      "title"    : "holger80",
      "title"    : "Update for beem: fixing author/curation reward calculation and more",
      "category" : "howto, beem, python, curation",
      "url"      : "/howto/beem/python/curation/2020/04/01/update-for-beem-fixing-author-curation-reward-calculation-and-more.html",
      "date"     : "2020-04-01 15:10:03 -0700",
      "desc"     : "Repositoryhttps://github.co...",
      "content"  : "repositoryhttps://github.com/holgern/beembeem is a python library for steem and hive. the current version 0.22.12.there also discord channel beem: https://discord.gg/4hm592vthe newest beem can be installed by:pip install -u beemcheck that you are using hive nodes. following commandbeempy updatenodes --hiveupdates nodelist uses only list of nodes checked withbeempy configandbeempy currentnodeshows currently connected node.changelog versions 0.22.12this update fixed vote classes, curation/author reward calculation, discussions classes get_feed get_account_votes accounts. add node now discussion_by_feed has been activevotes raw_data parameter added to all beempy curation, votes pending table improved fix curation author calculationfixing integration testsafter fixing remaining problems in vote, comment account, 462 tests have finally passed.========== passed, 27 skipped, 13 warnings 1551.63s (0:25:51) ===========the ci may fail from time due outs.view outgoing incoming with beempyoutgoing -o -d 1 holger80+----------+------------------+---------+--------------+---------------+---------+--------+| voter | votee sbd/hbd rshares percent weight |+----------+------------------+---------+--------------+---------------+---------+--------+| holger80 pibara 1.0 $ 0 days 23:9 2348837832917 7500 911136 || pennsif 1.34 21:17 3123742413620 9955 390108 nonameslefttouse 1.08 18:45 2517726726913 8000 323940 gtg 1.4 12:17 3279925264141 10000 281332 quochuy 1.39 10:42 3259050022456 216722 steemcleaners 0.68 10:30 1599714528677 5000 358546 dsound 1.03 9:30 2396854864854 238509 abitcoinskeptic 1.35 8:49 3167311773888 847601 jga 6:6 1590352821718 151064 creary 0.34 5:50 789079645344 2500 317630 muelli 4:50 1584677025773 364432 emrebeyler 1.01 4:28 2360837888866 649503 denmarkguy 0.57 3:20 1331770685831 4251 377530 inertia 1.02 0:40 2386404162091 256582 stellabelle 0.94 0:34 2195712375512 7000 524304 |+----------+------------------+---------+--------------+---------------+---------+--------+where d limit shown days.incoming seen -i holger80+---------------+----------+---------+--------------+---------------+---------+--------+| |+---------------+----------+---------+--------------+---------------+---------+--------+| kaymay 0.0 23:54 138492921 7 barton26 0.01 23:4 18413631854 936 dhimmel 2.0 18:59 4675461211716 235183 joey-fancy 17:3 5993194991 298 cubapl 12:52 3051877392 152 1.13 10:0 2646991658036 130928 saboin 0.16 8:36 367812173322 4500 18068 netuoso 0.33 2:39 765623609156 38036 memehub 1.15 2:5 2685197932823 132357 crokkon 0.02 1:57 40344164439 1977 dustsweeper 0.04 1:36 89501844457 2000 4393 |+---------------+----------+---------+--------------+---------------+---------+--------+pending rewardsthis command used calculating rewards posts, comments votes. conversion usd done by latest internal market price hive/hbd day median hive/usd.pending posts bybeempy --post holger80+----------+-----------+-----------+------------+--------------+| cashout hbd hp liquid invested |+----------+-----------+-----------+------------+--------------+| 4.0 16.389 84.044 14.06 16.39 0.9 16.347 83.830 14.02 16.35 sum 32.74 167.87 28.08 |+----------+-----------+-----------+------------+--------------+--author, --permlink or --title set show more information.the --days limits duration --from sets start point days. before 6 viewed (this call takes while): --curation --author holger80showing @holger80+-----------------+----------+----------+----------+------------+--------------+| |+-----------------+----------+----------+----------+------------+--------------+| anthonyadavisii 0.000 3.953 0.00 0.77 arcange 2.708 0.53 4.148 0.81 anomadsoul 0.8 5.438 1.06 exhaust 0.7 1.819 0.35 bluerobo 3.372 0.66 therealwolf 9.194 1.79 markkujantunen 0.6 2.717 4.727 0.92 moon32walker 2.043 0.40 stateofthedapps 0.5 1.780 nateaguila 4.630 0.90 jrvacation 3.617 0.71 eonwarped 0.3 2.591 0.51 steemillu 0.1 1.760 hiq 5.430 fullnodeupdate 1.585 0.31 yabapmatt 3.789 0.74 1.144 0.22 - 66.44 12.96 |+-----------------+----------+----------+----------+------------+--------------+the given values estimate, e.g. @therealwolf/dhive was estimated, but received 0.927 hp.the last 24 h holger80--comment view on comments.curation performance permlinkthe calculated already paid-out posts.the shows @therealwolf/dhive.beempy -a @therealwolf/dhive+------------+-------------+------------+-----------------+-----------+-------------+| voting early loss |+------------+-------------+------------+-----------------+-----------+-------------+| 27.4 min 0.328 0.926 55.0 % high. 688.7 10.198 21.750 41.6 cur. 4.3 0.104 0.014 0.909 170.1 36.675 0.514 86.581 45.97 |+------------+-------------+------------+-----------------+-----------+-------------+`the percentage dividing power through value higher than 0.2 --min-vote @therealwolf/dhive+-----------------+-------------+------------+-----------------+-----------+-------------+| |+-----------------+-------------+------------+-----------------+-----------+-------------+| karja 3.9 0.223 0.051 1.875 164.2 oflyhigh 4.5 1.969 0.217 11.331 112.2 deanliu 1.077 0.108 5.063 91.7 helene 0.518 0.052 2.140 80.6 xiaohui 0.394 0.035 1.535 76.0 russia-btc 17.1 0.241 0.938 75.9 17.9 2.006 6.731 65.4 lunaticpandora 58.0 0.391 0.985 49.2 solarwarrior 58.1 0.634 1.509 46.4 diggndeeper.com 64.1 0.473 0.990 40.9 fredrikaa 80.0 0.739 1.445 38.1 braaiboy 0.259 0.482 36.3 asgarth 149.3 0.825 1.415 33.4 good-karma 375.8 0.702 1.110 30.8 nextcolony 763.6 0.209 0.361 33.7 steemik 1247.0 0.737 1.248 33.0 smartsteem 6575.2 7.220 10.606 28.6 tombstone 6575.3 3.967 4.824 23.7 epicdice 0.246 0.319 25.3 |+-----------------+-------------+------------+-----------------+-----------+-------------+this works posts. influences highest curation. this useful, as low high performance, which cannot archived i see optimum around 4.2 minutes 0.4 hbd.beempy @emrebeyler/dpoll-beneficiary-updatecuration @emrebeyler/dpoll-beneficiary-update+------------+-------------+------------+-----------------+-----------+-------------+| 5.1 1.008 4.497 87.0 201.6 12.492 22.977 35.9 0.507 0.081 2.760 106.2 16.314 0.159 38.316 45.76 |+------------+-------------+------------+-----------------+-----------+-------------+if like what do, consider casting me witness hivesigner peakd. see: author/curation calculation @holger80more about"
    } ,
  
    
    
    
    
    
    {
      "title"    : "holger80",
      "title"    : "Use beempy to access the internal HIVE/HBD market",
      "category" : "howto, beem, python, market, hbd",
      "url"      : "/howto/beem/python/market/hbd/2020/03/24/use-beempy-to-access-the-internal-hive-hbd-market.html",
      "date"     : "2020-03-24 13:57:21 -0700",
      "desc"     : "sourceAlthough not visible,...",
      "content"  : "sourcealthough not visible, the internal market is already working and hbd can be exchanged for hive.prepare beempyyou need to have an up date beem version 0.22.8beempy updatenodes --hivebeempy currentnodeshould return now+----------+-----------------------+| key | value |+----------+-----------------------+| node-url https://api.hive.blog || 0.23.0 hive true |+----------+-----------------------+check orderbookbeempy orderbook --chart 1701.93 $ ┼ 1595.59 ┼╮ 1489.25 ┤╰─╮ ┊ 1382.90 ┤ ╰─╮ ╭─────── 1276.56 ╰╮ ╭────╯ 1170.22 ╰───╮ ╭╯ 1063.87 │ 957.53 851.19 ╭─╯ 744.84 638.50 532.16 425.81 ╰─────╮ 319.47 ╰────╮ 213.12 106.78 ╰╮┊ 0.44 ╰────╯and beempy tradehistoryreturns last trades as plot trade history 2020-03-17t20:26:22 - 2020-03-24t20:26:22hive/hbd 0.32 0.31 ╭╮ 0.30 │╰╮ 0.29 0.28 0.27 ╭─ 0.26 ╭╮╭╯ │╭──╮ ╭╯│ │││ ││ ╰─╯ 0.25 ╭╯╰╯ ╰╯ 0.24 0.23 ││╭╯ 0.22 │╰╯ 0.21 0.20 0.19 0.18 0.17 ┼───────╯a short info obtained bybeempy ticker+----------------+-------------------+| |+----------------+-------------------+| highest_bid 0.253913 hive/hbd latest 0.300000 lowest_ask 0.253994 percent_change 0.00 % sbd_volume 199.189 steem_volume 765.713 |+----------------+-------------------+let’s some hivefirst we should check our balance:beempy balance holger80and then start sell 1 hbdbeempy -a holger80 hbdi’m now asked if price ok:is following ok: hbd/hive [y/n]:and enter my active wif:password unlock wallet or posting/active wif:i see broadcasted op:wif accepted!{ expiration: 2020-03-24t20:34:03, ref_block_num: 63124, ref_block_prefix: 2805668693, operations: [ limit_order_create, { owner: holger80, orderid: 3815817900, amount_to_sell: 1.000 hbd, min_to_receive: 3.938 hive, fill_or_kill: false, 2020-03-31t20:33:33 } ] ], extensions: [], signatures: 206b30dd79130814b9f14468c573fd9154020148e43481f810343964b93bcf8c1865927d49d1e3b521ff9a2af12bd5461c2edee220b64f59108c04413c3b88cbb0 ]}and open orders:beempy openorders +------------+---------------------+------------------------------------------+----------+| orderid created order account |+------------+---------------------+------------------------------------------+----------+| 3815817900 2020-03-24t20:33:33 @ 0.253936 |+------------+---------------------+------------------------------------------+----------+cancel ordersi cancel instead of selling i also buy hiveafter checking entering wif, placed.using fulfill orderslet’s first 5 -l 5+--------------+----------------------------------------------+--------------+-------------------------------------------+| asks sum orders bids |+--------------+----------------------------------------------+--------------+-------------------------------------------+| 66.15 260.432 66.148 0.253993 1.725 0.438 240.43 637.769 174.284 0.273271 0.70 1.032 0.262 0.253876 267.93 100.000 27.500 0.275000 0.91 0.842 0.211 0.250594 283.93 53.344 16.002 0.299978 0.004 0.001 0.250000 296.29 41.191 12.357 0.299993 6.64 23.778 5.731 0.241021 |+--------------+----------------------------------------------+--------------+-------------------------------------------+i shown in column fulfilled without waiting. let’s try: 0.253993this time, wif asking price. empty this time:beempy +---------+---------+-------+---------+| |+---------+---------+-------+---------++---------+---------+-------+---------+the blockexplorer shows that was fulfilled:i hope help long has no interface. see: use access by @holger80more about python"
    } ,
  
    
    
    
    
    
    {
      "title"    : "hiveio",
      "title"    : "The Hive Blockchain Has Launched Successfully! Recap and Helpful Information",
      "category" : "news",
      "url"      : "/news/2020/03/21/the-hive-blockchain-has-launched-successfully-recap-and-helpful-information.html",
      "date"     : "2020-03-21 10:05:33 -0700",
      "desc"     : "Hello there, Hive. What a d...",
      "content"  : "hello there, hive. what a day we’ve had!welcome to the new hive blockchain. been up and running for more than 24 hours now, so this is good time take quick look at launch what’s coming immediate future.the blockchain went incredibly smoothly given pressure effort involved in getting hardfork ready such tight window.the passionate team of developers who above beyond produce changes needed did an amazing job (and got very, very little sleep.) hardforks always have chance finding “an edge case” when they go live, being prepared anything necessary. came alive, slowly worked through operations that done, produced first blocks transactions, has moving steadily ever since. no stalls or crashes, fast blocktimes, all good. it huge win whole community start us off!this short post with few important points information. weeks, there are number things need be addressed we’ll posting about here: will future upgrade hive, make some fixes, bring features online those were skipped airdrop discussing script exclusions letting decide if tokens held reserve should distributed. we also talk dhf (decentralised funding), hivedao, how can used situation others help collect feedback code repo open source public at: https://github.com/openhive-network/hive/releases . condenser (for front ends) on actively finish https://hive.blog/ mvp higher standard previous iterations, then public. as well. ecosystem alive! it’s still early, but many apps projects online, making sure spread word useful services your transition https://hiveprojects.io/ place submit own project, learn going around hive.remember goal move towards true decentralized development, anyone contribute whatever like! play work, you want see.a final notes: hive.blog wallets 🔜™️, wanting secure ways wallet peakd.com wallet, well vessel available. familiar sites ported right you’re okay waiting, options. started powerdown steem, hive! don’t forget stop to. already account waiting here read depth our info refresher. new, onboard someone check signup options https://signup.hive.io/. available future- only start! key safety matters! please consider using keychain (still under review by app stores, here’s great tutorial) hivesigner (the version steemconnect). both supported integrated them, alongside their peaklock. most frontends begun work do management solution like one these. remember witness votes from steem carry over whichever use, part governance, excellent fresh discover dedicated witnesses ecosystems. people hard life, witnesses. often feel like, vote according see support. amount witnesses, consensus (top twenty) backup, considerations believe fit. exchanges working running. ionomy full, limited fee free trading enabled. other listing pairs online. 6 airdrops, them listing. however, these done safely, lot behind scenes tech support, note process while.the buzzing, that’s thanks you. spirit energy chain invigorating…. wings.edit: fumble fingered worker bee refresh while was excited forgot decline rewards. powered longer needs delegation, continue rewards future. sorry! see: launched successfully! recap helpful information @hiveio"
    } ,
  
    
    
    
    
    
    {
      "title"    : "hiveio",
      "title"    : "Announcing the Launch of Hive Blockchain",
      "category" : "news",
      "url"      : "/news/2020/03/17/announcing-the-launch-of-hive-blockchain.html",
      "date"     : "2020-03-17 16:30:54 -0700",
      "desc"     : "After weeks of hard teamwork, we're announcing the launch of the new Hive blockchain.",
      "content"  : "the buzz is real! after weeks of hard teamwork, we’re announcing launch new hive blockchain.this an exciting time, and opportunity to channel love power a resilient tenacious community into collaborative development for future social blockchain.hive passionate effort, created by large group steem members who have long looked move towards true decentralization help develop code base. years distribution issues reliance on central entity infrastructure has been at heart revolution sorts, blockchain culmination stepping up meet challenge returning shared values protecting celebrating vibrant that grown around our ecosystem.check out faq below info hive.what why was it created?hive dpos governance implementing fork existing code.the intention this community-driven support build strong made ecosystem so diverse exciting. direction steps away from burden steemit inc. ninja-mined stake, which impacted term ability work further years.hive begun with talented committed team developers are already paving way implement much awaited improvements robust developments blockchain. see – devs business owners end users forward embrace contribute potential hive. renewed spirit, combined codebase focus working more closely entire ecosystem, key success possibilities blockchain.what difference between steem?hive runs completely independently chain. all valid accounts will receive airdrop (more details below)while chain code, take responsibility something even better. initial be direct copy few small upgrades, allow us get back discussion development, needed changes, most wanted chain-level features.the spirit goal always single point authority, capitalize encourage gathered in community. drawing huge range talent accelerate improve communication, return ease use, onboarding, marketing. desire better connect people via never lost, it’s what makes now.what happens when launches?when launches, appear network as well. you two accounts: current one steem, account, pre-populated your content information.the history these same, but snapshot onward, independent another. actions not reflected other. means transactions belong whichever account use.if post hive, show vice versa. chains another launch.when launch?the 10am est/14:00 utc, friday, march 20th. (countdown https://hive.io/) magic happen week! place time launch. where can i find hive’s code?here public open source repo hive:https://github.com/openhive-network/hive/releasesas holder, do airdrop?all stakeholders perfectly mirrored balance their holdings coin. include matching amounts liquid power, sbd. other state data, such claimed accounts, delegations, etc. onto hive.for example: if 10 5 sbd, 1000 sp, hbd, hp.you need claim anything. simply log coins wallet able start using blockchain.the only performed version (as date post). any “emergency hardforks” prior eligible. further, exchange participates hardfork null void participate its off-chain holding customers.how access my send coins?you logging keys. first frontend available https://hive.blog. currently pointed blockchain, switched time. popular interfaces completing switch over or finishing products, they ready use!who behind hive?there 30 experienced contributing alongside many multiple aspects individuals may announce participation through own future. therefore all. remain source, everyone wants testnet published, feel free comment here would like we’ll reach out. full thursday, 19th, updates account.what added?the important decisions chance proper feedback successfully launch, there some addressed immediately, including prevention exchanges participating attacks we witnessed blockchain).to prevent (or funding) attacks, day delay added crediting vests witness sps votes. changes developed community.this “powers up” stakes funds, before those used voting (witnesses) sps. actions, no immediately available.this mitigate risk while continuing system whole, without deciding collection wider input. included airdrop?the continue moving decentralization, showcased same goals.the containing inc actively contributed (and publicly declared for) centralization blockchain.these still choose part exist, intial airdrop.important notes cryptocurrency list steemdo plan taking customer’s credit them similar amount (yes/no)?yes) want airdrop, please notify distribute pro-rata basis customers (no fixed timeline required), corresponds hive.no) notification steem-holding forewarn participating, temporarily withdraw date, wish airdrop.if possible, let know 19 airdrop.you leaving message official contact liaisons: gandalf (located europe)telegram: @gandalf_the_greyemail: gandalf@hive.expert david jefferys us)telegram: @djefferysdirect follow-ups made, affirmative response days assume doesn’t customer balances.we’re looking hive!there’s lot come during extremely busy week, updated reflect information becomes available.thank community, being buzz. what’s ahead involved… #hiveisalive!https://hive.io/ see: @hiveio"
    } 
  
]
