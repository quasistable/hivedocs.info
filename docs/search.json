[
  
    
    
    
    
    
    {
      "author"    : "mahdiyari",
      "title"    : "Making a Decentralized Game on Hive - Part 4",
      "category" : "howto, nodejs",
      "url"      : "/howto/nodejs/2021/04/01/making-a-decentralized-game-on-hive-part-4.html",
      "date"     : "2021-04-01 10:09:48 -0700",
      "desc"     : "Let's start by implementing the API for retrieving the games list. Our API is public so it doesn't require user authentication. The API will just return the data synced from the blockchain.",
      "content"  : "![coding-pixabay.jpg](https://images.hive.blog/dqmbqyppfu2dpwykn9gvjdmmjbfukkvzz8bwqk7epyswp9w/macbook-2617705_1280.jpg)in the [previous part](https://hive.blog/hive-139531/@mahdiyari/making-a-decentralized-game-on-hive-part-3), we made a back-end that is streaming blocks and detects 3 methods in custom_json. create game, request to join accept request. also set up mysql server with tables for methods.you can find links other parts at end of post.### apilet's start by implementing api retrieving games list. our public so it doesn't require user authentication. will just return data synced from blockchain.`api/games.js`:```const = require('../helpers/mysql')const express require('express')const router express.router()// all on route /gamesrouter.get('/games', async (req, res) =&gt; { try // get database const await mysql.query( 'select `game_id`, `player1`, `player2`, `starting_player`, `status`, `winner` `games`' ) check expected result if (!games || !array.isarray(games) games.length &lt; 1) id: 1 success 0 errors res.json({ 1, games: [] }) } `games` as receive but it's not good practice specially when you have critical one like `games: [{game_id: games.game_id, ...}]` catch (e) error unexpected connection drops 0, error: 'unexpected error.' }})module.exports router```the comments are code itself better understanding.note: use `try{} catch{}` wherever can. always handle errors.we test this point detect possible code.include following `api/server.js` above `port` `host` constants.```const require('./games')app.use(games)```run `node api/server.js`. see console.log: `application started 127.0.0.1:2021`let's open `127.0.0.1:2021/games` browser.![image.png](https://images.hive.blog/dqmbtkvabtub6ndh8hwuvku8nuizv3jovu94jtemaeu1vsx/image.png)the works expected.but done yet. returns without specific order. should implement pagination define an order list.updated `api/games.js`:```const express.router()router.get('/games/:page', (isnan(req.params.page)) 'expected number.' page math.floor(req.params.page) (page &gt; 0' offset - * 10 + ' `id` desc limit ?', [offset] router```we used list newly created first. each games. `127.0.0.1:2021/games/1` testing.***let's another requests. almost similar only requests game_id.`api/requests.js`:```const express.router()router.get('/requests/:id', (!req.params.id) game_id.' passing input into be careful such cases ? parameters which escapes characters `player`, `status` `requests` where `game_id`= [req.params.id] (!requests !array.isarray(requests) requests.length requests: router```note: `:id` represents variable named id. example `http://127.0.0.1:2021/requests/mygameidhere` request, `mygameidhere` accessible `req.params.id`.***a `moves` table. there wasn't name my mind table.`api/moves.js`:```const express.router()router.get('/moves/:id', moves `col`, `row` (!moves !array.isarray(moves) moves.length moves: router```now apis ready implemented front-end.***here updated after including apis:```const bodyparser require('body-parser')const hpp require('hpp')const helmet require('helmet')const app express()// more info: www.npmjs.com/package/hppapp.use(hpp())app.use(helmet())// support json encoded bodies bodiesapp.use(bodyparser.json())app.use(bodyparser.urlencoded({ extended: true }))app.use(function res, next) res.header( 'access-control-allow-origin', 'http://localhost https://tic-tac-toe.mahdiyari.info/' res.header('access-control-allow-credentials', true) 'access-control-allow-headers', 'origin, x-requested-with, content-type, accept, access_key' next()})// apisconst require('./games')const require('./requests')const require('./moves')app.use(games)app.use(requests)app.use(moves)const port process.env.port 2021const host process.env.host '127.0.0.1'app.listen(port, host, () console.log(`application ${host}:${port}`)})```***### front-endi think using pure html mistake i would prefer something angular web applications comes its own learning process make tutorial complex. recommendation learn or vue live happy life. anyway, coding time.i'm going drop `index.html` here. need much explanation long. [gitlab repository](https://gitlab.com/mahdiyari/decentralized-game-on-hive/-/blob/master/front-end/index.html). add some references here `app.js`.the table listing buttons pagination.`index.html`:``` auto updating every 5s # game id player 2 starting status winner action &laquo; &raquo; ```***we fill above. let's basic functions.`js/app.js`:```const baseapi 'http://127.0.0.1:2021'const apicall (api) (await fetch(baseapi api)).json()}```for ease use, function `get` calls `fetch` address.***```const getgames apicall('/games/' page) games.games}```this basically gets per page.***```const fillgamestable (data) tbody document.getelementbyid('games-table-body') let temp '' (let 0; data.length; i++) += ` ${(gamespage 1} ${data[i].game_id} ${data[i].player1} ${data[i].player2} ${data[i].starting_player} ${data[i].status} ${data[i].winner} (data.length 'no games.' tbody.innerhtml temp}````fillgamestable` takes `getgames` fills `for` loop.***```let gamespage 1const loadthegames getgames(gamespage) fillgamestable(games) (games.length 10) document.getelementbyid('next-btn').classname 'page-item disabled' else 'page-item' (gamespage === document.getelementbyid('prev-btn').classname document.getelementbyid('page-number').innerhtml ${gamespage} `}loadthegames()setinterval(() loadthegames(), 5000)```with function, call two previously defined functions do their job update number time data. also, 5 seconds, new updates users don't reload data.***```const nextgamespage gamespage++ loadthegames()}const prevgamespage gamespage-- loadthegames()}```and changing pages. simple that.***the final dummy looks browser:![capture.png](https://images.hive.blog/dqmcyzc1vixajrw4ui5dhisfty5myqeyzhxy2bd2ituz4ar/capture.png)***that's part. i'm really results getting. didn't plan anything beforehand writing posts.today front-end now shows submitted hive blockchain. next part, creating joining client side. probably actual gaming happens.thanks reading. sure follow me share post. upvote leave comment.***[gitlab](https://gitlab.com/mahdiyari/decentralized-game-on-hive)[part 1](https://hive.blog/hive-139531/@mahdiyari/making-a-decentralized-game-on-hive-tic-tac-toe-part-1)[part 2](https://hive.blog/hive-139531/@mahdiyari/making-a-decentralized-game-on-hive-part-2)[part 3](https://hive.blog/hive-139531/@mahdiyari/making-a-decentralized-game-on-hive-part-3)*****vote witness:**- https://wallet.hive.blog/~witnesses- https://peakd.com/witnesses- https://ecency.com/witnesses see: making decentralized part 4 @mahdiyari"
    } ,
  
    
    
    
    
    
    {
      "author"    : "quochuy",
      "title"    : "My new contributions to the Hive Condenser and Wallet apps.",
      "category" : "news, nodejs, condenser",
      "url"      : "/news/nodejs/condenser/2021/03/30/5ejnqa-my-new-contributions-to-the-hive-condenser-and-wallet-apps.html",
      "date"     : "2021-03-30 04:14:36 -0700",
      "desc"     : "Report on my new development contributions to the software that powers Hive.Blog",
      "content"  : "## contexti have been involved (voluntarily) with the development of condenser &amp; wallet apps (that are powering https://hive.blog and https://wallet.hive.blog) for quite a while now. there other great frontends to hive out such as https://peakd.com https://ecency.com but i always more or less faithful condenser.this is regular report on my new contributions.*some work below might still be in test not yet deployed.*## display message when community search does return any result@inertia raised [this issue](https://gitlab.syncad.com/hive/condenser/-/issues/123) where searching non-existing would refresh current list communities which an ideal experience tit useful that tells user searched keywords matching results.![community search](https://gitlab.syncad.com/hive/condenser/uploads/d62922fd5986b9b2741360b62480e92f/screen_shot_2021-03-30_at_10.06.23_pm.jpg)merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/225## fix functionalityrecently, this blog was broken. page just kept displaying spinning loading indicator results were never displayed. several users issue it important feature. i've had look fixed took opportunity also add ability sort by newest, popularity relevance. later on, will advanced posts from specific tag.![search content](https://gitlab.syncad.com/hive/condenser/uploads/f4fa269f197f03c507772d2d594e54d4/screen_shot_2021-03-29_at_9.39.13_pm.jpg)merge https://gitlab.syncad.com/hive/condenser/-/merge_requests/230---**vote witness**[![support @quochuy witness.jpg](https://images.hive.blog/dqmecytzemy8swu6rrg7awhpnrbsehup7ivk9rgyzsuupvw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1)on hive, witnesses playing role providing performant safe network all us. you power choose 30 trusty package transactions sign blocks go blockchain. [vote me via hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1) support community. see: contributions apps."
    } ,
  
    
    
    
    
    
    {
      "author"    : "primersion",
      "title"    : "Changing your recovery account and recovering your account using python",
      "category" : "howto, beem, python, account",
      "url"      : "/howto/beem/python/account/2021/03/29/changing-your-recovery-account-and-recovering-your-account-using-python.html",
      "date"     : "2021-03-29 12:39:09 -0700",
      "desc"     : "With all of the recent scams and phishing websites here on HIVE the topic of recovery accounts has come up again.",
      "content"  : "![python_logo_and_wordmark.svg.png](https://files.peakd.com/file/peakd-hive/primersion/23wqedp3ozmpklo8xveu41o1fcwu7grkcsyncrsam5u73bhh4nocyd6azpwmzjpwk8gxc.png)with all of the recent scams and phishing websites here on hive topic recovery accounts has come up again. a lot people still have there account set to @steem or account, which created their e.g. @esteemapp @blocktrades.setting you trust is really important in case someone taking over your account. otherwise hardly earned will be lost no way recovering it. when choosing it choose someone, who can identify you.---i myself use another i as my keys are locked away not easily accessible by an attacker. but this may best solution for everyone. particular @recovery.hive @primersion @recovery.hive.the only attacker would able steal funds gain access both if should happen, own fault ;)---changing quite easy. tools like one @arcange [over here](https://tools.hivechain.app/recovery/) @reazuliqbal find here](https://reazuliqbal.com/hiveaccountrecovery/) change directly [peakd.com](https://peakd.com) under settings -&gt; &amp; permissions. small python script wrote:```#!/usr/bin/python3from beem import hivefrom beem.nodelist nodelistfrom beem.account accountnodelist = nodelist()nodelist.update_nodes()nodes nodelist.get_hive_nodes()account_name input(enter name: )owner_key private owner key: )new_recovery_account new account: )hive hive(node=nodes, keys=[owner_key])account account(account_name, blockchain_instance=hive)account.change_recovery_account(new_recovery_account)print(successfully changed account)```you enter name key does rest you. please careful using pasting key.---in addition that wrote (if main account). based information provided [here steem](https://developers.steem.io/tutorials-python/account_recovery) was adapted hive:```#!/usr/bin/python3import beembasefrom accountfrom beem.transactionbuilder transactionbuilderfrom beemgraphenebase.account passwordkeyfrom beembase.objects permissionfrom nodelist# acquire node listnodelist nodelist.get_hive_nodes()# capture user informationusername input('account recovered: ')old_password input('recent password ')new_password input('new ')recovery_account (recovery account): ')recovery_account_private_key active ')# create keysnew_account_owner_private_key passwordkey(username, new_password, role='owner').get_private_key()new_account_owner_private_key_string str(new_account_owner_private_key)new_account_owner_public_key str(new_account_owner_private_key.pubkey)# old keysold_account_owner_private_key old_password, role='owner').get_private_key()old_account_owner_private_key_string str(old_account_owner_private_key)old_account_owner_public_key str(old_account_owner_private_key.pubkey)new_owner_authority { key_auths: [ [new_account_owner_public_key, 1] ], account_auths: [], weight_threshold: 1}# request data object creationrequest_op_data 'account_to_recover': username, 'recovery_account': recovery_account, 'new_owner_authority': new_owner_authority, 'extensions': []}# operation creationrequest_op beembase.operations.request_account_recovery(**request_op_data)print('request_op_data')print(request_op_data)# broadcasthive keys=[recovery_account_private_key])request_result hive.finalizeop(request_op, active)print('request_result')print(request_result)recent_owner_authority [old_account_owner_public_key, 1}op_recover_account_data 'recent_owner_authority': recent_owner_authority, []}op_account_update_data active: [str(passwordkey(username, role='active').get_private_key().pubkey), 1 }, posting: role='posting').get_private_key().pubkey), memo_key: str(passwordkey(username, role='memo').get_private_key().pubkey), json_metadata: }op_recover_account beembase.operations.recover_account(**op_recover_account_data)print('op_recover_account')print(op_recover_account)tb transactionbuilder(blockchain_instance=hive)tb.appendops([op_recover_account])tb.appendwif(str(old_account_owner_private_key))tb.appendwif(str(new_account_owner_private_key))tb.sign()result tb.broadcast()print('result')print(result)op_account_update beembase.operations.account_update(**op_account_update_data)print('op_account_update')print(op_account_update)hive keys=[new_account_owner_private_key])tb transactionbuilder(blockchain_instance=hive)tb.appendops([op_account_update])tb.appendwif(str(new_account_owner_private_key))tb.sign()result tb.broadcast()print('result')print(result)```you recovered, actual remaining stuff creating request, updating done script.---##### update right now @steem---which just some well-known trustworthy account?---like what am doing - support me voting [hive](https://vote.hive.uno/?witness=primersion) / [hive-engine](https://votify.now.sh/primersion) witness. see: changing"
    } ,
  
    
    
    
    
    
    {
      "author"    : "mahdiyari",
      "title"    : "Making a Decentralized Game on Hive - Part 3",
      "category" : "howto, nodejs",
      "url"      : "/howto/nodejs/2021/03/28/making-a-decentralized-game-on-hive-part-3.html",
      "date"     : "2021-03-28 13:31:39 -0700",
      "desc"     : "In the previous parts, we made a simple front-end with login functionality and initialized our API and back-end application with streaming.",
      "content"  : "![coding-1853305_1280.jpg](https://images.hive.blog/dqmebmvq9rane3j2qh1rrtdaweyq2bzo81ik3wsnxygbp3e/coding-1853305_1280.jpg)this part took a little longer because it was actually time-consuming (also i break). the process is getting harder so might take few days than expected for coming parts but will do my best.in previous parts, we made simple front-end with login functionality and initialized our api back-end application streaming. ([part1](https://hive.blog/hive-139531/@mahdiyari/making-a-decentralized-game-on-hive-tic-tac-toe-part-1) [part2](https://hive.blog/hive-139531/@mahdiyari/making-a-decentralized-game-on-hive-part-2))## mysql setupyou can use apps like [ampps](https://www.ampps.com/) which comes other tools phpmyadmin (one of best management apps) or install directly. have ammps on windows docker linux. installation:```docker pull mysql/mysql-server:latest```i create folder `/root/mysql-docker1` put config file there `my.cnf` another `data` holding database files.running port `127.0.0.1:3306`:```docker run --name=mysql1 --mount type=bind,src=/root/mysql-docker1/my.cnf,dst=/etc/my.cnf type=bind,src=/root/mysql-docker1/data,dst=/var/lib/mysql -p 127.0.0.1:3306:3306 -d mysql/mysql-server:latest```there are different ways to tune your server based hardware i'm not going talk about. following medium-range (32gb ram).`my.cnf`:```[mysqld]skip_name_resolveuser=mysqldefault_authentication_plugin = mysql_native_passwordsymbolic-links=0character_set_server=utf8mb4collation_server=utf8mb4_general_ciinnodb_max_dirty_pages_pct 90innodb_max_dirty_pages_pct_lwm 10innodb_flush_neighbors 0innodb_undo_log_truncate=offmax_connect_errors 1000000# innodb settingsinnodb_file_per_tableinnodb_log_files_in_group 2innodb_open_files 4000default_storage_engine innodbinnodb_buffer_pool_instances 8 # 1 instance per 1gb pool sizeinnodb_buffer_pool_size 16g up 70-80% raminnodb_flush_method o_direct_no_fsyncinnodb_log_buffer_size 64minnodb_log_file_size 10ginnodb_stats_on_metadata 0# tuneinnodb_doublewrite= 1innodb_thread_concurrency 0innodb_flush_log_at_trx_commit 0innodb_lru_scan_depth 2048innodb_page_cleaners 4join_buffer_size 256ksort_buffer_size 256kinnodb_use_native_aio 1innodb_stats_persistent 1innodb_adaptive_flushing 1innodb_read_io_threads 16innodb_write_io_threads 16innodb_io_capacity 1500innodb_io_capacity_max 2500innodb_purge_threads 4innodb_adaptive_hash_index 0max_prepared_stmt_count 1000000innodb_monitor_enable '%'performance_schema onkey_buffer_size 512m# connection settingsmax_connections 2000 updback_log 3000interactive_timeout 180wait_timeout 10table_open_cache 200000 updtable_open_cache_instances 64open_files_limit 100000 upd```note: restart after updating the`my.cnf` file.mysql password `mysql` setup, think you get from `docker logs mysql1`. anyway, many documentations about already internet.create `tictactoe`. it's easier if using ampps. try heidisql.here sql command creating database:```create `tictactoe`;```***## developmentlet's information app. this as `config.example.js` in repository rename manually.`config.js`:```const { dbname: 'tictactoe', dbuser: 'root', dbpassword: 'password', dbhost: '127.0.0.1', dbport: 3306}module.exports config```***i personal code pooling. simply makes custom async function just original connect [mysqljs](https://github.com/mysqljs/mysql) library pooling connections.`helpers/mysql.js`:```const require('mysql')const require('../config')const mysql.createpool({ connectionlimit: 5, host: config.dbhost, port: config.dbport, user: config.dbuser, password: config.dbpassword, database: config.dbname, charset: 'utf8mb4'})// rewriting query method promiseconst con {}con.query (query, val) =&gt; (val) const qu await new promise((resolve, reject) pool.query(query, val, (error, results) (error) reject(new error(error)) resolve(results) }) return } else }}module.exports con```it creates 5 connections more enough game.and course:```npm mysql```***#### initializing databasewe make necessary tables they don't exist already.`helpers/initdatabase.js`:```const require('./mysql')/** * id, game_id, player1, player2, starting_player, status, winner */const tablegames 'create table exists `tictactoe`.`games` ( `id` int null auto_increment , ' + '`game_id` tinytext '`player1` `player2` default '`starting_player` `status` '`winner` primary key (`id`)) 'engine charset=utf8mb4 collate utf8mb4_general_ci;'/** player, col, row tablemoves `tictactoe`.`moves` `player` '`col` int(1) `row` 'primary engine utf8mb4_general_ci;'const tablerquests `tictactoe`.`requests` initdatabase () mysql.query(tablegames) mysql.query(tablemoves) mysql.query(tablerquests)}module.exports initdatabase```#### created tables`games`![tablesqlgames.png](https://images.hive.blog/dqmvcmynzax6xd6kcc2vzijgjma9qbt8myeev7jf8kmcqxe/image.png)`moves`![tablesqlmoves.png](https://images.hive.blog/dqmvwydzg1n3ketedgfa5ndmheukjpnghzemizbxxhh3xps/image.png)`requests`![image.png](https://images.hive.blog/dqmqlxfwkefwsq614vwb6qfunvmsyifgnkeh5nswckyfqqv/image.png)***#### main applicationnow complete game methods `index.js`:`creategame````const creategame (data, user) (!data || !data.id !data.starting_player) // validating data.id.length !== 20 (data.starting_player 'first' &amp;&amp; data.starting_player 'second') ) check existing games duplicate mysql.query( 'select `games` where `game_id`= ?', [data.id] (duplicate array.isarray(duplicate) duplicate.length &gt; 0) add 'insert into `games`(`game_id`, `player1`, `starting_player`, `status`) values (?, ?, ?)', [data.id, user, data.starting_player, 'waiting'] )}```***`requestjoin````const requestjoin !data.id.length 20) id `player1` ? `status`= (!game !array.isarray(game) game.length &lt; 1) players play themselves (game[0].player1 === open requests `requests` (`player`= 'accepted'] (requests array.isarray(requests) requests.length request join `requests`(`game_id`, `player`, )}```***`acceptrequest````const acceptrequest !data.player validate `player`= data.player, (!requests !array.isarray(requests) accept update status 'update set `player2`=?,`status`=? `game_id`=?', [data.player, 'running', data.id] `status`=? `game_id`=? `player`=?', ['accepted', data.id, data.player] )}```***some updates `processdata`:```const processdata (jsondata, postingauths) (!jsondata) data json.parse(jsondata) !data.action !data.app) !postingauths !array.isarray(postingauths) postingauths.length user postingauths[0] (data.action 'create_game') creategame(data, 'request_join') requestjoin(data, 'accept_request') acceptrequest(data, 'play') play(data, catch (e) error be json.parse wrong json format }}```and streaming function:```try stream.streamblockoperations((ops) (ops) op ops[0] (op op[0] 'custom_json' op[1].id 'tictactoe') processdata(op[1].json, op[1].required_posting_auths) })} throw error(e)}```***i part. let's finish before sleep keyboard.we script 3 tables. now processing functions working expected. game, requesting accepting requests.we these next hard `play` holds rules.upvote leave comment. sure follow me share post.thanks reading.***[gitlab](https://gitlab.com/mahdiyari/decentralized-game-on-hive)[part1](https://hive.blog/hive-139531/@mahdiyari/making-a-decentralized-game-on-hive-tic-tac-toe-part-1)[part2](https://hive.blog/hive-139531/@mahdiyari/making-a-decentralized-game-on-hive-part-2)*****vote witness:**- https://wallet.hive.blog/~witnesses- https://peakd.com/witnesses- https://ecency.com/witnesses see: making decentralized hive - by @mahdiyari"
    } ,
  
    
    
    
    
    
    {
      "author"    : "geekgirl",
      "title"    : "Using Hive Blockchain Custom Json Operation with Python &amp; Beem",
      "category" : "howto, beem, python, custom_json",
      "url"      : "/howto/beem/python/custom_json/2021/03/22/using-hive-blockchain-custom-json-operation-with-python-and-beem.html",
      "date"     : "2021-03-22 20:43:24 -0700",
      "desc"     : "If you would like to know more about what is stored in Hive blocks and and curious about various Hive operations, feel free to read my Exploring Hive Blocks post.",
      "content"  : "![hivewp20.png](https://images.hive.blog/dqmcxevn33sph3ampajur46mcxbm4gzfkyupgof5aahqnzq/hivewp20.png)image by @dozeone of hive blockchain's powerful features is its custom_json operation. normally, users don't even see and hear about this operations. however, operation enables developers to store their game or web application data on the blockchain. if you would like know more what stored in blocks curious various operations, feel free read my [exploring blocks](https://leofinance.io/@geekgirl/exploring-hive-blocks) post.in post i share how broadcast operations blockchain, retrieve them afterwards using beem module python. a python created @holger80, makes easy connect blockchain interact with it programming language.custom_json one many hive. allow applications as text json format. sine native javascript format widely used website applications, super create apps games that use decentralized solutions.**broadcasting transaction blockchain**every block has size limit 65536 bytes. which means we can only characters including all properties block. believe parameters witnesses change they wish based demand, infrastructure, scaling, etc. for now foreseeable future limitation every developer should consider.another each limited 8192 bytes characters. possible multiple within transaction. face another there. 5 broadcasting account. before get code, thing keep mind is, once built it, return value doesn't not give number where stored. because when wait until produced. couple minutes after produced available us back values `expiration`, `ref_block_num` `ref_block_prefix`. these three find our in. so search entire form beginning, also decided current broadcasting. way start searching starting from number.following code operations:```from beem.transactionbuilder import transactionbuilderfrom beembase.operations custom_jsonfrom hivefrom beem.blockchain beem.block blockfrom helper wif, name beem.nodelist nodelistfrom pprint pprintnodelist = nodelist()nodelist.update_nodes()nodes nodelist.get_hive_nodes()hive hive(node=nodes, nobroadcast=false, keys={'posting': wif})blockchain blockchain(hive)current_block_num blockchain.get_current_block_num()tx transactionbuilder(blockchain_instance=hive)for range(1,6): txt str(i) * 8100 {} data['data'] cj { required_auths: [], required_posting_auths: [name], id: librarian, json: } tx.appendops(custom_json(cj))tx.appendwif(wif)signed_tx tx.sign()broadcast_tx tx.broadcast()print(current_block_num)print(broadcast_tx)```main pay attention transactionbuilder. allows build then it. account keys separate file named helper.py, imported variables wif sign posting key was enough.we add upto .appendops() method. everything else be self-explanatory. ask comments something make sense. will happy explain line.now last two print statements show broadcasted, happened. need printed returned broadcasted transactions such `ref_block_num`, ```from pprintfrom blockchainfrom nodelistnodelist hive(node=nodes)start_block_num 52374262blockchain blockchain(hive)end_block_num blockchain.get_current_block_num()exp '2021-03-23t02:08:41'rbn 10998rbp 3231133325def get_data(start, end, exp, rbn, rbp): ref [] num range(start, end): block(block=num, blockchain_instance=hive) b block.json() i, tr enumerate(b['transactions']): tr['expiration'] == exp tr['ref_block_num'] rbn tr['ref_block_prefix'] rbp: print(i) print(b['id']) print(b['timestamp']) print(tr['operations']) print(b['transaction_ids'][i]) ref.append(b['id']) ref.append(i) refref get_data(start_block_num, end_block_num, rbp)print('-----')print(ref)bb block(block=ref[0])bb bb.json()bb bb['transactions'][ref[1]]bb bb['operations'][0]['value']['json']print(bb)```what above does searches nearest known numbers. found displays are for. provides at. now, want reference use. next time same data, just instead iterating through save time.if have number, easily following:```block_num 52374284block block(block=block_num, blockchain_instance=hive)b block.json()pprint(b)```one do resource credits. an 1006 hp test codes above. had size. took less than 1% credits transaction.i hope useful. let me your thoughts. also, there better ways retrieving python.posted [leofinance beta](https://leofinance.io/@geekgirl/using-hive-blockchain-custom-json-operation-with-python-and-beem) see: custom &amp; @geekgirl"
    } ,
  
    
    
    
    
    
    {
      "author"    : "keys-defender",
      "title"    : "Phishing on Hive? No more. Solution for all Frontends.",
      "category" : "news, devops, security",
      "url"      : "/news/devops/security/2021/03/17/phishing-on-hive-no-more-solution-for-all-frontends.html",
      "date"     : "2021-03-17 00:06:09 -0700",
      "desc"     : "Universal script to prevent phishing in all Hive frontends",
      "content"  : "one &nbsp; script to rule them all..https://files.peakd.com/file/peakd-hive/keys-defender/23uex3ge6ahmeaqbnu2kxp3evamdsbromagsyrkdrpsguhc7sjst6gkuupo7mofq9ygo6.png-----problem:in the past few weeks hive has been plagued by phishing campaigns and some users lost access their account or funds. this is nothing new going on for years ~~steem~~ hive. https://files.peakd.com/file/peakd-hive/keys-defender/23ynflmyq7cub6dz3dkgy3ibknfc8dcegkhimrjjhbrtevftgbzsfaf8sxegpyrqm4eg4.pngto make things worse, registrars are not quick enough take down domains..https://files.peakd.com/file/peakd-hive/keys-defender/243mpztbbydu6fhr6snsbbtj3vsmbjk9kgl2at8pnztrieqmsymwgamwgeapydzvtfb5e.pngsrcit time that community tries mitigate issue own.potential solution:use a plug-and-play universal (or modified copy of it) all frontends can integrate block links in timely matter. as soon campaign starts attacker's domain spotted added blacklist api (eg. @spaminator's), would immediately attack at same leave user experience unaffected.as matter fact, what i worked days.- here frontends: https://github.com/keys-defender/hive/blob/master/scripts/universal-bridge-against-phishing.js- demo website with my action: https://keys-defender.github.io/hive*note* : page will be sanitized until you: 1. navigate https://cors-anywhere.herokuapp.com/corsdemo click request temporary button, 2. refresh website.i have proved working on: &nbsp;(see screenshots below)hive.blog - https://hive.blog @blocktrades @quochuy peakd https://peakd.com @asgarth, @jarvieleofinance https://leofinance.io @khaleelkaziecency https://ecency.com @good-karma3speak https://3speak.tv @theycallmedan, @starkerzd.buzz https://d.buzz @chrisricestem social https://stem.openhive.network @lemouthstem geeks https://stemgeeks.net @enforcer48 ?it great if each frontend maintaner could review it adapt needs (if they need -- tested major already did seem unwanted side effects). highly recommend though integration thoroughly regression before it's used production.fyi also for:anonramblings @emrebeyler, dtube @heimindanger, engage @arcange, engrave @engrave, @nicniezgrublem, hive-db @jesta, hive-engine @aggroed, hiveblockexplorer @penguinpablo, hiveblocks @roadscape, hiveengine @holger80, quello @tobias-g, ...+ other project maintaners: @yabapmatt, @stoodkev, @louis88, @mahdiyari, @acidyo, @fbslo, @rishi556.(apologies mass tag)i believe blocking an unified way possible despite different tech stacks use. does no which framework maintainer develop reactjs, angularjs, vuejs, jquery, vanilla js, etc). using js global overrides prevent from falling victim phishing.what do?it uses native apis offered browsers order images discovered published into blacklist.- any known link ui red strikethrough-ed. furthermore you you'll see alert telling won't allow frontend.- image marked attempt text saying claim your $ 1000 tokens www.justinscam.com) displayed variant its url public blacklist.more details follow towards end post list features browser hardened (ie. iframes, scripts, window open, xhr requests, fetch api).usage:how difficult try out hive-powered website?integrating very **straightforward**. it, simply add ` see: hive? more. solution frontends. @keys-defender"
    } ,
  
    
    
    
    
    
    {
      "author"    : "inertia",
      "title"    : "Devportal Python Tutorial Review Complete",
      "category" : "howto, beem, python",
      "url"      : "/howto/beem/python/2021/03/16/devportal-python-tutorial-review-complete.html",
      "date"     : "2021-03-16 22:05:21 -0700",
      "desc"     : "For this merge, I've continued to spend the last few weeks on the python tutorials.",
      "content"  : "prior to this merge, the bulk of my work was on [the javascript tutorials](https://peakd.com/hive/@inertia/hive-developer-portal-update-language-tutorials-et-al). after proposal got funded, i able [dig deep into api definitions and begin python tutorials](https://peakd.com/hive-139531/@inertia/hive-devportal-update-sdk-references-python-tutorials).for i've continued spend last few weeks tutorials. there are 30+ tutorials ranging from how vote account recovery.most them were written with previous chain in mind. as such, they all used chain's official library. now, use [beem](http://beem.readthedocs.io/) instead, because beem rocks.anyway, here newly audited tutorials:http://developers-staging.hive.io/tutorials/#tutorials-pythonrelated merge:https://gitlab.syncad.com/hive/devportal/-/merge_requests/66this update also tracks new bridge changes (hivemind/communities), [thanks information provided by openapi](https://peakd.com/openapi/@inertia/questions-about-hivemind-api-documentation).---one i'm particularly proud is one about delegations:https://developers.hive.io/tutorials-python/delegate_power.htmlbefore changes, it technically correct, which admit best kind correct](https://www.youtube.com/watch?v=hou0lu8wmgo). but addition, wanted clarify tutorial, code examples, that it's present hive power end-user, not vests.while fine write scripts deal vests, most people never encounter them. only that, amount vs. vests always changes. like, right at time writing, 527.344 worth 1,000,000 vests. that's a very intuitive conversion, especially since continuously.so added steps capture inputs turn back blockchain wants vests.that's just an example kinds principles practices want enforce devportal, much possible. wrote 20 short programs yesterday. wonderful. perl, leaving you.next, i'll do same review audit for ruby tutorials, somehow don't think will take long.---if you'd like current proposal:[https://hivesigner.com/sign/update-proposal-votes?proposal_ids=[151]&amp;approve=true](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=[151]&amp;approve=true)also see: https://peakd.com/proposals/inertia devportal tutorial complete @inertia"
    } ,
  
    
    
    
    
    
    {
      "author"    : "arcange",
      "title"    : "Hive Account Recovery - Major update and new User Interface",
      "category" : "tools",
      "url"      : "/tools/2021/03/16/hive-account-recovery-major-update-and-new-user-interface.html",
      "date"     : "2021-03-16 15:26:24 -0700",
      "desc"     : "The Hive Recovery webpage has been revamped to make it easier to perform an account recovery. Check out the new UI.",
      "content"  : "![](https://i.imgur.com/bvz67yj.png)last week, i deployed an [update to the hive recovery service](/hive-139531/@arcange/hive-account-recovery-update). is a service that runs continuously and on its own help you secure recover your account if it were be compromised.the latest wave of phishing currently raging growing number accounts have been hacked recently make process more than topical.i had provide assistance users who wanted change their account. allowed me realize how procedure can seem complex for some. other hand, it's always good thing review basics, things (think you) mastered obvious but not others.this previous update dive back into code associated recovering realized was fully satisfied with proposed solution could still greatly improved, mainly at user interface level. also needed better edge cases error handling feedback users.therefore, decided go drawing board redesign transform what may achieve something simple intuitive.### introducing v2.0the new [**hive web page**](https://tools.hivechain.app/recovery) has radically simplified now clearly reflects 3 steps process:![](https://i.imgur.com/im6vods.png)1. set @hive.recovery as trusted partner.2. should compromised, request initiate process3. once done so, confirm finalize process.i will here all details regarding use this brand ui. available in updated [hive guide](/hive/@hive.recovery/userguide). avoid turning post wall text pictures. anyway, are few screenshots interface.### quick overview process**navigate https://tools.hivechain.app/recovery**the first do enter username (without @) hit or click check button. name valid, button light up allow it.![](https://i.imgur.com/ztyy1z0.png)&gt; **note:** already account, turn green. next step perform again want settings.#### 1. changing accountafter clicking button, following form displayed:![](https://i.imgur.com/hui2s0h.png)refer guide](/hive/@hive.recovery/userguide) information fill step.once completed step, wait 30 days before actually becomes ![](https://i.imgur.com/dzubbxc.png)#### 2. requesting accountshould head website](https://tools.hivechain.app/recovery) process. after validating username, turned green (meaning account) page enabled![](https://i.imgur.com/94vb8cg.png)![](https://i.imgur.com/dyxb0ip.png)once again, refer happen when step.@hive.recovery provided correct, automatically take place within minutes.![](https://i.imgur.com/oyrrjty.png)you then 24 hours account.#### 3. confirming account.this very last step. control process![](https://i.imgur.com/jiakocw.png)after entering required confirmation send blockchain, keys everything gone well.![](https://i.imgur.com/pqgsgu6.png)hooray, recovered account!### please read guide!check out complete detailed description entire process.the covers any questions might about security, privacy be.### too lateas mentioned beginning post, led several occasions assist them.unfortunately, some them @steem chosen no longer active does respond request. pity we themtherefore, current one inappropriate.it's lot work create improve easy possible non-tech-savvy users. would shame advantage it.take care account!## https://tools.hivechain.app/recovery---### my apps services### [vote witness ![](https://i.imgur.com/2bi4snt.png)](https://hivesigner.com/sign/account-witness-vote?witness=arcange&amp;approve=1)&lt;/div&gt; see: - major by @arcange"
    } ,
  
    
    
    
    
    
    {
      "author"    : "mahdiyari",
      "title"    : "Making a Decentralized Game on Hive - Part 2",
      "category" : "howto, nodejs",
      "url"      : "/howto/nodejs/2021/03/16/making-a-decentralized-game-on-hive-part-2.html",
      "date"     : "2021-03-16 08:22:15 -0700",
      "desc"     : "In this part, we work on the back-end of the game.",
      "content"  : "![code-944499_1280.jpg](https://images.hive.blog/dqmzn8id8sqbqnn8rngjku4sckqh6pkapbh6qqtbrby1man/code-944499_1280.jpg)previously in [part 1](https://hive.blog/hive-139531/@mahdiyari/making-a-decentralized-game-on-hive-tic-tac-toe-part-1), we made a simple front-end and login option with posting key.in this part, work on the back-end of game. use [nodejs](https://nodejs.org/en/) for running our codes. i assume you know how to create or run nodejs app. it's not complicated will cover most it here.## api server`api/server.js` is starting point server. let's initialize expressjs some libraries usage.```const express = require('express')const bodyparser require('body-parser')const hpp require('hpp')const helmet require('helmet')const app express()// more info: www.npmjs.com/package/hppapp.use(hpp())app.use(helmet())// support json encoded bodies bodiesapp.use(bodyparser.json())app.use(bodyparser.urlencoded({ extended: true }))app.use(function (req, res, next) { res.header( 'access-control-allow-origin', 'http://localhost https://tic-tac-toe.mahdiyari.info/' ) res.header('access-control-allow-credentials', true) 'access-control-allow-headers', 'origin, x-requested-with, content-type, accept, access_key' next()})const port process.env.port || 2021const host process.env.host '127.0.0.1'app.listen(port, host, () =&gt; console.log(`application started ${host}:${port}`)})```don't forget install npm packages.```npm expressnpm body-parsernpm hppnpm helmet````hpp` `helmet` are increased security `body-parser` parsing request bodies.i also added `http://localhost` `https://tic-tac-toe.mahdiyari.info/` `access-control-allow-origin` header. can add another url receive calls from just put `*`. basically limits usage server listed urls.our listen `127.0.0.1:2021` by default. does nothing at moment. continue main application.***## applicationwe 2 apps. one other application where streaming blocks processing data happening. reason splitting applications cluster mode. mode, each cpu core. help load balancing keep as fast possible while serving many requests. mode useful only servers especially apps.we need helper stream blocks.`helpers/streamblock.js`:```const hivetx require('hive-tx')const interval_time 1000const streamblocknumber async (cb) try let lastblock 0 setinterval(async const gdgp await hivetx.call( 'condenser_api.get_dynamic_global_properties' if ( &amp;&amp; gdgp.result gdgp.result.head_block_number !isnan(gdgp.result.head_block_number) (gdgp.result.head_block_number &gt; lastblock) cb(lastblock) } }, interval_time) catch (e) throw new error(e) }}const streamblockoperations streamblocknumber(async (blocknumber) result hivetx.call('condenser_api.get_block', [ blocknumber ]) (result.result) operations result.result.transactions.map((transaction) return transaction.operations }) (operations.length 0) (const operation operations) cb(operation) }}module.exports streamblocknumber, streamblockoperations}```install [hive-tx](https://www.npmjs.com/package/hive-tx): `npm hive-tx`we created functions here. first `streamblocknumber` makes call get `dynamic_global_properties` every `interval_time` which set 1000ms (1 second) then checks newly produced block number. number increased, callback function helpful getting generated numbers.we inside second `streamblockoperations` that using `condenser_api.get_block` method.`streamblockoperations` blockchain (except virtual operations).`index.js`:```const require('./helpers/streamblock')try stream.streamblockoperations((ops) (ops) op ops[0] (op op[0] === 'custom_json' op[1].id 'tictactoe') processdata(op[1].json) })} error(e)}```this send `custom_json` id `tictactoe` `processdata` function.***we should define game mechanics their corresponding custom_json.**create game**```{ app: 'tictactoe/0.0.1' action: 'create_game', id: 'random id', starting_player: 'first second'}```create wait player join.*****request join 'tictactoe/0.0.1', 'request_join', 'game id'}```request an open someone else.*****accept request**```{ 'accept_request', player: 'username'}```accept pending your *****play**```{ 'play', col: '1 3', row: 3'}```play place x/o board. `col` column `row` row placed board.![tic-tac-toe-col-row.jpg](https://images.hive.blog/dqmytn2du2ngnu51fernmhqvmp5vksyz5jkf6wrgs9mkubp/tic-tac-toe-col-row.jpg)***code implamantaion above `index.js`:```const processdata (jsondata) (!jsondata) json.parse(jsondata) (!data !data.action !data.app) (data.action 'create_game') creategame(data) else 'request_join') requestjoin(data) 'accept_request') acceptrequest(data) 'play') play(data) // error might be json.parse wrong format null }}```***let's mechanic.**creategame**:```const creategame (data) !data.id !data.starting_player) validating data.id.length !== 20 (data.starting_player 'first' data.starting_player 'second') database console.log('create ' + data.id)}```*****requestjoin**:```const requestjoin !data.id.length 20) check console.log('a joined data.id)}```*****acceptrequest**:```const acceptrequest !data.player validate accept console.log('accepted data.id)}```*****play**:```const play !data !data.col !data.row data.col &lt; 1 3 data.row round console.log('played data.id)}```***the doing anything complete those after setting up next part.we test code broadcasting custom_json operations. see method works.we `node index.js`https://hiveblocks.com/tx/44799e6a27c64e935f9072ecb576602330cb80b8![image.png](https://images.hive.blog/dqmsfmrgdbspjupwapeekrwfdfts6zfdkk4nmysjnqmh3xh/image.png)and here console.log() confirmation app:![image.png](https://images.hive.blog/dqmb4kymgnacj2h9d4f2jfu8xywjdjcd1ekdzeln6q96q8h/image.png)***follow me so don't miss part. final part gitlab.[gitlab repository](https://gitlab.com/mahdiyari/decentralized-game-on-hive)[website](https://tic-tac-toe.mahdiyari.info/)[part 1](https://hive.blog/hive-139531/@mahdiyari/making-a-decentralized-game-on-hive-tic-tac-toe-part-1) see: making decentralized hive - @mahdiyari"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive core developer meeting #19",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/03/15/hive-core-developer-meeting-19.html",
      "date"     : "2021-03-15 17:09:54 -0700",
      "desc"     : "meeting tl;dr: Dev sync As usual listen to this one is better hived proposal payout maintenance time drifting fix in hf25 or not hive!168 Lots of discussion on this one that branched into two problems ...",
      "content"  : "https://www.youtube.com/watch?v=uirr5gffvykmeeting tl;dr:## dev syncas usual listen to this one is better ## hived proposal payout maintenance time drifting fix in hf25 or not [hive!168](https://gitlab.syncad.com/hive/hive/-/merge_requests/168)lots of discussion on that branched into two problems, the drift issue, other about unit tests behaving strangely due skipping logic.the output point i will try it for and see how go, but if takes too much time, i'll skip we'll hf26. it's a minor issue.## incoming recurrent transfer api: hivemind ? broader should support transfers be done via hivemind, yes them, we do after has shipped though.## update beem used more up date:relatively short discussion, since @holger80 implemented hybrid transactions mainline github, move towards using version github instead gitlab.## split block log chunks able sync those independentlythere was lots discussions channels. focus right now as upon us, there some external tools implementing directly within hived. rediscussed.## communities type 2/3 account level mutes [hivemind#125](https://gitlab.syncad.com/hive/hivemind/-/issues/125) / [hivemind#145](https://gitlab.syncad.com/hive/hivemind/-/issues/145)bt's team building tests, then who on, potentially bt's tied beneficiaries [hivemind#149](https://gitlab.syncad.com/hive/hivemind/-/issues/149) +parameter naming: reward_share vs beneficiarieswe also discussed changing data from text jsonb (https://gitlab.syncad.com/hive/hivemind/-/issues/153)basically use current implementations ideas are bit early, we(i) waiting changes take place + before taking on.## metadata (topics/tags) [hivemind#148](https://gitlab.syncad.com/hive/hivemind/-/issues/148) why not, add new field store few tags api search said tags. idea tag community like crypto nft games sport tennis etc make content discovery easier## adding stats early tell what definitely look ways sort with it.# conclusionin end talks mostly preliminary, our tentatively(this an official date anything, ideally would by might slip needs be) looking at april 15 locking core code build testnet hf25. when all features set stone stop code. so developments have then. focusing hive next month get my ongoing merged included hf25.see you around meeting march 29th :) @howo see: developer #19"
    } ,
  
    
    
    
    
    
    {
      "author"    : "mahdiyari",
      "title"    : "Making a Decentralized Game on Hive - Tic Tac Toe - Part 1",
      "category" : "howto, nodejs",
      "url"      : "/howto/nodejs/2021/03/13/making-a-decentralized-game-on-hive-tic-tac-toe-part-1.html",
      "date"     : "2021-03-13 12:04:06 -0800",
      "desc"     : "We will develop a decentralized game by the end of this series. The goal is to make learning development on Hive blockchain easier by using a simple game as the training project.",
      "content"  : "![tic-tac-toe.png](https://images.hive.blog/dqmyne66xz9rbsruwf9n76s5xnjjgyzegbpbbszrnnahuzx/tic-tac-toe.png)we will develop a decentralized game by the end of this series. goal is to make learning development on hive blockchain easier using simple as training project.## target audienceof course, it's not for everybody. i try keep it possible people with less experience development. but some degree understanding code necessary learn something. explain anything related that we use.you can find links final result part at post.## why tic-tac-toe?it's multiplayer and covers most topics needed bigger or application. are already familiar its rules simple.## developmentwe use javascript because enough so understand easily. front-end be pure html. also, think mysql good fit database. needs database track games players. docker set up in few minutes.the work without depending one central software. talk only there no doesn't need private entity hold players' data. anyone run an interface game.(we have synced through blockchain. should able instance get same exact reading data from like hivemind, holds serves hive.)## tools i'm using- visual studio code- nodejs- setup- chrome browseri didn't plan beforehand don't know how many posts take. list things come my mind right now.## planning- - login method client-side display available create/request join design visuals controls- back-end stream listen custom_json operations define mechanics api communicate replay/resync update newly deployed clientsthe above may change. anyway, let's start add method.***## 1: methodi html any explanation. page title, description, bootstrap navbar, link. added `css/style.css` `js/app.js` too. when user clicks link, modal form appear. then fire `login()` function submit.`index.html`:```&lt;!doctype html&gt; tic-tac-toe logout username: @ your username. lowercase. posting key: key never leave browser. close ``` ***### styles`css/style.css`:```.navbar-nav { margin-right: 30px;}.navbar-brand margin-left: 30px;}#login-error color: #e31337; display: none;}```***## javascript`js/app.js`an object data.```const userdata = authorized: false, '', ''}```let's function. verify username localstorage. [hive-tx](https://github.com/mahdiyari/hive-tx-js) library converting keys.```const async () =&gt; const loginmodal bootstrap.modal.getinstance( document.getelementbyid('login-modal') ) loginbuttonform document.getelementbyid('login-form-btn') loginbuttonform.setattribute('disabled', 'true') loginerror document.getelementbyid('login-error') loginerror.style.display 'none' document.getelementbyid('username').value document.getelementbyid('posting-key').value validate await validatepostingkey(username, key) if (validate.result === 0) loginerror.innerhtml validate.error 'block' loginbuttonform.removeattribute('disabled') return } userdata.authorized true userdata.username userdata.key window.localstorage.setitem('userdata', json.stringify(userdata)) updatestate() loginmodal.hide()}```as you see 2 more functions used inside first `validatepostingkey()`. post itself.let me it. first, call rpc node hive-tx account information including public key. convert user's compare two values. values equal user-provided correct authorize user. also other ways achieve signing message validating signature key.```const validatepostingkey (username, privatekey) accounts hivetx.call('condenser_api.get_accounts', [[username]]) ( !accounts || !accounts.result !array.isarray(accounts.result) accounts.result.length &lt; 1 result: 0, error: 'network error wrong username' accounts.result[0] publicwif account.posting.key_auths[0][0] '' generatedpublickey hivetx.privatekey.from(privatekey) .createpublic() .tostring() (generatedpublickey !== publicwif) 'wrong key' catch (e) network error' }}```updatestate() after logout.```const updatestate loginbutton document.getelementbyid('login-button') logoutmenu document.getelementbyid('logout-menu') usernamebutton document.getelementbyid('username-button') (userdata.authorized &amp;&amp; userdata.key) loginbutton.style.display logoutmenu.style.display usernamebutton.innerhtml '@' + else }}```and time function.```const false window.localstorage.removeitem('userdata') updatestate()}```we check localstorage reload log localstorage.```const checkstate localdata window.localstorage.getitem('userdata') let (!localdata) json.parse(localdata) (data.authorized data.username data.key) data.key }}checkstate()```now working system. keeps which stays browser only.what done far just front-end. our server provide blocks process serve api. broadcast transactions back-end. words, serving receives could (browser) efficient unnecessary bandwidth waste.***you running app https://tic-tac-toe.mahdiyari.info/the gitlab https://gitlab.com/mahdiyari/decentralized-game-on-hivein next part, now about it, might overkill project. stick now.i want feedback community before continuing further. help comments what improve it? everything basics? greatly appreciate feedback.thanks reading. see: making tic tac toe @mahdiyari"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "7th update of 2021 on BlockTrades work on Hive software",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/03/11/7th-update-of-2021-on-blocktrades-work-on-hive-software.html",
      "date"     : "2021-03-11 12:25:42 -0800",
      "desc"     : "A brief list of Hive-related programming issues worked on by BlockTrades team during last week or so ...",
      "content"  : "below is a brief list of hive-related programming issues worked on by blocktrades team during last week or so:# hived work (blockchain node software)## sql account history plugin for hivedwe made some fixes to the enable proper operation with hivemind sync process:https://gitlab.syncad.com/hive/hive/-/merge_requests/173https://gitlab.syncad.com/hive/hive/-/commits/bw_live_postgres_dump/https://gitlab.syncad.com/hive/hive/-/merge_requests/177 we still have one fix avoid potential foreign key violation live (probably will be finished tomorrow).## hf25 changes (these are described in detail our [hive roadmap post](https://hive.blog/hive-139531/@blocktrades/roadmap-for-hive-related-work-by-blocktrades-in-the-next-6-months))we and improvements code that handles expiration governance votes (votes witnesses hive fund proposals): https://gitlab.syncad.com/hive/hive/-/merge_requests/174we started voting window hf25. expect finish implementation tomorrow, then can begin testing.## miscellaneous changeswe related removal expired proposals: https://gitlab.syncad.com/hive/hive/-/merge_requests/176we review @howo merge requests. two been merged develop under review:https://gitlab.syncad.com/hive/hive/-/merge_requests/162https://gitlab.syncad.com/hive/hive/-/merge_requests/169we also fixed an intermittent issue shutdown:https://gitlab.syncad.com/hive/hive/-/merge_requests/157we added virtual ops report various state (mainly accounting-related) weren’t previously reported: https://gitlab.syncad.com/hive/hive/-/merge_requests/167some cleanup compile process: https://gitlab.syncad.com/hive/hive/-/merge_requests/172fix testnet operation: https://gitlab.syncad.com/hive/hive/-/merge_requests/175# (2nd layer applications + social media middleware)fixed problem master branch caused when upgrading existing database: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/483fixed git version reporting: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/479added comand-line option log time required server process api requests:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/481some new tests bridge calls:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/477# postgres extension fork handling modular hivemindone challenges (the upcoming 2nd application framework) automated support handling. fork-handling simplify design apps so they don't need worry about logic. currently we’re experimenting use c-based help accomplish this task (we’re referring as change-audit extension). tested prototype’s ability recover original updated record database. links where going repo:https://gitlab.syncad.com/hive/psql_tools/-/blob/mi_hive_fork_plugin/readme.mdhttps://gitlab.syncad.com/hive/psql_tools/-/commits/mi_hive_fork_plugin see: 7th update 2021 software @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "arcange",
      "title"    : "Hive Account Recovery Update",
      "category" : "tools",
      "url"      : "/tools/2021/03/09/hive-account-recovery-update.html",
      "date"     : "2021-03-09 10:19:12 -0800",
      "desc"     : "Several months ago, I introduced Hive Recovery, a service that runs continuously and autonomously to help you recover your account if it were to be compromised.",
      "content"  : "![](https://i.imgur.com/cbnuxck.png)several months ago, i introduced hive recovery, a service that runs continuously and autonomously to help you recover your account if it were be compromised.for more information, invite read the [introduction post](/hive/@arcange/introducing-hive-account-recovery).currently, many users have decided define @hive.recovery as their recovery date, none yet had use its services it, which in itself is good thing.### one with several working piecesthe provided by consist of two components:1. front-endthe front-end static html page helps configure account. also request initiate process2. back-endthe back-end javascript running on server that, upon will verify identity an process.### improvementsi recently provide assistance who wanted change no major issue, but made me realize there was still room for improvement, especially user interface part.#### 1. better error edge case managementi first improved handling fixed some small bugs regarding notification.i added additional validations, among them verification user's balance because requires at least 0.001 available.#### 2. new password keys generatori took opportunity add feature intended process itself: possibility generating keys.indeed, public owner key from set previously generated account.but generate this set, necessary external service, know where find such service. longer since functionality now directly integrated into site.![](https://i.imgur.com/cyyj2de.png)if do not already can clicking button. display dialog randomly related keys.![](https://i.imgur.com/lfghhr0.png)after confirming saved credentials clicked continue, automatically copy appropriate input field.of course, displayed data stored or transmitted. audit source code has been updated [github](https://github.com/vim-arcange/hive-recovery).the [hive guide](/hive/@hive.recovery/userguide), contains all details about updated.little things make life easier.---### check out my apps services### [vote witness ![](https://i.imgur.com/2bi4snt.png)](https://hivesigner.com/sign/account-witness-vote?witness=arcange&amp;approve=1)&lt;/div&gt; see: update @arcange"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "6th update of 2021 on BlockTrades work on Hive software",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/03/02/6th-update-of-2021-on-blocktrades-work-on-hive-software.html",
      "date"     : "2021-03-02 15:26:51 -0800",
      "desc"     : "In the last week or so, we continued our work on the SQL account history plugin.",
      "content"  : "# hived work (blockchain node software)## sql account history pluginin the last week or so, we continued our on plugin. don’t be confused by name of this plugin: while it can and will function as a very fast replacement for rocksdb plugin, its primary purpose is to lay foundation “modular hivemind” (an application framework 2nd layer applications).we added support resuming replay configured with also necessary enabling use plugin when operated in conjunction hivemind running “live sync” mode. now populates database block transaction signatures needed get_block api calls.finally, code drop/restore indexes associated data enable faster replays (this useful, example, if no sync happening at same time).## other hivedwe reviewed recent changes code, which resulted some fixes reformats new unit tests. did preliminary reviews current merge requests hived.# modular (2nd framework)## syncing from databaseshivemind run an “initial directly postgres generated repeated that died near end during previous test (running 49.58m blocks) confirmed takes just under 46 hours (just two days). comparison, using old “pull” process all optimizations still took 61.2 hours.the final size was: history-generated (~1.1 tb) + sync-generated (~0.5 total 1.6 tb. ## experimenting extensions fork handlingone key challenges automated handling, remove burden applications. currently we’re c-based help accomplish task.## miscellaneous hive syncwe eliminated constructs obtained exclusive locks tables therefore prevented dumps being concurrently sync. without change, server operator would need temporarily disable his order make backup.## official release v1.24.2we completed testing develop branch, then merged latest master tagged v1.24.2. notified operators they should upgrade v1.24.2 soon practical, contains not only lock fix, but various bugfixes related indexing responses.# condenser (https://hive.blog base)we finished fixing bugs follows, mutes, decentralized lists, deployed version hive.blog fixes. point, we’ve tested lists.# plans next weekon side, we’ll continue working hf25 (vote expiration governance changes, curation vote window request review, etc). depending how much time have, may take look hbd interest witnesses are payments. i’ve considered adding mechanism helping maintain peg have time. i’ll write post about enough progress fronts so seems feasible fit enhanced pegging into hf25.for hivemind, explore ways automate fork-handling.on optimization front, python profiling see further reduce initial data. visualization tool, kcachegrind.we want combining replaying (which 11 hours) simultaneously hours). these sequentially, = 57 hours. them concurrently, i believe overall nearly (i.e. currently). reminder, previously 17 rockdsb 96 sync, before began see: 6th update 2021 blocktrades software @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "engrave",
      "title"    : "JavaScript library for Ledger Nano S HIVE application",
      "category" : "howto, nano, nodejs, wallet",
      "url"      : "/howto/nano/nodejs/wallet/2021/03/02/javascript-library-for-ledger-nano-s-hive-application.html",
      "date"     : "2021-03-02 11:17:12 -0800",
      "desc"     : "In order to get official support from Ledger (i.e. the possibility to install it from Ledger Live), we need to meet several requirements. And I'm trying to fulfill them all so we could benefit from the hardware wallet support.",
      "content"  : "![incoming hive ledger wallet](https://files.peakd.com/file/peakd-hive/engrave/eowf9ezqjkpjhhlkmx9nja82sqpuhkvddgjhdgbd5zyo9tsvhktgc1714xmomvxpell)it's been a couple of months since @netuoso [published the initial version app](https://hive.blog/hive-139531/@netuoso/hive-application-for-the-ledger-nano-s-x-hardware-wallet). in order to get official support from (i.e. possibility install it live), we need meet several requirements. and i'm trying fulfill them all so could benefit hardware wallet support.# code reviewfirst, make sure that application is stable secure. i already made preliminary review app created pull request with some fixes. next step will be security perspective, following guidelines provided by ledger. this requires bit more work knowledge than validating transactions serialization etc, but there. * https://github.com/netuoso/ledger-app-hive/pull/5/# javascript libraryto simplify communication app, javascript/typescript library. it's really easy use nodejs. library covers every functionality supported app.example usage:```typescriptimport '@engrave/ledger-app-hive';import transportnodehid '@ledgerhq/hw-transport-node-hid';import transport '@ledgerhq/hw-transport';( async () =&gt; { console.log('unlock your ledger....'); const = await transportnodehid.create(); console.log(`established connection nano s`); try new hive(transport); {version, arbitrarydata} hive.getappconfiguration(); console.log(current version:, version); console.log(arbitary data enabled:, arbitrarydata); publickey hive.getpublickey(`48'/13'/0'/0'/0'`); console.log(public key:, publickey); } catch (e) console.error(e); finally transport.close(); }})();```## api [getappconfiguration](#getappconfiguration) [getpublickey](#getpublickey) [signtransaction](#signtransaction) ### getappconfigurationget current configuration for installed on ledger.```typescriptasync getappconfiguration(): promise&lt;{version: string, arbitrarydata: boolean}&gt;```### getpublickeyretrieve public key specified bip32 path. you can set an additional parameter `confirm: boolean` which ask user confirm his before returning it. ```typescriptasync getpublickey(path: confirm?: boolean): promise&lt;{publickey: string}&gt; {```### signtransactionsign basic method return signed (a transaction `signatures` property). please note extensions are not yet most operations (except `beneficiaries` `comment_options`). signtransaction(tx: transaction, path: string): promise```please aware implementation does multisig. also cool feature might add someday. now, let's focus publishing it.the open-source available gitlab npm: https://gitlab.com/engrave/ledger/ledger-app-hive# companion appto prove working correctly, sample app. prepared design start developing soon. plan as targeted at large stakeholders willing invest hive. focused governance (voting witnesses proposals) significant chain news.![it possible create account directly app](https://files.peakd.com/file/peakd-hive/engrave/23wwk6s648pdwbsa1jojunzjwixro9f49h5gbvbg2q65fmshlwjh7mpbhecrqhrdqmjag)![hive display parameters account](https://files.peakd.com/file/peakd-hive/engrave/23vsbhgnpdwtjcjg9yxjp5qfx6828be9xvtzr6hszw6xeskyjbs1bzog99hkjshbiau1w)![it vote perform other actions](https://files.peakd.com/file/peakd-hive/engrave/23wwnw3eenbacfw6ugsunckqkvhkiqxrrnftbf1qpap9gvxmjwu9x7ihqnu1wpktlyhde)follow me up date incoming development updates!*****click image @engrave witness:**[![banner_engrave 100.png](https://images.hive.blog/dqmughvic5tcppvvkb4ib7exmgq3rq4l8jkvizvucbw8rmt/banner_engrave%20100.png)](https://hivesigner.com/sign/account-witness-vote?witness=engrave&amp;approve=1)&lt;/div&gt; see: s"
    } ,
  
    
    
    
    
    
    {
      "author"    : "good-karma",
      "title"    : "Hivesigner SDK rewritten in typescript",
      "category" : "news, nodejs, hivesigner",
      "url"      : "/news/nodejs/hivesigner/2021/02/27/hivesigner-sdk-rewritten-in-typescript.html",
      "date"     : "2021-02-27 21:38:21 -0800",
      "desc"     : "As a part of this update to hivesigner, we made minor changes into hive-uri package as well, which removes dependencies to old dsteem library.",
      "content"  : "few days ago we have published new version of hivesigner javascript sdk which is completely rewritten in typescript with proper types, additional improvements on promises and written tests.![hivesigner-development-secure-way-to-sign-in-blockchain](https://images.ecency.com/p/y2ixprrknsnseh3nul6kubitjtxrc5k2vbtzbsegeence) implementation clean helps you to identify type each parameters. if are js developer, probably love this update because it write less buggy code. also some tests make sure into library passes those tests. as a part `hivesigner`, made minor changes `hive-uri` package well, removes dependencies old dsteem library.new `hivesigner` x4 times smaller size means addition your website bundle, faster download for entire app general. shortly after release, better browser support, x2 from legacy, still great. **please note, however due change, might check how import apps.**![hivesigner-package-size](https://images.ecency.com/dqmvhtnik5itniah5k2ivqkcfkkznmqawvlhrky5qtncrhw/image.png)try `hivesigner@3.2.5` let us know works apps. https://www.npmjs.com/package/hivesignerif using apps, consider updating that well. https://www.npmjs.com/package/hive-urinext line optimise finalise ui (website) release will improve user experience.## support - [read details proposal](https://ecency.com/hive/@good-karma/hivesigner-ongoing-development-and-improvement) [`hivesigner proposal`](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b88%5d&amp;approve=true) | [`hivesearcher proposal`](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b114%5d&amp;approve=true) [![vote @good-karma witness](https://images.ecency.com/p/o1aj9qdyyjnspzwhuggyc3mngfqoan2qn9aitn8uplp6qb5tl?format=match&amp;mode=fit)](https://hivesigner.com/sign/account-witness-vote?witness=good-karma&amp;approve=1) see: by"
    } ,
  
    
    
    
    
    
    {
      "author"    : "inertia",
      "title"    : "Hive Devportal Update: SDK References, Python Tutorials",
      "category" : "news, documentation",
      "url"      : "/news/documentation/2021/02/27/hive-devportal-update-sdk-references-python-tutorials.html",
      "date"     : "2021-02-27 12:13:12 -0800",
      "desc"     : "My proposal got approved this week, so I've been able to dedicate serious time to documentation.",
      "content"  : "my proposal got approved this week, so i've been able to dedicate serious time documentation.##### sdk referencessee: database_api.list_escrowswe already have what amounts a master list of api methods on the devportal, called definitions. it's grouped by namespaces and functionality. you can use figure out parameters are available for (software development kit) that use.from standpoint documentation, i'm referring an as module, library, or dependency in your project connects you.knowing names operations doesn't always correlate same method favorite sdk. added links from definitions points sdk's documentation.in addition call, also execute blockchain:see: vote_operationas see, even more tools like voting, primarily because additional hive-keychain hivesigner.js perform these browser.related refs: [00c2fc45](https://gitlab.syncad.com/hive/devportal/-/commit/00c2fc45eb860c4f4574ce4817e387680ba06a9d), [45bc486d](https://gitlab.syncad.com/hive/devportal/-/commit/45bc486d5afdd93beec7170d4a617e2b4ddb42f7)##### python tutorialspreviously, i did audit javascript tutorials. next update, tutorials fully reviewed. process takes while about one third way through, at moment.#### tintoybecause we don't testnet moment, important developers be deploy their own local if they want try certain tutorials.of course, just point copy tutorial mainnet. but nice option running testnet.i've maintaining [testnet setup tutorials](https://developers.hive.io/search/?q=testnet) with mind, docker configured, using following command:```bashdocker run -d -p inertia/tintoy:latest```as it relates [tintoy](https://hub.docker.com/r/inertia/tintoy) tool exploring hive capabilities, image ongoing basis refreshing when there major changes `hived`. big thanks @someguy123 providing [hive-docker](https://github.com/someguy123/hive-docker), which is key allowing me maintain tintoy images.---if you'd vote current proposal:[https://hivesigner.com/sign/update-proposal-votes?proposal_ids=[151]&amp;approve=true](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=[151]&amp;approve=true)---also see: https://peakd.com/proposals/inertia devportal update: references, @inertia"
    } ,
  
    
    
    
    
    
    {
      "author"    : "ali-h",
      "title"    : "JSON DOCTOR - An open source tool for broadcasting custom_json operations on hive",
      "category" : "tools",
      "url"      : "/tools/2021/02/24/json-doctor-an-open-source-tool-for-broadcasting-customjson-operations-on-hive.html",
      "date"     : "2021-02-24 09:16:51 -0800",
      "desc"     : "A simple, fast and easy to use tool to broadcast custom_json operations on hive",
      "content"  : "would like to share one of my open source tools i developed a few months back. usually have these sudden ideas out nowhere about some ***possibly useful*** fun and projects. most the time it just stays in *mind palace*.. uhm, but well, sometimes they are lucky &amp; get turned into ***indefinite unfinished projects***.anyways here's something that i've which could be useful for individuals mess experiment with custom_jsons..[![image.png](https://files.peakd.com/file/peakd-hive/ali-h/vvqn7bft-image.png)](https://jsondoctor.github.io/)**json doctor** is simple, tool allows you broadcast custom_json operations on hive blockchain.website: https://jsondoctor.github.io/source code: https://github.com/ali-h/jsondoctorcustom jsons awesome, can used store data blockchain build 2nd layer d-app. since mostly development cases there isn't single ui (in knowledge) lets ***custom json***, so even learn write code, import library work with. here front-end any valid json active/posting authority.you use ***hive keychain*** or entering your private key (not suggested). also has templates play includes hive-engine blog (follow/unfollow). this act gateway interact layers when certain down not accessible. example transferring tokens.![image.png](https://files.peakd.com/file/peakd-hive/ali-h/slvzmq85-image.png)i got really techy kinda theme, don't know how came mind it! *i raw themes*.![image.png](https://files.peakd.com/file/peakd-hive/ali-h/lkq2138n-image.png)there options changing auth type rpc endpoint. log window logs every change transaction status.~ full page ~![image.png](https://files.peakd.com/file/peakd-hive/ali-h/aypqrnyi-image.png)---i i'm testing script streams specific custom jsons, helps avoid writing running separate broadcast.i had plans include stream too very busy other ~ ***side projects*** skipped further development. maybe sometime later. if you've please [fork github repository](https://github.com/jsondoctor/jsondoctor.github.io/network/members) pr. thanks lot! feedback appreciated.## contact me ^^[hive profile](https://hive.blog/@ali-h)[github profile](https://github.com/ali-h)[discord: ali h#7057](https://discord.com/app) see: doctor - an broadcasting by @ali-h"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive core developer meeting #18",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/02/22/hive-core-developer-meeting-18.html",
      "date"     : "2021-02-22 09:59:00 -0800",
      "desc"     : "meeting tl;dr: dev sync: as usual listen to it Recurrent transfers testing (wait for automated actions or not) We agreed to ship recurrent transfers without automated actions and then we'll update it ...",
      "content"  : "https://www.youtube.com/watch?v=ol4th5w5oyymeeting tl;dr:dev sync:as usual listen to it ## recurrent transfers testing (wait for automated actions or not)we agreed ship without and then we'll update when we enable actions.## cutoff amount logic (total paid, need fill retroactively)this is an issue pre hf25 proposals because don't know how much money was already paid out, do so, we'd have iterate through literally millions of blocks / transactions which sure cause a huge cpu load going from hf24 moment that's stressful enough. decided simply not that are older than certain date (the obviously). rounding with proposal payments (is 0.0015 0.002 0.001 ?)to be discussed more offline figure out what why designed way in the first place.## hivemind guidei'll try produce one once i'm up speed setup environement :)this relatively short (half hour) but tl;dr doesn't justice there lot between lines stuff so you should definitely in. see: hive core developer meeting #18 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "5th update on BlockTrades&#39; Hive development progress",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/02/19/5th-update-on-blocktrades-hive-development-progress.html",
      "date"     : "2021-02-19 16:04:00 -0800",
      "desc"     : "Lately our blockchain work has focused on the SQL account history plugin that injects operations, transactions, and block data into a PostgresSQL database (for use by modular hivemind apps such as wallets, games, etc).",
      "content"  : "# sql account history plugin for modular hivemindlately our blockchain work has focused on the that injects operations, transactions, and block data into a postgressql database (for use by hivemind apps such as wallets, games, etc).we’ve been testing fixing bugs related to this hived associated sync. mentioned last time, replay of takes 11 hours (as opposed 15 required rocksdb-based plugin, so we already have decent win time). ran sync using it completed in 46 (just under 2 days), but unfortunately had fail near end (probably due different supply some dynamic api not yet provided plugin), still don’t definitive speed full method, i wouldn’t be surprised if cut time half (i.e. from 4 days down or even less) we’re done. say because we’ve found method is currently cpu bound (with about 2/3 being used python-based indexer 1/3 postgres), think will able reduce after profiled python code (and maybe well). my best guess right now we're transformation prior writing database.# performance results pluginwe’ve run benchmarks new (versus rocksdb plugin) with excellent gains resulting:api call: `{jsonrpc:2.0, method:account_history_api.get_ops_in_block, params:{block_num:2889020,only_virtual:false}, id:1}`ah-rocksdb: ranges from 26s to 64sah-sql: 0.9sapi call:`{jsonrpc:2.0, method:account_history_api.get_account_history, params:{account:abit, start:125000, limit:1000}, from 0.3s to 1.2sah-sql: 0.03sapi method:account_history_api.enum_virtual_ops, params:{block_range_begin: 4000000, block_range_end: 4020000 }, id:1} `ah-rocksdb: from 36s to 45sah-sql: 0.8sthese are good enough should eliminate artificial 2000 operation lookback limit set get_account_history call when filtering specific types (assuming node configured serve ah-sql instead ah-rocksdb course).# progress hivemindnow while above response times represent substantial gains, that’s primary goal work. support creation 2nd layer app development “modular hivemind” deployments, allowing unique hive-based can scale large numbers users real-time responsiveness.the first step technology was validate swapping model where directly inject hivemind’s database, see benchmark above, going well. proved better were also switch “pulling” having push us existing minor modifications.the next bit more challenging, design-wise: plan add automatic handling forks process. allow up current headblock without any additional delay cleanly revert whenever micro-fork occurs (currently either accept penalty risk chance error they properly state their internal case micro-fork). application gain built-in handler automatically executes undo effects blocks previous fork fork, eliminating need developers manually write handling. looking various algorithms logic we’ll experimenting prototype implementations.# hivemind-based apiwe recently reuses queries developed (this could used, example, loading instance). roughly comparable preliminary tests show little slower (maybe 30% cases), probably overhead during conversions. an acceptable tradeoff situations haven't done high load situations, may perform than hived.# (2nd microservice social media apps)we fixed created follow decentralized lists merged them develop branch (https://gitlab.syncad.com/hive/hivemind/-/merge_requests/396). few remaining optimizations queries: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/470and community calls: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/466# condenser wallet (https://hive.blog)we made one change fix bug lists: https://gitlab.syncad.com/hive/condenser/-/merge_requests/209we review vision (ecency base) versus condesner (hive.blog base). general looks up-to-date terms web technologies libraries cleaner overall, relies too much closed-source apis operate easily white-labeled yet. before begin contributing work, awaiting changes @good-karma team.# near-term plans progresswe’ll continue working code, emphasis cycle design logic. optimization process.we began head contains follows list fixes) api.hive.blog today. performs well, merge master monday other operators deploy it.i’ve given thought week ways improve upward side hbd peg (when goes $1 usd). idea relatively simple implement fit hf25. i’ll later separate post hive improvements there discussion economic considerations involved. see: 5th update blocktrades' @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "quochuy",
      "title"    : "My new contributions to the Hive Condenser and Wallet apps.",
      "category" : "news, nodejs, condenser",
      "url"      : "/news/nodejs/condenser/2021/02/16/my-new-contributions-to-the-hive-condenser-and-wallet-apps.html",
      "date"     : "2021-02-16 21:42:03 -0800",
      "desc"     : "A little report on development work I've done to contribute to two of the major Hive frontends.",
      "content"  : "## contexti have been involved (voluntarily) with the development of condenser &amp; wallet apps (that are powering https://hive.blog and https://wallet.hive.blog) for quite a while now. there other great frontends to hive out such as https://peakd.com https://ecency.com but i always more or less faithful condenser.this is regular report on my new contributions. some work below might still be in test not yet deployed.## delegation revoke bug fix@ausbitbank raised this issue where clicking `revoke` button list won't do anything. was typo code which causing feature fail retrieve username delegator.merge request: https://gitlab.syncad.com/hive/wallet/-/merge_requests/95## redirect urls from wallet.another @ausbitbank request. used handle `transfers` `witnesses` pages, however, security reasons, split into second app, wallet. request instead erroring.merge https://gitlab.syncad.com/hive/condenser/-/merge_requests/207## alternate post author:@themarkymark requested porting implemented @peakd condenser. once deployed, you will able create specify an author if it different account using submit post.![alternate author](https://images.hive.blog/dqmf2gw6tvd8jl4h5n5nhmj4veeubfm5md3mputedioe7nj/screen%20shot%202021-02-17%20at%202.38.47%20pm.jpg)merge https://gitlab.syncad.com/hive/condenser/-/merge_requests/208---**vote witness**[![support @quochuy witness.jpg](https://images.hive.blog/dqmecytzemy8swu6rrg7awhpnrbsehup7ivk9rgyzsuupvw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1)on hive, witnesses playing important role providing performant safe network all us. power choose 30 trusty package transactions sign blocks that go blockchain. [vote me via hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1) support community. see: contributions apps. by"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core developers meeting #17",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/02/16/core-developers-meeting-17.html",
      "date"     : "2021-02-16 03:28:48 -0800",
      "desc"     : "Sorry for the delay, we had some issues with the upload. meeting tl;dr: Dev sync: you should listen in Downvote proposals / Instead of downvote: feasibility of DHF vote to be adjustable in pre-set % ...",
      "content"  : "sorry for the delay, we had some issues with upload.https://www.youtube.com/watch?v=6uwj_9oyyoo## meeting tl;dr:#### dev sync:you should listen in#### downvote proposals / instead of downvote: feasibility dhf vote to be adjustable in pre-set % or sliderit's a controversial topic that discussed community more before thinking it through.#### lite accounts and how those can work:to listened in, but basically current stance is account are so cheap paying 3 hive will cheaper than simply transaction fee on most other blockchains save lot time. end rc delegations (coming hf25!) claimed tokens, have somewhat free already.#### token transfers:already another meeting, don't want enable because would make currency, leading everyone claiming tokens sell them, raising cost claim_account_token operation, meaning projects who actually need won't get them #### delegation poolscoming hf25#### downward inflation adjustment (reduction)economical changes community, this beyond scope discusses technical such ideas. case: yes np easily reduce inflation.#### incoming api:this has been touched upon while ago, believe better if done via hivemind, core blockchain core.#### add an expiration parameter delegate_vesting_shares one create set-it-and-forget automatically revoked after certain delay. related delegate_vesting_shares_expired vop track when removed.the idea not all governance votes expire-able, effort chain less dead stake controlled. that's tune next monday at 2021/02/22 5pm utc (6pm cet) meeting.if you got additional questions feel ask comments. see: developers #17 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "4th update of 2021 on our Hive software work",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/02/06/4th-update-of-2021-on-our-hive-software-work.html",
      "date"     : "2021-02-06 14:45:39 -0800",
      "desc"     : "Both the hived-based API and the hivemind-based API will employ the same SQL queries, so we’ll be able to re-use much of this week’s work on the hived plugin when implementing account history API support inside hivemind.",
      "content"  : "# hived work (blockchain node software)lately our blockchain has focused on the plugin that injects operations, transactions, and block data into a postgressql database (for use by modular hivemind apps such as wallets, games, etc). we’ve made solid progress since my last report this plugin.we’ve never had really great name for plugin, but we may end up calling it “sql account history plugin” can, side benefit, effectively replace rocksdb-based plugin. is because week added api calls to so can serve postgres-stored same way rocksdb does. in other words, operator make of even if they don’t operate node, just need spin postgres (although i still expect performance advantages adding mix, discuss further below).performance was one primary drivers work, results far have been good anticipated (but surprising some more pessimistic devs). all tests done show be equal or better existing new should shine when comes operation requests where filtering based type desirable (previously issues forced us place limits what single call could request, hope we’ll able eliminate limitation).i believe will achieve implement itself rather than via hived, think serialization slow down quite lot large requests. larger result queries, easily reduce response latency 4x these also less costly terms cpu loading.both hived-based hivemind-based employ sql re-use much week’s implementing support inside hivemind.## benchmark from plugina full reindex 49 million blocks while running took around 11 hours (as opposed 15 plugin). already fairly impressive, there’s reasonable chance improve this, with absolute lower bound being time required consensus-only replay (6 hours). it’s important note we’re comparing re-index old an example benchmark, goal speedup (and variants), which currently takes too long (~4 days).so interesting compare how faster reindexing using past completed swap away pulling directly pushed performing pre-populated 49m worth operations. hard predict exactly process take yet, i’m very optimistic about results.the generates 967gb storage run reindex. 2x size storage, stored forms served during calls, loading. bit unfair comparison, including here previously database. know final introduced, upper cap at current height 1.5tb. initial answer coming after complete sync test.## hived* dev assigned working incorporating accounting virtual ops code blocktrades version code. likely week.* performed preliminary review state smt unfortunately, found (not only untested, fair amount hasn’t yet implemented). partially c++ smts, any developers would like it.* creating wallet_bridge_api_plugin future headaches associated upgrading command-line interface wallet updates hived’s api.# (2nd layer microservice social media apps)as mentioned above, enabling injected operations instead hived. functional code.we another improvement speed (we threading post process, before “live sync” begins), fight through few errors created along way.we fixed constraint problem occur latest code.we’re fixing bugs related follow decentralized lists. big part comprehensive set both features. week. next merge development branch master official release deployment hive operators (these are frontend applications).there’s known issue testing system measuring individual fix upcoming temporarily disabled measurement meantime avoid false positive test fails.# condenser (https://hive.blog)we deployed versions hive.blog web changes team @quochuy.i’ve couple ui devs compare/contrast functionality bases ecency hive.blog. near-term plans progresson side, continue governance discussed six-month roadmap post. regards ideas plan try re-indexing process.on documentation preparing follows passes tests.we’ll continuing hivemind. far, pleased project its foundation smart-contract platform 2nd apps. see: 4th update 2021 software @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "quochuy",
      "title"    : "My new contributions to the Hive Condenser",
      "category" : "news, nodejs, condenser",
      "url"      : "/news/nodejs/condenser/2021/01/28/22ehbp-my-new-contributions-to-the-hive-condenser.html",
      "date"     : "2021-01-28 03:08:09 -0800",
      "desc"     : "This is a regular report on my new contributions. Some of the new work below might still be in test and not yet deployed.",
      "content"  : "## contexti have been involved (voluntarily) with the development of condenser &amp; wallet apps (that are powering https://hive.blog and https://wallet.hive.blog) for quite a while now. there other great frontends to hive out such as https://peakd.com https://ecency.com but i always more or less faithful condenser.this is regular report on my new contributions. some work below might still be in test not yet deployed.## fix links sometimes broken due @issue raised by @rishi556: https://gitlab.syncad.com/hive/condenser/-/issues/113&gt; an @ followed slash fail properly get highlighted. ex: http://personal.community/?post=@sn0n.dev/name-test fails along that, any link that has it breaks anything after attempting go user's profile everything before being highlighted.see example in: https://hive.blog/testing/@sn0n.dev/name-testthis tiny expression responsible detecting user mentions body post.merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/196## pre-select cover image when editing existing posti've previously added selector post editor, however, forgot preselect current you post. it's also small i've took opportunity cleanup code unify coding standard best practices where can files on.merge https://gitlab.syncad.com/hive/condenser/-/merge_requests/198## handle posts without list@jackmiller was found images list don't look say kind agree. although minor, does great:![posts image](https://images.hive.blog/dqmre3obslvsgav7budwjjmruyhqh8kjwu8r64uy5k6dk8j/screen%20shot%202021-01-28%20at%209.45.48%20pm.png)as see above, two missing thumbnail which bad either. so suggested idea use own avatar instead shown below:![using default summary image](https://images.hive.blog/dqma9mjh2eaqdjye7fypu1rawhvustmfrw2zegtmj7vm8zh/screen%20shot%202021-01-28%20at%209.52.39%20pm.png)merge https://gitlab.syncad.com/hive/condenser/-/merge_requests/199## youtube video preview ratio.@martibis's friend, @clarafrancken, noticed her looking right:![youtube wrong ratio](https://images.hive.blog/dqmnhxthznxguczslncmwmwpzpaqw42peq5gkoq7zpvvjtm/screen%20shot%202021-01-28%20at%209.55.41%20pm.png)the issue css trying extend player 100% width having fixed height pixel. just let size should 640 x 360 px centered player:![centred player](https://images.hive.blog/dqmnt6smxnt3mdshdtrntgc3vr42anvepo3frqohtkm6arb/screen%20shot%202021-01-28%20at%209.59.41%20pm.png)merge https://gitlab.syncad.com/hive/condenser/-/merge_requests/200## url proxifier@themarkymark old from steemit era were showing. discovered using steemitimage.com domain name transforming into proxy url. now unit tests.merge https://gitlab.syncad.com/hive/condenser/-/merge_requests/201## clean upwhat bothered me linting taken advantage ci/cd pipelines. this fact we inherited following specified libraries conflicting one another. ideally, codes allowed deployed until they pass tests eslint.so decided try going through all up, knew big job didn't know big... first attempt, managed something like 500+ issues excited completed only realise config checking `.js` `.jsx` ones those complicated fix. re-configuring linting, 3 4 times fixed. task.wip merge https://gitlab.syncad.com/hive/condenser/-/merge_requests/197---**vote witness**[![support @quochuy witness.jpg](https://images.hive.blog/dqmecytzemy8swu6rrg7awhpnrbsehup7ivk9rgyzsuupvw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1)on hive, witnesses playing important role providing performant safe network us. power choose 30 trusty package transactions sign blocks will blockchain. [vote via hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1) support community. see: contributions"
    } ,
  
    
    
    
    
    
    {
      "author"    : "emrebeyler",
      "title"    : "hived-rpc-scanner: A tool to check the status of Hive RPC nodes by testing certain endpoints.",
      "category" : "news, devops, api",
      "url"      : "/news/devops/api/2021/01/27/introducing-hived-rpc-scanner-a-cli-tool-to-check-the-status-of-hive-rpc-nodes-by-testing-certain-endpoints.html",
      "date"     : "2021-01-27 13:20:09 -0800",
      "desc"     : "`hived_rpc_scanner` is a CLI tool to check the status of Hive RPC nodes by testing certain endpoints.",
      "content"  : "repository:https://github.com/emre/hived-rpc-scanner`hived_rpc_scanner` is a cli tool to check the status of hive rpc nodes by testing certain endpoints.# installationrequires python3.6+.```$ (sudo) pip install hived_rpc_scanner```alternatively, with virtualenv:```cd /tmppython3.6 -m venv hived-rpc-scanner-envsource hived-rpc-scanner-env/bin/activatepip hived-rpc-scannerhived_rpc_scanner```# usage```$ hived_rpc_scanner --nodes &lt;...&gt;```# notes- listed endpoints are subset available endpoints. there still possibility that some in tested api host may not work, while this shows everything green.- sanity checks applied for each endpoint. e.g: structure response, element counts, types. you can see whole validator set [here](https://github.com/emre/hived-rpc-scanner/blob/main/hived_rpc_scanner/validators.py).- if you're an app developer and your favorite here, let me know so i add them test list.enjoy.# vote my witness***if want support consider casting on [hivesigner](https://hivesigner.com.com/sign/account-witness-vote?witness=emrebeyler&amp;approve=1) or [peakd](https://peakd.com/witnesses).&lt;/div&gt; see: hived-rpc-scanner: @emrebeyler"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "3rd update of 2021 on our Hive software work",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/01/24/3rd-update-of-2021-on-our-hive-software-work.html",
      "date"     : "2021-01-24 15:52:24 -0800",
      "desc"     : "This post describes the work done in the past week or so by the BlockTrades team on hive-related software.",
      "content"  : "preface: this post describes the work done in past week or so by blocktrades team on hive-related software. since it's essentially a progress report for other devs, it presupposes that reader is familiar with ongoing work. words, assumes you've read [our sixth month roadmap](https://hive.blog/hive-139531/@blocktrades/roadmap-for-hive-related-work-by-blocktrades-in-the-next-6-months) and [the previous reports](https://hive.blog/@blocktrades/posts). reading these posts has also been likened to watching paint dry, be warned :-)# overview of week's worka lot coding was cleanup work, as we want make easier new devs contribute code base. end, we’ve once again ramped up our creating tests, removing dead might confuse programmers, investigating methods documenting apis. latter issue, decided use openapi preferred means api documentation web pages can directly generated from annotations source itself. establishing direct linkage between call implements it, will know when particular hasn’t yet documented. i think implies need create task migrate existing external into hivemind codebase.in addition above, continued modular framework 2nd layer apps.# hived (blockchain node software)during testing, found initial version filling hivemind’s postgres database had several problems (a problem thread some performance issues queries insert data database), but were resolved, tests are looking good far, haven’t full test latest code.we’ve additional information inject (some currently pulls using get_dynamic_properties call). should ready perform another sync next day so. going here:https://gitlab.syncad.com/hive/hive/-/commits/km_live_postgres_dump/the tracking last governance vote an account completed here:https://gitlab.syncad.com/hive/hive/-/merge_requests/160this used compute votes expire part hardfork 25.tests written changes cli_wallet:https://gitlab.syncad.com/hive/hive/-/merge_requests/163code (removing unused/dead code):https://gitlab.syncad.com/hive/hive/-/merge_requests/77we blocktrades-contributed generate virtual operations accounting computations (we wrote long time ago help us blockchain-related income). anticipated, there no significant impacts either computation history storage requirements, we’ll merging coming week. results validate extent my plan continue primary way pass internal state hivemind.# (2nd microservice social media apps)below list made week:optimized few more calls reducing amount required sql query planner:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/459added threads speed post-initial needed indexer (e.g. table indexes):https://gitlab.syncad.com/hive/hivemind/-/merge_requests/446community functionality moved python enhance ease future maintenance:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/451several reported notifications fixed mr:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/461testshttps://gitlab.syncad.com/hive/tests_api/-/merge_requests/225https://gitlab.syncad.com/hive/tests_api/-/merge_requests/228https://gitlab.syncad.com/hive/tests_api/-/merge_requests/221 (tests community apis)https://gitlab.syncad.com/hive/tests_api/-/merge_requests/224 (full apis)https://gitlab.syncad.com/hive/tests_api/-/merge_requests/227code + reformatting):https://gitlab.syncad.com/hive/hivemind/-/merge_requests/436https://gitlab.syncad.com/hive/hivemind/-/merge_requests/465# condenser wallet (https://hive.blog)improvements build process wallet:https://gitlab.syncad.com/hive/condenser/-/merge_requests/189https://gitlab.syncad.com/hive/wallet/-/merge_requests/92fix bugs showing profiles older accounts post_json_metadata:https://gitlab.syncad.com/hive/wallet/-/merge_requests/93fix display hivefest badge:https://gitlab.syncad.com/hive/condenser/-/merge_requests/191# near-term plans progresson side, discussed six-month roadmap post. reviewing smt week, get feeling how complete terms functionality, etc.on documentation.we’ll continuing hivemind, current focus plugin experiments modifying tables created plugin. see: 3rd update 2021 hive software @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "quochuy",
      "title"    : "My new contributions to the Hive Condenser",
      "category" : "news, nodejs, condenser",
      "url"      : "/news/nodejs/condenser/2021/01/21/4e8t3w-my-new-contributions-to-the-hive-condenser.html",
      "date"     : "2021-01-21 15:36:24 -0800",
      "desc"     : "This is a regular report on my new contributions. Some of the new work below might still be in test and not yet deployed.",
      "content"  : "## contexti have been involved (voluntarily) with the development of condenser &amp; wallet apps (that are powering https://hive.blog and https://wallet.hive.blog) for quite a while now. there other great frontends to hive out such as https://peakd.com https://ecency.com but i always more or less faithful condenser.this is regular report on my new contributions. some work below might still be in test not yet deployed.## cover image selection@lublujizn86 reminded us feature that would helpful condenser. currently, when you create blog, first your post will used summary lists posts. however, this ideal, want use images their chronological order follow story best necessarily one.![cover selection](https://gitlab.syncad.com/hive/condenser/uploads/f1e38b9b961b4ec584aa3f8a804daf79/screen_shot_2021-01-21_at_10.54.08_pm.png)merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/190bug fix initial work: https://gitlab.syncad.com/hive/condenser/-/merge_requests/192## summarywhen browsing list posts (trending, hot etc...), usually displays an excerpt which does make sense especially if repetitive introduction context section above. allows describe what about succinct way.![post summary](https://gitlab.syncad.com/hive/condenser/uploads/1a7523be2b1c7d5b95dc11dcb87b4678/screen_shot_2021-01-16_at_10.00.53_pm.png)merge https://gitlab.syncad.com/hive/condenser/-/merge_requests/188## @threespeak embedded playerthreespeak changed domain name url structure little bit needed update its detection logic.merge https://gitlab.syncad.com/hive/condenser/-/merge_requests/185## css displaying title containing long words.thank @game.player raising issue. should now solved.merge https://gitlab.syncad.com/hive/condenser/-/issues/106---**vote witness**[![support @quochuy witness.jpg](https://images.hive.blog/dqmecytzemy8swu6rrg7awhpnrbsehup7ivk9rgyzsuupvw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1)on hive, witnesses playing important role providing performant safe network all us. power choose 30 trusty package transactions sign blocks go blockchain. [vote me via hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1) support community. see: contributions by"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core developers meeting #16",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/01/18/core-developers-meeting-16.html",
      "date"     : "2021-01-18 12:02:51 -0800",
      "desc"     : "meeting points + tl;dr: Dev sync: better if you listen to this one, apologies for sound problems on my end. But basically I worked on recurrent transfers + adding a virtual operation for recovery account...",
      "content"  : "https://www.youtube.com/watch?v=llosnrfjk84meeting points + tl;dr:### dev sync:better if you listen to this one, apologies for sound problems on my end. but basically i worked recurrent transfers adding a virtual operation recovery account changes ### language tag in hivemind (who/when/how):who: probably @howo unless too busy with other core work (meaning feel free take this)when: we need sync more how do it and soon front ends how: some debate between using vs as hidden property of post followup documentation work:@inertia put up [proposal](https://peakd.com/hive-139531/@inertia/proposal-hive-developer-documentation-2021) @gandalf is still discussing someone internally from the @blocktrades team decided not add guy end felt would be many resources same task remove failing or notafter back forth agreed that should removed.### use required actions ?@howo will r&amp;d see piece code smt usable purposes. try integrate it. he might just build another system. way easily handle automated (proposal expiration, payments, etc) time until next change account_objectlots discussion there, conclusion yes can hivemind, no one tagged who yet.### proposal date update (from @guiltyparties)change endpoint allow updating well (to make sooner, won't increasing time), it### cutoff amount @guiltyparties)the idea ask certain have deleted once has reached threshold. like it's low hanging fruit let people system without fearing getting funded, trustless way.an example asks 2000 hbd cases where funded time, only needs 1000 hbd, longer trust they actually delete after receiving hbd.we it.### ibc - inter-blockchain communication protocol, complicated support what things consider protocols? @good-karma)@blocktrades went very interesting monologue in.that's rough summary please, full picture :) meeting 2021/02/01 18 utc.@howo see: developers #16 by"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "2nd update of 2021 on our Hive software work",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/01/16/2nd-update-of-2021-on-our-hive-software-work.html",
      "date"     : "2021-01-16 17:39:24 -0800",
      "desc"     : "This is the 2nd update of 2021 on the Hive programming work being done by the BlockTrades development team.",
      "content"  : "this is the 2nd update of 2021 on hive programming work being done by blocktrades development team.we’ve recently been having meetings to decide how best approach some larger [upcoming tasks (modular hivemind framework, smart contract platform, etc)](https://hive.blog/hive-139531/@blocktrades/roadmap-for-hive-related-work-by-blocktrades-in-the-next-6-months) and what things we need prototype first.while we’re waiting for those prototypes be built, have a number programmers free smaller tasks, so prioritizing lot “low-hanging fruit” that are relatively easy do still provide useful benefits. means reviewing existing open issues in hive’s gitlab repository, closing completed didn’t get properly marked as done, deciding which can complete quickly, discussing possible implementations these with other programmers.below during period various projects:# hived (blockchain node software)to avoid potential performance problems, ability vote expired dhf proposals was disabled:https://gitlab.syncad.com/hive/hive/-/merge_requests/161new tests were created check node’s behavior when replaying stopping restarting (this while ago, but only merged into branch): https://gitlab.syncad.com/hive/hive/-/merge_requests/89one prototyping projects going right now plugin directly writing data from hivemind. here: https://gitlab.syncad.com/hive/hive/-/commits/km_live_postgres_dump/as part above task, there’s debate about might want introduce new computed generally speaking, i hope don’t types aren’t already there, know at least accounting information, example, isn’t currently shared think simplest method just generate virtual operations it processes block, since all passed essentially “side-effects” user-generated report changed internal state blockchain.however, concerned impact generating additional (especially if found many more, could also lead problems keeping code simple), testing has written generates operations, measuring against version doesn’t. it’s worth noting conceivably make generation optional configure given configuration needed. issue task is: https://gitlab.syncad.com/hive/hive/-/issues/111# (2nd layer microservice social media)here’s list changes period:improvements upgrading database schema: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/457a fix user notifications: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/457improvements interrupting both fast sync live indexing process (interrupting ctrl-c operation): https://gitlab.syncad.com/hive/hivemind/-/merge_requests/435improved mute follow_mute operations: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/433speedup get_follow_list api call: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/440increase amount information available via an (see https://gitlab.syncad.com/hive/hivemind/-/issues/124 more details):https://gitlab.syncad.com/hive/hivemind/-/merge_requests/462add measure time consumed after initial (time “vacuum analyze” tables build table statistics improve sql query planning, indexes needed calls, etc): https://gitlab.syncad.com/hive/hivemind/-/merge_requests/464we continued extending coverage over hivemind's extensive api.# condenser web wallet (software powers hive.blog similar sites)we made fixes wallet, handle related display transfers old accounts much recent activity:https://gitlab.syncad.com/hive/wallet/-/merge_requests/85https://gitlab.syncad.com/hive/wallet/-/merge_requests/87https://gitlab.syncad.com/hive/wallet/-/merge_requests/90# near-term plans progresson side, continue governance discussed our six-month roadmap post.on working injecting blockchain hivemind, change indexer (which takes raw builds auxiliary used answer queries). previously calls data, block plugin.we’re experiment using stored serve up get_account_history data. believe tremendously speedup way allow full querying history user’s filtering capabilities. https://gitlab.syncad.com/hive/hivemind/-/issues/132both tightly design modular framework its functionality. turn, will likely basis platform. see: software @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "geekgirl",
      "title"    : "Using HiveSQL with Python on Mac",
      "category" : "howto, python, hivesql",
      "url"      : "/howto/python/hivesql/2021/01/12/using-hivesql-with-python-on-mac.html",
      "date"     : "2021-01-12 19:59:15 -0800",
      "desc"     : "This is a short tutorial on how to get started with using HiveSQL in python scripts on a Mac computer.",
      "content"  : "![hivesql.png](https://images.hive.blog/dqmf1s2twb8mqv8x5uhwrsv4u7d6skbd78ssy3bry9bjyvv/hivesql.png)this is a short tutorial on how to get started with using hivesql in python scripts mac computer. an awesome sql database service created and maintained by @arcange. it makes getting data from hive blockchain fast easy. now that funded decentralized fund this free. use you will need login credentials access the database. database, transfer 0.01 hbd @hivesql account. no memo needed. automatically send back encrypted contain information needed since be encrypted, see wallet accessed key. contained server url, name, user password. now, we can install necessary drivers dependencies our machine. follow following steps.1. open terminal run command homebrew: `/usr/bin/ruby -e $(curl -fssl https://raw.githubusercontent.com/homebrew/install/master/install)`2. next command:`brew tap microsoft/mssql-release https://github.com/microsoft/homebrew-mssql-release`3. run:`brew update`4. driver:`brew msodbcsql17 mssql-tools`5. lastly, pip pyodbc module. may pip, pip3, or pip3.8 depending version of are using. this:`pip3 pyodbc`now ready within scripts. sample script test if properly connect back.```import pyodbcimport pprintconnection = pyodbc.connect('driver={odbc driver 17 for server};' 'server=vip.hivesql.io;' 'database=dbhive;' 'uid=hive-geekgirl;' 'pwd=xxxxxxxxxxxxx')cursor connection.cursor()sqlcommand '''select delegator, delegatee, vesting_shares, timestampfrom txdelegatevestingshareswhere delegator 'geekgirl'order timestamp desc'''result cursor.execute(sqlcommand)result result.fetchmany(100)pprint.pprint(result)connection.close()```we `odbc server` driver. server, uid, pwd sent @hivesql. sqlcommand variable query commands. confirm working properly, connects returns correct data. once everything works should able replace contents any queries as needed.posted [leofinance beta](https://leofinance.io/@geekgirl/using-hivesql-with-python-on-mac) see: @geekgirl"
    } ,
  
    
    
    
    
    
    {
      "author"    : "quochuy",
      "title"    : "My new contributions to the Hive Condenser, Wallet &amp; Hive Keychain",
      "category" : "news, nodejs, condenser",
      "url"      : "/news/nodejs/condenser/2021/01/08/my-new-contributions-to-the-hive-condenser-and-hive-keychain.html",
      "date"     : "2021-01-08 02:40:39 -0800",
      "desc"     : "Here are my recent development contributions to some of apps of the Hive community.",
      "content"  : "here are my recent development contributions to some of apps the hive community.## condenser: fix social tab breaking websitethe previous implementation badges on contained a bug: when api was failing, it also website. this allows graceful handling errors:issue raised by @blocktrades: https://gitlab.syncad.com/hive/condenser/-/issues/110pull request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/184## wallet: show more up 200 witnesses official pagethis is not work (not that old though) but has been recently deployed.additionally showing owner(s) witness account, [official page](https://wallet.hive.blog/~witnesses) now listing than 100 with following filters: - first filtered next filtered, only active shown. filter reduce noise. however, allowed all be listed. for full list includes disabled witnesses, you can always use third party tools such as [hive kings](https://hivekings.com/witnesses) @drakoswarm welcome into offical list:@jamzed @dmitrydao @apshamilton @kristall97 @lapingvino @elindos @hagie @lootkit.witness @whiterosecoffee @veteranforcrypto @dpoll.witness @pcstepull https://gitlab.syncad.com/hive/wallet/-/merge_requests/81## keychain: idle lockthe original lock from keychain](https://hive.blog/@keychain) locking [chrome extension](https://chrome.google.com/webstore/detail/hive-keychain/jcacnejopjdphbnjgfaaobbfafkihpep?hl=en) every 10 minutes regardless if were actually computer or not. will make when:- locked- user idled (as per os preferrences)issue @themarkymark: https://github.com/stoodkev/hive-keychain/issues/11pull https://github.com/stoodkev/hive-keychain/pull/81## export/import permissionsthis new feature export keychain permissions (when allow website perform signing actions without prompt time). complements extension's config which makes easier migrate/copy/backup your another.feature request https://github.com/stoodkev/hive-keychain/issues/72pull https://github.com/stoodkev/hive-keychain/pull/80---**vote witness**[![support @quochuy witness.jpg](https://images.hive.blog/dqmecytzemy8swu6rrg7awhpnrbsehup7ivk9rgyzsuupvw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1)on hive, playing important role providing performant and safe network us. have power choose 30 trusty package transactions sign blocks go in blockchain. [vote me via hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1) support community. see: condenser, wallet &amp;"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "Hive API node performance measurement",
      "category" : "news, devops, api",
      "url"      : "/news/devops/api/2021/01/05/hive-api-node-performance-measurement.html",
      "date"     : "2021-01-05 17:42:33 -0800",
      "desc"     : "This post describes the Jussi Traffic Analyzer software that we created to measure the performance of our production Hivemind node and some of the results we’ve recently obtained from it.",
      "content"  : "this post describes the [jussi traffic analyzer](https://gitlab.syncad.com/hive/jussi-traffic-analyzer) software that we created to measure performance of our production hivemind node and some results we’ve recently obtained from it.the intended audience is mostly hive apps developers api operators, but if you're like me sometimes you read something very techy even though it's hard understand (i used do with scientific america articles when i was kid), feel free enjoy as well.it’s important note tool analyzes jussi log files, so it’s not really useful for measuring third party nodes (unless operator willing provide their logs, which probably doubtful).the generates two reports over any specified period files:* `analysis.csv` contains statistics on different calls* `slow_calls.txt` actual calls exceeded a time complete (for example &gt; 2 seconds)# overview call file (analysis.csv)the data in slow_calls.txt self-explantory, i’ll spend most discussing format analysis.csv file. each row analysis represents specific type (the first columns, there's actually 3 although only show one screenshot keep it readable, identify what is). thing mind, however, single can result quite sql queries inside hivemind, depending parameters passed call, there’s still lot being “averaged” together report. example, required make get_ranked_posts vary whether you’re asking ranked by trending, hot, etc. nonetheless, think be obtaining intuitive feeling times various calls. here’s sample (i’ll raw available mattermost dev channel later today). taken today hour period, running latest optimizations. doesn’t all columns file, i’ve selected ones particular interest discuss post.* hits number cache hits. are generally low, because parameter values also many responses change quickly (votes, particular, calls). optimization work able itself.* *avgtime* average type.* *slowesttime* slowest recorded during call.* *total#calls* total period.* *slow(1s+)* take 1 second or more complete.* *avgslow* such slow (so will always greater than 1s).* *slow%* percentage *totaltime* consumed adding up made call. there were 100 takes .1 s, then value would 10s.![image.png](https://images.hive.blog/dqmqqdtqhd8tasfs5kaxx4qqu15cwst5w4nbonpgb3jux6d/image.png)# notes about using these metricsi use overall loading impact server, exceptions rule, broadcast_transaction_synchronous, has wait block transaction included block, consume cpu while waiting. metric determining how well scale handle traffic.i *slowesttime*, *slow*, investigate potential quality service problems might affect user experience (users don’t long see results).*averagefast* knowing normally expect an exclude “outlier” access “unusual” timing thousands comments). developers.# dataafter generating analyzer, import into libreoffice calc similar spreadsheet program analyze data, autofilter sort columns. shown, sorted *avgfast* time, longest cases “fast” case `get_block_range`. served hived, considerably .753s 2.4s!). objectives hived plugin feed directly postgres database speedup having rather serve future (and coincidentally, reduce caused sync currently makes obtain hived).# pghero supplement performancein addition pghero, open-source web-based profiling databases, within hivemind’s database.pghero particularly isolating problematic given implemented multiple (either serially branching between possible query choices, common).however, report spent processing, performance, including python-based `hivemind server` process communicates database. hived-based calls, cannot, since processing involve queries. see: measurement @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "1st update of 2021 on BlockTrades work on Hive software",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/01/05/1st-update-of-2021-on-blocktrades-work-on-hive-software.html",
      "date"     : "2021-01-05 12:52:24 -0800",
      "desc"     : "This is a major milestone for our Hive work, and it means we’re now finally freeing up to take on big new tasks.",
      "content"  : "it’s been several weeks since my last report, as i was first involved in preparing for hivefest, then the holidays hit and decided to focus on coding while a lot of our staff vacation didn’t have many management tasks deal with. particular wanted make some large scale changes hivemind code there were fewer going from other programmers.in meantime, i’m happy announce that we’re about tag “versioned” release hivemind: v1.24.0. major version is being set 1, moving out “beta” status has so long represent overhaul we’ve done base, 24 indicate associated hard fork hived use, third number (currently 0) report minor revisions improve performance, add additional features, etc. this milestone hive work, it means now finally freeing up take big new tasks.# work (blockchain node software)we’re still working creating plugin can directly write needed data into hivemind’s database during reindexing normal block reception. most provided by get_block_api no interest hivemind, using api get unnecessarily wasting cpu, addition slowing down hivemind. expect approach will lead significant speedup initial sync time should also reduce live-sync time. ongoing here:https://gitlab.syncad.com/hive/hive/-/commits/km_live_postgres_dump/work continued implementing expiration governance votes (witness votes, proposal voter proxy changes) when an account ceases activity, progress here (one programmers introduction core blockchain code):https://gitlab.syncad.com/hive/hive/-/merge_requests/160in developer call, someone suggested (happily think), nowadays sounded like we had at least 5 developers who worked software blocktrades started. knew higher, but know exact number, check looks 10 (note doesn’t include such condenser).we guys experience with base steemit days, are currently projects, fair say plenty 1st layer, case anyone concerned point.# (2nd layer microservice social media applications)as mentioned intro, official few required there. here’s short list that’s merged recently:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/426https://gitlab.syncad.com/hive/hivemind/-/merge_requests/411https://gitlab.syncad.com/hive/hivemind/-/merge_requests/395https://gitlab.syncad.com/hive/hivemind/-/merge_requests/387https://gitlab.syncad.com/hive/hivemind/-/merge_requests/428and “holiday work” optimizing queries :-)https://gitlab.syncad.com/hive/hivemind/-/merge_requests/454it allows quite speedup, production server itself only load around 1 (there’s located there, total system 1.5) handling portion hive’s traffic. short, handle fairly huge amount traffic without requiring powerful (my guess single could 8 times problem). become more decentralized your average unix enthusiast inexpensively setup serve all traffic.i’ll prepare detailed results latency individual calls later spreadsheet, because timing information be useful 2nd app developers.we pending hasn’t yet merged, validation (because “full sync” 50m+ blocks), move releases nodes back “master” branch leave develop experimental (due urgency development frequent updates schema, ever hf24). part release, ran full test just prior optimizations mr454 above, 454 unlikely affect result, mostly optimization.# condenser (open-source sites https://hive.blog)we finished deployed changes, haven’t much them production. afaik they ok, however. i’ll probably do testing today.# what’s plan next week?* continue tests.* similar 454, complete week.* tests repo instead tests_api simplify practical testing.* begin design analysis slimmed-down smart contract platform based it.* via slow impact speed ci (which sets upper limit how fast validate changes). microservice.* hf25(details here: https://hive.blog/hive-139531/@blocktrades/roadmap-for-hive-related-work-by-blocktrades-in-the-next-6-months). see: update 2021 @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core developers meeting #15",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2021/01/05/core-developers-meeting-15.html",
      "date"     : "2021-01-05 09:31:57 -0800",
      "desc"     : "You'll notice that the video is much better, this is all thanks to @crimsonclad,core devs meeting are now livestreamed.",
      "content"  : "https://www.youtube.com/watch?v=wkg7ga9gxh4you'll notice that the video is much better, this all thanks to @crimsonclad,core devs meeting are now livestreamed. be sure tune in next time if you want ask your questions live :) points touched: ## dev synci advise just listen part.## why use account_id_type over account_name_typewe need do more research on those types and decided it wasn't critical kinds of updates core chain as memory usage has been reduced significantly already## layer 1 smt + 2 ?why not assuming we have resources commit finishing smts, but for no plan 1, still quite blurry haven't finished evaluating which route go to## allow post/comment deletion with votes/active shareswe figure out steemit team added such limitation first place, ux wise it's weird able delete a post at 0$ 0.01$ so not. push by one houryes. will move bit future find best everyone. 17 utc (instead 16 utc) communities fixes (from @asgarth)it's very long topic better in, conclusion was point were not, do## term roadmap (at least year) dateswe don't actual objectives because hard do, rough idea what's gonna done @blocktrades pointed his post: https://peakd.com/hive-139531/@blocktrades/roadmap-for-hive-related-work-by-blocktrades-in-the-next-6-months## coredev meetings reporting:- summary discussed decision (ok, nok, postponed, requires gov/community feedback/vote, ...)- previous pendingnot discussion there, great feedback from @arcange, what i'm doing right ;) involving community devslots discussions there i it, about running bug bounty program discussed. documentation updatedefinitely must needed change, @gandalf @howo both thinking hiring someone (we'll see how goes) improve network security (https://peakd.com/hive/@bashadow/re-howo-qm4a9r)better :)## anonymous downvotes upvotes (https://peakd.com/hive/@mariuszkarowski/re-howo-qm4046)it's things blockchain public nature, probably possible needs lot research, pursuing now. issues hive nodes (https://peakd.com/hive/@borislavzlatanov/re-howo-qmdaum)we assumed mostly due @anyx's node being date he second failover after @blocktrades, led some testing auto see: developers #15"
    } ,
  
    
    
    
    
    
    {
      "author"    : "dbuzz",
      "title"    : "Embed and Buzz Directly from any web page!  Meet the EMBED BUZZ BUTTON",
      "category" : "tools",
      "url"      : "/tools/2020/12/30/embed-and-buzz-directly-from-any-web-page-meet-the-embed-buzz-button.html",
      "date"     : "2020-12-30 02:00:00 -0800",
      "desc"     : "Meet the EMBED BUZZ BUTTON, now you can embed the ability to buzz from your web page or app!",
      "content"  : "![buzzbutton.png](https://files.peakd.com/file/peakd-hive/dbuzz/q7uzyyuv-buzzbutton.png)# embed and buzz directly from any web page! ---what's good [d.buzz](https://d.buzz)? today would like to take a moment introduce you the button. this is handy-dandy button can add page enable your users in one click, [d.buzz](https://d.buzz). here what looks like. --- ![buzzbutton.png](https://files.peakd.com/file/peakd-hive/dbuzz/xune9x7h-buzzbutton.png) ---basically, small displayed on website where viewers easily share content onto it consists of two parts; link [d.buzz](https://d.buzz)'s 'buzz' composer buzzwidget.js script enhance with identifiable button.the simplified explanation when click button, pop-up window comes up linking https://d.buzz/#/intent/buzz . magic happens information pass along that window. for now however let's review how webpage or, dapp. ---# website?create new anchor element `dbuzz-share-button` class allow `buzzwidget.js` discover turn into set href attribute value create redirects dbuzz intent composer.- `buzz`set text by customizing query parameters.- `buzz`- customize parameters using data/attributes.`buzz`- include once template tracking widget javascript events.``# parameters## parameter- appears preselected composer. if not set, may be auto-populated page's title element.## url contains an absolute http or https shared dbuzz. location.href page.## tags' parameter - must separated comma. do preceding # each hashtag; will automatically proper space-separated hashtag.# customization- data-size large display larger button---we are writing developers document everybody shortly, use as micro guide get dapp.should have questions, please post them below hit us discord at : https://discord.gg/5hqzvtxs---### over out.#### [d.buzz](https://d.buzz/) ---![twitter2.jpeg](https://files.peakd.com/file/peakd-hive/dbuzz/mrkn1jsg-twitter2.jpeg)--- ## ... censorship-resistant short form microblogging platform empowers thoughts 280 characters less. censorship resistant built community love. ### vote @dbuzz witness. ---using hivesigner: [hivesigner.com](https://hivesigner.com/sign/account-witness-vote?witness=dbuzz&amp;approve=1)---search witness [peakd.com](https://peakd.com/)---search [hive.blog](https://wallet.hive.blog/~witnesses)--- we strive fun neutral stance topics. concerns content, contact @jacuzzi, who writes generates our articles, team clarification. ---[![goldenbuzz_leaderboard.jpeg](https://files.peakd.com/file/peakd-hive/dbuzz/9wtbosme-goldenbuzz_leaderboard.jpeg)](https://peakd.com/@dbuzz)[![dbuzzsotrebanner.jpeg](https://files.peakd.com/file/peakd-hive/dbuzz/889g0jq2-dbuzzsotrebanner.jpeg)](https://dbuzz.store/)--- see: meet"
    } ,
  
    
    
    
    
    
    {
      "author"    : "ecency",
      "title"    : "RPC-Proxy for blockchain, opensourced",
      "category" : "news, devops, api",
      "url"      : "/news/devops/api/2020/12/29/rpc-proxy-for-blockchain-opensourced.html",
      "date"     : "2020-12-29 02:18:03 -0800",
      "desc"     : "Excited to opensource our RPC Proxy code.",
      "content"  : "excited to opensource our rpc proxy code. [check it out](https://github.com/ecency/rpc-proxy) and try if you are running hive full node or any blockchain for that matter. we would love hear your experience with work together make better.![blockchain-rpc-proxy-ecency](https://images.ecency.com/dqmub61koaesxvbyerp25jai6atcckqtwizh58sm9mgyycu/rpc_proxy.png)we tried as generalized possible so in future can utilize when cross operations added. also codebase it, is super clean easily extensible. whether hive, btc, eth other nodes, most of which has in-built json-rpc support, believe this will be great contribution entire ecosystem, allowing easy creation caching layer.if python developer know how blockchains general, out let us works you.currently nodes use [jussi](https://gitlab.syncad.com/hive/jussi) tool. eyes, looked bit over-engineered not really extensible because designed only hard changes/improvements. goal new script allow more developers add changes well offer alternative help ourselves long term.**source code:** https://github.com/ecency/rpc-proxy---## support ecency, [in mission](https://ecency.com/hive/@ecency/proposal-ecency-development-and-maintenance): ecency: https://ecency.com/proposals/141hivesigner: [vote proposal](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b141%5d&amp;approve=true) see: rpc-proxy blockchain, opensourced by @ecency"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive developers meeting #14",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/12/29/hive-deloppers-meeting-14.html",
      "date"     : "2020-12-29 01:27:00 -0800",
      "desc"     : "meeting points: Dev sync Recurrent transfers current status + RC considerations voting changes thoughts (allow 1000% votes/downvotes) replace condenser for ecency ...",
      "content"  : "https://www.youtube.com/watch?v=l-hjtn-sk_cmeeting points:* dev sync* recurrent transfers current status + rc considerations* voting changes thoughts (allow 1000% votes/downvotes)* replace condenser for ecency ?* create a new virtual operation recovery_account_updatenext meeting is on january 4th at 17 cet, it will be streamed by @crimsonclad, sure to tune in :)and if you have points you'd like see addressed the next one, feel free post them comments. see: hive developers #14 @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "Verify blocktivity numbers for Hive and Blurt",
      "category" : "howto, beem, python, blocktivity",
      "url"      : "/howto/beem/python/blocktivity/2020/12/20/verify-blocktivity-numbers-for-hive-and-blurt.html",
      "date"     : "2020-12-20 03:27:33 -0800",
      "desc"     : "@therealwolf was wondering on twitter on the high activity numbers on blocktivity.info for blurt ...",
      "content"  : "@therealwolf was wondering on twitter the high activity numbers blocktivity.info for blurt:https://twitter.com/therealwolf42/status/1340374495899561986the stats can be seen here:![blocktivity 20.12.2020](https://images.hive.blog/dqmqeonnwui7svcdwhzwntjwakrkzyzzymwkxfrvwum1hpi/blocktivity%20on%2020.12.2020)lets validate them using [beem](https://github.com/holgern/beem).i added script also to my beem github: [blockactivity.py](https://github.com/holgern/beem/blob/master/examples/blockactivity.py).```import sysfrom datetime import datetime, timedeltaimport argparsefrom timeit default_timer as timerimport loggingfrom beem.blockchain blockchainfrom beem.block blockfrom hive, blurt, steemfrom beem.utils parse_timefrom beem.nodelist nodelistlog = logging.getlogger(__name__)logging.basicconfig(level=logging.info)def parse_args(args=none): d 'verify blocktivity by counting operations and trx last 24 hours.' parser argparse.argumentparser(description=d) parser.add_argument('blockchain', type=str, nargs='?', default=sys.stdin, help='blockchain (hive, blurt or steem)') return parser.parse_args(args)def main(args=none): args parse_args(args) blockchain args.blockchain nodelist nodelist() if == hive is none: max_batch_size 50 threading false thread_num 16 block_debug 1000 nodes nodelist.get_hive_nodes() blk_inst hive(node=nodes, num_retries=3, num_retries_call=3, timeout=30) elif blurt: none 8 20 [https://api.blurt.blog, https://rpc.blurtworld.com, https://rpc.blurtworld.com] blurt(node=nodes, steem: nodelist.get_steem_nodes() steem(node=nodes, else: raise exception(wrong parameter, steem) print(blk_inst) block_count 0 total_ops total_trx blocksperday * 60 blockchain(blockchain_instance=blk_inst) last_block_id blockchain.get_current_block_num() - last_block block(last_block_id, blockchain_instance=blk_inst) stoptime last_block.time() + timedelta(seconds=60 24) start timer() entry in blockchain.blocks(start=last_block_id, max_batch_size=max_batch_size, threading=threading, thread_num=thread_num): += 1 block entry: trxs entry[block][transactions] entry[transactions] tx trxs: op tx[operations]: block_time parse_time(entry[block][timestamp]) entry[timestamp] ops_per_day / % (block_debug) 0: print(%d blocks remaining... estimated ops per day: %.1f (blocksperday block_count, ops_per_day)) &gt; stoptime: break duration print(received %.2f blocks/s. (block_count duration)) print(bocks: %d, %.3f s (block_count, print(operations %d total_ops) print(trx total_trx)if __name__ '__main__': sys.exit(main())```just save blocktivity.py call it with name (can steem blurt).## checking activityi started three terminals check blurt:```python3 hivepython3 steempython3 blurt```## resultsthe following table shows obtained:| | ||---|---| --- || 28756 28466 28634 128.855 117.712 8016.021 blocks/s 223.17 241.83 3.57 883929 195892 6942 894856 200968 7461 ratio of bitcion 0.98 0.221 0.008 |### hiveit seems that shown at https://blocktivity.info/ counted every operation twice sums up 48 hours.the count reaches 99.84% maximum 28800.### steemthe 98.84% blurtthe speed receiving from api really slow, took 62 times longer hive. are completely wrong. 549405 reached around 74 days not 99.42% 28800.it bug already found will fixed soon:https://twitter.com/eastmaels/status/1340477277788753920___*if you like what i do, consider casting a vote me witness [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) [peakd](https://peakd.com/witnesses)* see: verify @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "GetBlock x Hive : Providing Hive Node Services, Presenting at HiveFest, and a HIVE Giveaway",
      "category" : "news, devops, api",
      "url"      : "/news/devops/api/2020/12/16/getblock-x-hive-providing-hive-node-services-presenting-at-hivefest-and-a-hive-giveaway.html",
      "date"     : "2020-12-16 11:13:36 -0800",
      "desc"     : "@GetBlock is now providing Hive API node services, presenting at HiveFest, and they're having a HIVE giveaway!",
      "content"  : "![](https://i.imgur.com/uockocm.png)### getblock recently announced they are now providing hive node availability as part of their api connection services.hive's decentralized network is supported by many full public nodes that provided free charge community members to serve the ecosystem, but there also some real benefits a la carte rpc services balance well with our existing infrastructure. while small projects served nodes, choose explore spinning up own for better performance and this can have very steep learning curve! ecosystem provides large opportunity managed services, has stepped meet challenge. depending on what project actually needs, getblock's paid allow semi-private controlled traffic levels, offers all plugins, set maintained 24/7 professional team, which means developers managers focus building instead server management. accessibility skill levels budgets crucial growth. wide range blockchain its customers, along information about chains themselves. hive's documentation available diverse userbase, opening discovery integration into crypto websites around web. amplifies expands reach utility makes it more easily accessible everyone who uses services. through https://getblock.io/nodes/hive, currently running version 1.24.6. located in germany. ![](https://i.imgur.com/jstkziz.png)read here: https://getblock.io/blog/about-the-hive-project## presenting at hivefestthe team really embraced ecosystem! you'll find begun centric content account,@getblock. if you attending [hivefest](https://hivefe.st/) vr, make sure check schedule! olivia will be share views cryptosphere, goals ecosystem.![image.png](https://files.peakd.com/file/peakd-hive/hiveio/z37plkgw-image.png)#### finally, holding twitter contest give away hive!https://twitter.com/getblockio/status/1339239070644449282if you're looking way put little bit holiday jingle your wallet, covered. it's always exciting see collaboration outreach space, wonderful example. here's new year adventures!#### getblock?&gt; service fast easy continuously growing list over 40 cryptocurrencies’ including bitcoin (btc), ethereum (eth), litecoin (ltc), among others. support such tools like json-rpc, rest, websockets, facilitates direct synchronization blockchain.&gt;&gt; order build blockchain-based application, an individual or company usually deploy run several nodes. no need launch anymore get access currencies automatically.&gt;&gt; solution those using developing light wallets exchanges, young entrepreneurs beginners – neither time nor resources node. started getblock, clients platform fill form website personal key tutorial how connect see: x : hivefest, giveaway @hiveio"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "Updated on BlockTrades Hive work (as of Dec 9th 2020)",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/12/09/updated-on-blocktrades-hive-work-as-of-dec-9th-2020.html",
      "date"     : "2020-12-09 16:47:18 -0800",
      "desc"     : "I decided to skip last week’s progress report, since I wanted to keep the focus on our roadmap post. In the meantime, we’ve continued to make good progress over past two weeks.",
      "content"  : "i decided to skip last week’s progress report, since wanted keep the focus on our roadmap post. in meantime, we’ve continued make good over past two weeks. below is a summary of work done this period:# hived (blockchain node software)as mentioned previously, we’re currently creating plugin that can directly write needed data into hivemind’s database during hive reindexing and normal block reception. most being provided by get_block_api no interest hivemind, so using api get unnecessarily wasting cpu, addition slowing down hivemind. expect approach will lead significant speedup initial sync time for hivemind (my guess now 2x at least) it should also reduce live-sync time. ongoing here:https://gitlab.syncad.com/hive/hive/-/commits/km_live_postgres_dump/we made change proposals aren’t automatically removed after they expire:https://gitlab.syncad.com/hive/hive/-/merge_requests/154this allows report have ended.we used memory-mapped io speed up rebuild block_log.index file from log. it’s 3x faster fast nvme drive (and even better magnetic drive).https://gitlab.syncad.com/hive/hive/-/merge_requests/156# (2nd layer microservice social media applications)most devs working week. are some merge requests incorporated develop branch repo:various bug fixes optimization work:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/410https://gitlab.syncad.com/hive/hivemind/-/merge_requests/405https://gitlab.syncad.com/hive/hivemind/-/merge_requests/413https://gitlab.syncad.com/hive/hivemind/-/merge_requests/416https://gitlab.syncad.com/hive/hivemind/-/merge_requests/400https://gitlab.syncad.com/hive/hivemind/-/merge_requests/418https://gitlab.syncad.com/hive/hivemind/-/merge_requests/424https://gitlab.syncad.com/hive/hivemind/-/merge_requests/426https://gitlab.syncad.com/hive/hivemind/-/merge_requests/411https://gitlab.syncad.com/hive/hivemind/-/merge_requests/428enable decentralized muting:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/407https://gitlab.syncad.com/hive/hivemind/-/merge_requests/421https://gitlab.syncad.com/hive/hivemind/-/merge_requests/422new tests:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/415test system improvement:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/380we ran full test (4 day long currently), which allowed us catch fix few more bugs.we real-world testing [head branch]( https://gitlab.syncad.com/hive/hivemind/-/commit/7872ef7e4d3642c61606fb6302f16452f6aa1b60) api.hive.blog.# support lists/muting condenser (https://hive.blog)we several improvements ui based feedback beta-testers:https://gitlab.syncad.com/hive/condenser/-/merge_requests/165https://gitlab.syncad.com/hive/condenser/-/merge_requests/166# what’s plan next week?* finish list changes (likely tomorrow)* continue tests (long term task).* automate running hived/hivemind run once week.* via as slow has big impact ci (which sets an upper limit how we validate changes).* stopgap above, trying current code making concurrent calls (we’ll probably be able way, other words, bringing 2 days server with sufficient cores handle additional load).* official release master create snapshot operators update their nodes quickly. all updated, deploy new lists muting. see: updated blocktrades (as dec 9th 2020) @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "How to use a coldcard MK3 to derive your new account password from a 24 word seed",
      "category" : "news, python, wallet",
      "url"      : "/news/python/wallet/2020/12/05/how-to-use-a-coldcard-mk3-to-derive-your-new-account-password-from-a-24-word-seed.html",
      "date"     : "2020-12-05 15:10:18 -0800",
      "desc"     : "When you have stored your bitcoin seed (consisting normally of 24 words) in metal, it would be great if you could use this also to store your Hive password.",
      "content"  : "each hive account has four keys which can be used to sign broadcast operations. as the key name says (owner key, active posting key), they have different use cases. normally, a single password is derive these from it. this advantage that only one passphrase needs securely stored.i change my by generating new password:![new password](https://images.hive.blog/dqmwagwvqs2gsjfqmmfpqcblfswxks5jmdk5wysfnac6tkq/new%20password)you need `back it up storing in your manager or text file.`, but what happens when hard drive failing (lost master password, ...)? you print it, case of fire water damage?## using bitcoin seed for hivewhen stored (consisting normally 24 words) metal, would great if could also store password.it possible [bip-85 (deterministic entropy bip32 keychains)](https://github.com/bitcoin/bips/blob/master/bip-0085.mediawiki) creating coldcard mk3 hardware wallet (as far i know device support bip85).![coldcard](https://images.hive.blog/dqmyzebd2xqzeyxr2lhqeuicmvazpwec1ywthubnkmathvb/coldcard)when derived wif create account, do not and anymore, recreated (i remember index number, try all numbers 0 9999).thus increase security owner computer.## how hivethis guide will [coldcard mk3](https://coldcardwallet.com/) necessary bip-85 python (beem) changing keys.### on sdcardat first we sdcard.![go advanced](https://images.hive.blog/dqmujxn6rzubxnrxmmkp6pnt1utmqc4kbhe6ad1pylifyqd/go%20to%20advanced)![then entropy](https://images.hive.blog/dqmvjnsatvvtuidpnm4u91d8vypykdhx1uevsoofzkhsfvs/then%20to%20derive%20entropy)we select wif:![then wif](https://images.hive.blog/dqmsn5u2kbprsf7v5eim2vrusdkgs7vdqhkjjjcte8zds3f/then%20to%20wif)select number remember:![select number](https://images.hive.blog/dqmrrywjvhnwgscazdfvv9f1urmvzkhpu1r9xj6xejn7dt4/select%20a%20number)store microsd:![press 1 sd card](https://images.hive.blog/dqmqiwagr6ylfopcjrbbptjqgahp5gp5zzbgomeio1xyfaa/press%201%20to%20store%20the%20wif%20on%20the%20sd%20card)## reading sdcard keyswe following packages:```pip3 install beem```the firstly converted into then applying `passwordkey` adding `p`:```from beemgraphenebase.account import privatekey, passwordkeywif=xxx # coldcardwif = privatekey(wif)pk passwordkey(, str(wif), role=)password 'p' + str(pk.get_private())print(password)````password` set `https://wallet.hive.blog/@/password`after posting, memo should deleted.whenever, an getting lost needed, created coldcard.it automate everything. script will* read extract wif* account* broadcasting `update_account````from beem hivefrom passwordkeyimport argparsefrom prettytable prettytableimport sysimport getpassif __name__ == __main__: parser argparse.argumentparser(description=derives wif) parser.add_argument('wiffile', type=str, nargs='?', help='colcard file read.') parser.add_argument('account', help='account name.') args parser.parse_args() wiffile args.wiffile args.account next_var path with open(wiffile) fp: line line.strip() : continue (privkey):: elif line.strip(): wif: path: privatekey(wif) pk role=) str(pk.get_private()) owner_key passwordkey(account, role=owner) owner_pubkey format(owner_key.get_public_key(), stm) active_key role=active) active_pubkey format(active_key.get_public_key(), posting_key role=posting) posting_pubkey format(posting_key.get_public_key(), memo_key role=memo) memo_pubkey format(memo_key.get_public_key(), t prettytable([key, value]) t.align l t.add_row([account, account]) t.add_row([path, path]) t.add_row([new pubkey, owner_pubkey]) active_pubkey]) posting_pubkey]) memo_pubkey]) print(t) ret input(broadcast update_account keys? [y/n]) [y, yes]: getpass.getpass(prompt=current key:) hive(keys=[owner_key]) tx hive.update_account(account, owner_key=owner_pubkey, active_key=active_pubkey, posting_key=posting_pubkey, memo_key=memo_pubkey) print(tx) input(show private t.add_row([active privkey, str(active_key.get_private_key())]) t.add_row([posting str(posting_key.get_private_key())]) t.add_row([memo str(memo_key.get_private_key())]) password? t.add_row([owner str(owner_key.get_private_key())]) t.add_row([password, str(password)]) del password```this py (e.g. new_password.py) called:```python3 new_password.py f:drv-wif-idx0.txt holger80```where `f:drv-wif-idx0.txt` exported file.deleting done hand (remember number).i'm currently beempy, cli tool beem.there second way (signing message), i'm investigating right now.___*if like do, consider casting vote me witness [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) [peakd](https://peakd.com/witnesses)*&lt;/div&gt; see: word @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "Roadmap for Hive-related work by BlockTrades in the next 6 months",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/12/02/roadmap-for-hive-related-work-by-blocktrades-in-the-next-6-months.html",
      "date"     : "2020-12-02 15:36:21 -0800",
      "desc"     : "The BlockTrades team is planning a lot of future work to the Hive ecosystem. This posts details some of the changes we’re planning so far.",
      "content"  : "the blocktrades team is planning a lot of future work to hive ecosystem. this posts details some changes we’re so far. i want apologize in advance, as still somewhat raw dump my thoughts about sometimes complicated issues. means that topics are written for everyone, but other contain fairly technical will likely be difficult grasp at first reading (and maybe subsequent ones). we get closer implementation these ideas, i’ll try elaborate more on individual ideas from post later (if someone else hasn’t taken challenge meantime).i’m dividing up into several categories, because they impact different systems and therefore have scheduling needs.# blockchain-consensus (hardfork changes)these hive’s governance model, require hardfork approval by top 20 witnesses. all nodes update continue operating network, which bit pain coordinate, devs avoid requiring too many hardforks (usually once). current plan schedule 25 around 6 months now (mainly exchanges having upgrade soon after last hardfork). protocol planned expected rather easy coded much sooner than now.the not required order execute our ecosystem: can make important useful before next hardfork.# what hmts (user-defined tokens)?the only potential change might conceivably blockchain rules wouldn’t necessarily would enabling hmt code been tested well yet need improvements prior release). point, haven’t made any decision whether or enable hmts, think there’s reasonable chance do something way tokenization 2nd layer. short, topic needs research, discussed depth post, we’ve fully explored options. personal preference moment implement user-defined tokens layer using smart contract evaluation system, allow flexibility possible with hmts. feasible, define robust model decentralized apps (to sections post). it’s also worth noting don’t exclusive options: contract-based could confusing users may offer no real benefit.# 25## vote expiration witnesses, proxies, proposalscurrently votes expire, lead never change, either due inattention voter worse cases, owner loses their keys passes away (yes, hive, dead people really voting). non-optimal voting, since stake isn’t properly monitoring proposals being voted for.to address issue, we’ll set automatically expire one year action an account. implemented storing “last time” each account (this information part account’s profile information).whenever user sets voting proxy, vote/unvotes witness proposal, time updated time. if without account, witnesses canceled, proxying reset.user interfaces like wallets browsers report warning when getting near expiration. such warnings should prevent active forgetting take keeps expiring.just clear how works practice: your you entire year. who longer “paying attention” what’s going (or lost control keys).## 5min window provide proportional rewards during windowcurrently, earlier 5 minutes published results less curation voter. led rise auto-vote bots end minute window, severely disadvantaging manual voters.with there penalty early post/comment. furthermore, advantage anyone within new period. voters idea long enough curators find good content, putting them equal footing bots. be? i’d argue somewhere between 2 hours 24 most. generally favor it hours, friendly competition voters, encourage rapid brings content trending page quicker.this eliminate bots, remove financial incentive use bot instead manually. select “popular” gain post.the above “smart” begin trailing successful hour period attempt maximize rewards. whole, seems beneficial, guiding force well.# non-consensus hived softwarethese hardfork, often everyone node. type include: 1) speed memory optimizations, 2) minor bug fixes, 3) addition api functionality. usually very controversial, affect governance.because node, released whenever ready, scheduled big release. simple example, had 7 releases hf (we’re v1.24.7 right now). most impacted node operators, normal didn’t (most running v1.24.2).there’s areas explore making blockchain:1) further reductions usage2) peer-to-peer networking layer3) services4) plugin real-time data appsof areas, believe 4) critical change. currently takes over 4 days sync existing hivemind instance. able significantly reduce creating custom fill database (we’ve measurements show filling main bottleneck full timing system fast io, cpu bottlenecking side).another issue “live sync” process intentionally lags blocks behind head block, handle micro-forking hived. creation directly writes hivemind’s faster manage case microforks. this, turn, operate recent block data, eliminating second lag (2 3s intervals = 6s) has. interactive experience various frontends.# development ecosystemthis where expect devoting few months. thing create framework apps.right now, rely supply via calls (with coming social media microservice). custom_json operations functionality unique application. approach “works”, definitely improved. ## challenges appsone run own heavy weight provided others. ideally, app lightweight provides needed app, avoiding reliance uptime integrity external nodes.another processing streams operations) face forks, already processed discarded data. potentially problematic issues blockchain-based app.## (via “modular hivemind” nodes)to address, issues, technology stack hivemind, combined developing simplify reception support fork-handling generic undo mechanism. however, unlike traditional installation, operator decide he wants store apis support. supports game initially track balances history, add form was @howo coined term refer idea.## consistency checking decentralize trust ecosystemsnote: those mentioned outset trivial understand unless you’re programmer even then).another capability automating multiple servers. sort go towards reducing particular (i.e. decentralizing trust).one periodically (for once every 1000 blocks) generate hash state portion thereof) publish transaction. same statement interpret under rules).in (a fork), while continuing coexist network. publishing hashes state, know decided common rules, informed choice course, always simply cheaper easier do. case, valuable supporting protocol, amount consensus among major determinant value protocol.# increase pace open-source (e.g hive.blog , ecency.com, etc)for past months, i’ve focused adding interface programmers increased open-sourced hive-based front ends. naturally employed number front-end programmers, were tied projects, couldn’t moved serious impacts projects.there’s little point specifics exact ends, quite small, done time, driven demand. felt say recognize importance enjoyment facets (as currency, platform based apps, backbone) increasing efforts area.# reputation/rating web-of-trust conceptsthis i’m interested in, later, huge deserves its divide digestible bites. basic assign judgment skill ratings disciplines products/people/ideas. judgment, compute rating scores web network subject opinions.i almost mention roadmap hive-related function figured least give brief start effort “start” long-term project grow years expand areas. initially, focus prototype covers relative small subset things rated mechanisms computing analyzing makes his network.# final notealso note just on. working recurrent payments currently, patreon-style payment models. see: @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "therealwolf",
      "title"    : "NPM module for Hive Keychain",
      "category" : "news, nodejs, hive-keychain",
      "url"      : "/news/nodejs/hive-keychain/2020/12/02/npm-module-for-hive-keychain.html",
      "date"     : "2020-12-02 02:19:03 -0800",
      "desc"     : "I've created a small Keychain helper for myself a while ago and recently converted it to an npm module to make it easier for other devs to integrate Keychain into their websites.",
      "content"  : "greetings #hivers,i've created a small keychain helper for myself while ago and recently converted it to an npm module make easier other devs integrate into their websites. seriously, just install you're good go.&gt; https://www.npmjs.com/package/@hiveio/keychain&gt; https://gitlab.syncad.com/hive/keychain-node## example code```import {keychain, iskeychaininstalled, haskeychainbeenused} from '@hiveio/keychain'const {success, msg, cancel, notinstalled, notactive} = await keychain(window, 'requesttransfer', 'test', 'therealwolf', 5, 'test memo', 'hive')// all goodif(success) { // do your thing}// user didn't so something must have happenedelse if(!cancel) if(notactive) alert('please allow access this website') } else if(notinstalled) keychain') error happened - check msg }}```## explanation- `keychain`: run specific function- `iskeychaininstalled`: checks whether is installed can be found within the window object.- `haskeychainbeenused`: key/value inside localstorage exists, which means has been used before, but isn't active. that happen if extensions activated per site.- `notinstalled`: return boolean `keychain` with same logic as `iskeychaininstalled`- `notactive`: `haskeychainbeenused`- `cancel`: indicates popup closed, thus cancelled. should ignored.- `success`: transaction was successful. will false in case of `cancel`.- `msg`: string error.for normal workflow, you don't need use `iskeychaininstalled` or `haskeychainbeenused` it's automatically checked when running `keychain`. these functions mostly matter ux purposes.---happy coding! see: hive by @therealwolf"
    } ,
  
    
    
    
    
    
    {
      "author"    : "good-karma",
      "title"    : "Hivesearcher website opensourced",
      "category" : "seo, api",
      "url"      : "/seo/api/2020/11/27/hivesearcher-website-opensourced.html",
      "date"     : "2020-11-27 04:26:03 -0800",
      "desc"     : "Although structure of website is quite simple, we think opensourcing website just like hivesearcher hivemind plugin would allow more development contribution and transparency on how things work.",
      "content"  : "we have opensourced hivesearcher website earlier today and pushed some documentation improvements.![hivesearcher-decentralized-search-engine](https://images.ecency.com/p/c3tzr1g81unbfzapdtmvfymje8p1iesaacnjsh7jwyripqrx52l6rnrzipeiabkx9datxcyjyvvcko3qmc9tjfrvnzghxyuyyj6afmcrd98w27oav6nh8m4)website is written in reactjs python. although structure of quite simple, think opensourcing just like hivemind plugin would allow more development contribution transparency on how things work.if you are developer, feel free to checkout source code contribute. https://github.com/ecency/hivesearcherwebsite also include neat features which didn't announce before. can embed with iframe into your website. so any potentially integrate without api key as well. getting completely free, if willing create own search user interface then approach best. embedding option only for those who limited programming skills or has wordpress blogs where easily functionality.updated page examples information. future, plan interactive style it much easier test before integrating. document usage showcase integrated dapps.## dapp developer?[integrate hivesearcher](https://ecency.com/hive-139531/@good-karma/hivesearcher-free-integrate-it-into-your-hive-apps) app offer best search, discovery experience users.---- website: https://github.com/ecency/hivesearcher- plugin: https://github.com/ecency/hive2elastic see: by @good-karma"
    } ,
  
    
    
    
    
    
    {
      "author"    : "rishi556",
      "title"    : "How To Setup Hive Witness Pricefeed Using Hivefeed-JS",
      "category" : "howto, witness, pricefeed",
      "url"      : "/howto/witness/pricefeed/2020/11/26/how-to-setup-hive-witness-pricefeed-using-hivefeed-js.html",
      "date"     : "2020-11-26 23:01:33 -0800",
      "desc"     : "Setting up a pricefeed is quite a simple task to do yet so many witnesses don't do it. I use it as one of my basic qualifiers on who I'll vote for a witness(if yours isn't updated in 3.5 days, no chance of getting my witness vote). It's a very basic thing to do and its just a quick and easy way to see how much a witness is paying attention to their own witness.",
      "content"  : "setting up a pricefeed is quite simple task to do yet so many witnesses don't it. i use it as one of my basic qualifiers on who i'll vote for witness(if yours isn't updated in 3.5 days, no chance getting witness vote). it's very thing and its just quick easy way see how much paying attention their own witness.the hive knows about the price hive. some events require knowing price, including post payout hbd -&gt; conversions. while only top 20 witnesses's feed used(from what i've been told, please correct me if this wrong), believe important everyone running run pricefeed. we have pretty old pricefeeds our rank, 100 who've never broadcast at all 4 30 haven't over month.i personally @someguy123's hivefeed-js updating myself too. anyone privex's node box gets knowledge might be useful. codebase can found here: https://github.com/someguy123/hivefeed-js.let's get onto guide. you are using box, skip download part (the git pull). also explaining start with pm2, not docker. docker instructions clear enough readme. someguy says that he uses version restart easily every few hours case breaks, but seen break due reasons other than bad node(which has since fixed). ### set upalways an update server, especially like first time usually your server. we'll need codebase. nodejs npm.```sudo apt-get -ysudo upgrade install npm -y```we'll want onf 14 n.```sudo -g nsudo n 14```restart ssh session thats easiest latest nodejs. clone repo(if already it, step)```git https://github.com/someguy123/hivefeed-js.git```navigate directory cloned or have, named something else, change ```cd hivefeed-js```install dependencies npm.```npm i```install pm2 globally.```sudo pm2```### modifying confignow config file liking. copy example config.```cp config.example.json config.json```then open text editor. nano, by far.```nano config.json```i won't advanced config, stuff. main fields pay `name` which should username, `wif` private active key(yes there sign updates signing key, far beem, was looking into incorporating hivefeed time, i'm trying same well), `interval` often minutes. recommend somewhere between 1-6 hours. broadcasting too will slight changes little either opposite problem occur larger changes(one things add upon shift x% from last broadcast). those ones really change. think know. `node` let pick node, default being https://hived.privex.io `alternate_nodes` specify alternate nodes switch fails. https://api.hive.blog https://api.deathwing.me. string alternate_nodes array strings. worry these understand(feel free ask questions would learn more though). save config. up.### starting upstaring simple. ```pm2 app.js --name pricefeed```thanks crashes, automatically restart(though errors leading crash restart). monitor `pm2 monitor` program live logs, logs` older logs written more. stop any reason, pricefeed`.you immediately publish. publish happen after amount minutes go, setup maintain repo suggestions features you'd like, lmk ever find around do, considering voting witness, @hextech. here's handy link that: https://vote.hive.uno/@hextech see: @rishi556"
    } ,
  
    
    
    
    
    
    {
      "author"    : "quochuy",
      "title"    : "My new contributions to the Hive Condenser",
      "category" : "news, nodejs, condenser",
      "url"      : "/news/nodejs/condenser/2020/11/25/6gshbx-my-new-contributions-to-the-hive-condenser.html",
      "date"     : "2020-11-25 21:27:09 -0800",
      "desc"     : "As I was working on some bug on the witnesses page, I noticed that the API allowed me to fetch more than 100 witnesses so I went on and increased the number of witnesses from 100 to 200 which is enough to cover all of our current active witnesses.",
      "content"  : "## display more than 100 witnesses on the witness pagecurrently https://wallet.hive.blog/~witnesses only displays top100 with a text box that allows you to vote for low ranking witnesses, provided know about them. as i was working some bug page, noticed api allowed me fetch so went and increased number of from 200 which is enough cover all our current active witnesses.increasing also means we have lot disabled/retired polluting list. in order keep it clean, i've added rule filter off list if their rank greater 100.as result this, code change approved, following lower ranked will appear official page:rank 101: @mintrawarank 103: @reazuliqbalrank 105: @fernandosoderrank 106: @jamzedrank 107: @dmitrydaorank 111: @lapingvinorank 117: @lootkit.witnessrank 118: @hagierank 129: @veteranforcryptorank 130: @dpoll.witnessrank 134: @elindosrank 142: @apshamiltonrank 151: @whiterosecoffeerank 193: @pcste![screen shot 2020-11-26 at 4.10.30 pm.png](https://images.hive.blog/dqmple1qg7msspa9gcrbpmfrbd62tdrf8mw7sd6uclcmktd/screen%20shot%202020-11-26%20at%204.10.30%20pm.png)merge request: https://gitlab.syncad.com/hive/wallet/-/merge_requests/81## owners pagesome users chosen an alternate user accounts separate regular social activities activities. were created managed by one user. this now owner(s) account.![display hive owners](https://gitlab.syncad.com/hive/wallet/uploads/6371d6c52aa8b44c2bffc4152aae9fa6/screen_shot_2020-11-19_at_11.05.33_am.png)merge https://gitlab.syncad.com/hive/wallet/-/merge_requests/79## delegating power another your walletthis implemented several months ago but forgot announce although announced @blocktrades (witness) posts. can access [wallet](https://wallet.hive.blog/) delegate hp drop down menu power.![wallet power](https://images.hive.blog/dqmsaikugqrni1slaeq1nvjyhrl5xdegvkpedzcxnrfdso7/screen%20shot%202020-11-26%20at%204.11.48%20pm.png)a delegatees available wallet:![your delegatees](https://gitlab.syncad.com/hive/wallet/uploads/59615d9cac888bd41c9d22e09f2f708d/screen_shot_2020-05-23_at_9.38.21_pm.jpg)if memory serves, steemit condenser just ported hive.merge https://gitlab.syncad.com/hive/wallet/-/merge_requests/16## other small changes- hide @hivebuzz level banner are recently has not been yet. https://gitlab.syncad.com/hive/condenser/-/merge_requests/160- fix issue where `witness_description` `witness_owner` fields no longer showing settings page. https://gitlab.syncad.com/hive/condenser/-/merge_requests/158---**vote my witness**[![support @quochuy witness.jpg](https://images.hive.blog/dqmecytzemy8swu6rrg7awhpnrbsehup7ivk9rgyzsuupvw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1)on hive, playing important role providing performant safe network us. choose 30 trusty package transactions sign blocks go blockchain. [vote via hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1) support work community. see: new contributions"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive deloppers meeting #13",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/11/25/hive-deloppers-meeting-13.html",
      "date"     : "2020-11-25 06:42:48 -0800",
      "desc"     : "meeting points: Dev sync Recurrent transfers (how much recurrence, what do in case of no money, remove constantly failing recurrent transfers) Tech debt (account to account ids in various places) ...",
      "content"  : "https://www.youtube.com/watch?v=ppuc7fzwvxmmeeting points:* dev sync* recurrent transfers (how much recurrence, what do in case of no money, remove constantly failing transfers)* tech debt (account to account ids various places) * governance, term voting, rewards curve returning linear curve* communities community feedback: https://gitlab.syncad.com/hive/tasks_without_projects_yet/-/issues/26this meeting was quite focused on transfers. but we also touch lightly roadmaps, future developments and hivefest. see: hive deloppers #13 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "peakd",
      "title"    : "Hivemind API Extension, Community Curated Content and More",
      "category" : "news, hivemind, api",
      "url"      : "/news/hivemind/api/2020/11/24/hivemind-api-extension-community-curated-content-and-more.html",
      "date"     : "2020-11-24 01:21:36 -0800",
      "desc"     : "A new release with new tools, features and more improvements",
      "content"  : "a new release of [peakd.com](https://peakd.com) is now available. keep reading to discover the features and check full list improvements ;)the live at https://peakd.com![release_cover_20201124.jpg](https://files.peakd.com/file/peakd-hive/peakd/af4z4wui-release_cover_20201124.jpg)#### 1. hivemind api extensionsuntil [last hf](https://peakd.com/hiveblockchain/@hiveio/final-hive-hf24-date-set-october-6-2020) we have used our own instance power some available on [peakd.com](https://peakd.com). this was required because as favorites, lists, badges needs access specific data not standard nodes.updating database latest version definitely possible (with bit more effort us than what be before hf), but decided do change in how provide for those features. so instead updating node create plugin (or extension) that can installed servers additional apis.[![peakd-hivemind-plugin.png](https://raw.githubusercontent.com/peak-projects/peakd-hivemind-plugin/main/resources/cover.png)](https://github.com/peak-projects/peakd-hivemind-plugin)similar done with [hive beacon](https://github.com/peak-projects/peakd-node-beacon) few weeks ago an open source project github: https://github.com/peak-projects/peakd-hivemind-plugin.also having independent make it operators run decentralized way. big thank you @arcange @emrebeyler their help setting up first 2 nodes.#### 2. curated contents page communitiescommunities configure curator account will enable tab/page showcase content list.![curated https://peakd.com/c/hive-193212/trail](https://files.peakd.com/file/peakd-hive/peakd/y6szd78j-image.png)to just set name community settings:![image.png](https://files.peakd.com/file/peakd-hive/peakd/egmaentd-image.png)#### 3. show top viewed daily/weekly awards postswe started tracking views ago, are constantly trying improve this. starting experimental posts peakd.com.you see ranked 'top day' or week'.![image.png](https://files.peakd.com/file/peakd-hive/peakd/gzaefvym-image.png)#### 4. mixcloud embeds improved spotify supportwith it's embed playlists simple link: `https://www.mixcloud.com/magneticmagazine/ambient-meditations-vol-21-anane`and also support been embedded `https://open.spotify.com/playlist/5uv4uc6n0lz7q9ui3yibqn?si=sgsfw4myrga2na91e-cu1a`the result should similar this:https://open.spotify.com/playlist/5uv4uc6n0lz7q9ui3yibqn?si=sgsfw4myrga2na91e-cu1a#### 5. add rising star games section walletrising included [wallet](https://peakd.com/wallet) 'games' section.![image.png](https://files.peakd.com/file/peakd-hive/peakd/6mt6tve4-image.png)check game using https://risingstargame.com/#### 6. minor bug fixesas always improvements, updates fixes across website. notes here: **https://peakd.com/about/changelog**.```# fixes------------------------------[update] layout performance page[update] don't load comments by default user logged in[update] button publish post when blog empty[update] mark notification read all browser tabs after casting transaction[update] rework usage 'get_account_history' call better handle behavior[fix] fix 'upcoming' indicator proposals page```---## @peakd projectnow probably nice time remind ways development @peakd.![selection_298.png](https://files.peakd.com/file/peakd-hive/peakd/w36dqpo7-selection_298.png)we proposal hive fund. review [here](/proposals/52).if agree think points mentioned value blockchain consider supporting above links directly **[this link](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=[52]&amp;approve=true)**.---we witness server produce blocks blockchain. vote position process them.vote page: https://peakd.com/witnesses- keychain: click approve transaction- hivesigner: you'll need confirm transaction your active key least---###### *the peakd team*_about us: https://peakd.com/about__join discord: https://discord.gg/fy3bca5_ see: extension,"
    } ,
  
    
    
    
    
    
    {
      "author"    : "techcoderx",
      "title"    : "Hivecrypt: JavaScript module for Hive memo encrypt/decrypt on wide range of environments",
      "category" : "news, nodejs, encryption",
      "url"      : "/news/nodejs/encryption/2020/11/22/hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments.html",
      "date"     : "2020-11-22 04:22:27 -0800",
      "desc"     : "A module that you can import into a wide range of JavaScript environments to encrypt or decrypt a Hive memo.",
      "content"  : "![hivecrypt thumbnail.png](https://ipfs.io/ipfs/qmz44f49mdr746uqise11de6wxa3ojka4oecytsvto6bnb)are you getting the following error message when trying to encrypt or decrypt a hive memo in electronjs react native using [hive-js](https://gitlab.syncad.com/hive/hive-js)? perhaps looking for something that works your framework you're building cutting-edge dapp?![screenshot 20201122 at 12.04.23 pm.png](https://files.peakd.com/file/peakd-hive/techcoderx/kpahmlhh-screenshot202020-11-2220at2012.04.2320pm.png)introducing [hivecrypt](https://github.com/techcoderx/hivecrypt), module can import into wide range of javascript environments, including desktop and mobile app frameworks like electronjs, wouldn't otherwise work with existing libraries.adapted from this [pull request](https://peakd.com/hive-139531/@tngflx/contribution-to-dhive-added-memo-encryption-and-decrypt-feature) on [dhive](https://gitlab.syncad.com/hive/dhive) was never merged `master` (plus major help [file](https://github.com/mahdiyari/hive-tx-js/blob/master/helpers/crypto.js)), hivecrypt built [crypto-js](https://github.com/brix/crypto-js) virtually any latest unlike implementation [hive-js](https://gitlab.syncad.com/hive/hive-js) pull request mentioned above, uses [crypto](https://nodejs.org/api/crypto.html) nodejs only certain environments.## how use?hivecrypt be installed `npm` command:```npm i hivecrypt```it also imported browser by script tag html file, where will available through `window.hivecrypt`:``````once installed, it may used encrypting decrypting memos just is done [hive-js](https://gitlab.syncad.com/hive/hive-js), but more environments.```const = require('hivecrypt') // commonjslet encrypted hivecrypt.encode('privatekey1','publickey2','#somesecretmessage')let decrypted hivecrypt.decode('privatekey2',encrypted)console.log(encrypted,decrypted)```it might not optimizing smallest package size mind, least usable devs.[![hive witness footer 2.png](https://ipfs.io/ipfs/qmvtnreuwzvlty5sucfunq2m9jplwroyrxrcztpvszq3sg)](https://hivesigner.com/sign/account-witness-vote?witness=techcoderx&amp;approve=1)**update**: upon further testing apparently fully cross-compatible `hive-js`, why pr got `master`. would still useful my upcoming oneloveipfs v2 upgrade. see: hivecrypt: encrypt/decrypt environments @techcoderx"
    } ,
  
    
    
    
    
    
    {
      "author"    : "arcange",
      "title"    : "Introducing Hive libraries for Microsoft .NET",
      "category" : "news, dotnet",
      "url"      : "/news/dotnet/2020/11/19/msnet-libraries.html",
      "date"     : "2020-11-19 11:31:42 -0800",
      "desc"     : "Today I want to introduce you to a new Microsoft .NET library for Hive developers.",
      "content"  : "![](https://i.imgur.com/ubdjiit.png)today i want to introduce you a new microsoft .net library for hive developers.### why library?while languages like python or javascript have become very popular web development, there are also developers out who unfamiliar with them. some oriented towards vb.net c # may be frustrated at having move away from their preferred programming language and tools visual studio.that's i've created easy-to-use classes, exposing almost all the apis of hived cli_wallet, allowing play any api node.the class is available both c# languages.i provide com (aka .dll) so will able use it directly in your favorite com-enabled windows application word excel, ... even if don't studio develop compile applications.### code examplethe really easy use. here simple example that read information an account stream last 100 blocks blockchain:```dim ohc as httpclient = httpclient()using ohive chived(ohc,https://api.hive.blog) debug.print(ohive.get_config.tostring) debug.print(ohive.get_account_count.tostring) ohive.get_account(arcange) debug.print(oaccount.tostring) dim oblock jobject otrans llastblockid long ohive.get_dynamic_global_properties().item(last_irreversible_block_num) lblockid - ohive.get_block(lblockid) not oblock.item(transactions) nothing then debug.print(string.format(block {0} {1} contains {2} transactions, oblock.item(block_num), oblock.item(timestamp).toobject(of datetime), oblock.item(transactions).count)) end nextend using```here another showing how one interacts its wallet:```dim owallet hiveapi.chivewallet(ohc,http://my.wallet.node) owallet.is_locked owallet.unlock(mysuperwalletpassword) owallet.list_my_accounts.count 0 owallet.import_key(my_private_post_key) each oaccount owallet.list_my_accounts debug.print(oaccount.item(name)) next ' lets vote on post owallet.vote(arcange, hiveio, announcing-the-launch-of-hive-blockchain) owallet.lock()end using ```### open sourcethe libraries source can found [gitlab](https://gitlab.syncad.com/hive/hive-net).if comments requests, please create issue gitlab too. contact me [discord](https://discordapp.com/channels/@me/237480770933882881) [telegram](https://t.me/the_arcange)---### check my apps services### [vote witness ![](https://i.imgur.com/2bi4snt.png)](https://hivesigner.com/sign/account-witness-vote?witness=arcange&amp;approve=1)&lt;/div&gt; see: introducing by @arcange"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "Update on BlockTrades Hive Work (Nov 16th)",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/11/16/update-on-blocktrades-hive-work-nov-16th.html",
      "date"     : "2020-11-16 14:31:33 -0800",
      "desc"     : "Last week we continued work on post HF24 optimizations. Below is a summary of the work done last week and our plans for the upcoming week.",
      "content"  : "last week we continued work on post hf24 optimizations. below is a summary of the done and our plans for upcoming week.# hived (blockchain node software)we completed changes to get_block_api plugin speedup performance get_block api call. old implementation used an overly pessimistic mutex locking scheme that severely degraded potential under loading. we’ve also added new call fetch consecutive set blocks in one disk read operation.https://gitlab.syncad.com/hive/hive/-/merge_requests/149unfortunately, due delays related several hash computations (including associated with getting signee key block) conversion binary block data fc::variants later json, these calls are still too slow needs hivemind initial sync. overcome this problem, we’re now creating can directly write needed into hivemind’s database during hive reindexing normal reception. most being provided by no interest hivemind, so using get was unnecessarily wasting cpu, addition slowing down hivemind. i expect approach will lead significant sync time (my guess 2x at least) it should reduce live-sync time.## statuswe’ve tagged version v1.24.7 which contains `get_block_range(starting_block_num, count)` as well fix make legacy get_account_history use 0-based operation index like get_account_history_rocksdb does.v1.24.7 recommended upgrade operators, but doesn’t contain witness nodes or exchanges. require reindex from previous v1.24.6, strictly api-related changes.# (2nd layer microservice social media applications)most devs working week. some merge requests incorporated develop branch repo:performance optimizations:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/365https://gitlab.syncad.com/hive/hivemind/-/merge_requests/366https://gitlab.syncad.com/hive/hivemind/-/merge_requests/373https://gitlab.syncad.com/hive/hivemind/-/merge_requests/367various bug fixes:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/354https://gitlab.syncad.com/hive/hivemind/-/merge_requests/362https://gitlab.syncad.com/hive/hivemind/-/merge_requests/371https://gitlab.syncad.com/hive/hivemind/-/merge_requests/364https://gitlab.syncad.com/hive/hivemind/-/merge_requests/337https://gitlab.syncad.com/hive/hivemind/-/merge_requests/370https://gitlab.syncad.com/hive/hivemind/-/merge_requests/382new tests:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/351test system improvement:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/376https://gitlab.syncad.com/hive/hivemind/-/merge_requests/374https://gitlab.syncad.com/hive/hivemind/-/merge_requests/375# condenser + wallet (open-source code **hive.blog**)the editing comments fixed:https://gitlab.syncad.com/hive/condenser/-/merge_requests/151fix proposals page where non-burn were displayed burn proposals:https://gitlab.syncad.com/hive/wallet/-/merge_requests/75we’re testing fixing bugs ui decentralized lists:https://gitlab.syncad.com/hive/condenser/-/merge_requests/155https://gitlab.syncad.com/hive/condenser/-/merge_requests/156# nearing completion airdrop proposal re-paymenti’ve refunded overage hbd→hive conversions hive.fund account (when converted hbd hive, there slight unpredictable amount yield). once completes, compute refund back well.# what’s plan next week?* finish muting changes. partially additional change allow operator specify “default observer” when user isn’t logged in. allows web site their own list spammers be muted (for example, protect seo results) function prior user’s login. @hive.blog default observer hive.blog site.* enable reputation calculation code.* continue tests.* prioritizing full via has big impact speed ci (which sets upper limit how fast validate changes).* hoping out comprehensive planned hf25 2nd improvements soon (although dumping postgresql major improvements: it’s just fast-tracked because impacts current lot). see: update blocktrades (nov 16th) @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "arcange",
      "title"    : "HiveSQL is free again - Thank you for your support!",
      "category" : "news, sql, database",
      "url"      : "/news/sql/database/2020/11/12/hivesql-free.html",
      "date"     : "2020-11-12 08:30:00 -0800",
      "desc"     : "Today, thanks to your amazing support, I'm glad to announce that HiveSQL is free again! Thank you to all its supporters!",
      "content"  : "![](https://i.imgur.com/h4ez40w.png)a few days ago, i introduced a [proposal](https://peakd.com/me/proposals/138) to make hivesql free use again. the aim of proposal is enable as many developers and users possible benefit from this valuable tool develop applications services for our ecosystem.today, thanks your amazing support, i'm happy announce that again!this means anyone with registered account will now have access all blockchain data be able issue sql queries free.## how register account?for obvious security reasons, before being database, you create account. activation process very simple:1. transfer **0.01 hbd** @hivesql (no memo required)2. soon receives transfer, processed3. seconds later, receive micro-transfer back @hivesql.![](https://i.imgur.com/9yqydul.png)the contains new credentials therefore encrypted.there are two easy ways see its content;1. if **peakd.com**, click on small green lock ![](https://i.imgur.com/uugvmth.png)2. **keychain** installed, open it history button![](https://i.imgur.com/7oere4l.png)![](https://i.imgur.com/jqtqggl.png)the following information:* hostname connect server.* personal login* password## what's nextnow funded, finally tackle improvement projects wanted implement. there lot work ahead, among them hivesql.io website update creation decent documentation tutorials.i would also like partially review design database further improve performance. want add tables can useful avoid redundant queries.i lots other ideas, but one thing at time... let's first consolidate basics.## supportif any questions, remarks or suggestions, support provided [hivesql discord channel](https://discord.gg/kyefdft) only.**support proposal**things keep moving in life, so additional still welcome.* [vote peakd.com](https://peakd.com/me/proposals/138)* hive.blog](https://wallet.hive.blog/proposals/138)* using hivesigner](https://hivesigner.com/sign/update_proposal_votes?proposal_ids=%5b%22138%22%5d&amp;approve=true)thank who supported made again!---### check out my apps services### me witness ![](https://i.imgur.com/2bi4snt.png)](https://hivesigner.com/sign/account-witness-vote?witness=arcange&amp;approve=1)&lt;/div&gt; see: again - thank support! by @arcange"
    } ,
  
    
    
    
    
    
    {
      "author"    : "inertia",
      "title"    : "Radiator v0.4.8 - Hive Ruby API Client: Eclipse Update",
      "category" : "news, ruby, eclipse",
      "url"      : "/news/ruby/eclipse/2020/11/09/radiator-v0-4-8-hive-ruby-api-client-eclipse-update.html",
      "date"     : "2020-11-09 11:32:33 -0800",
      "desc"     : "Repository: https://github....",
      "content"  : "repository: https://github.com/inertia186/radiatorin addition to bug fixes and general identifier name changes for hive assets, this version of radiator now incorporates `hive-ruby` as the primary basis interacting with blockchain.so why use at all when you can just gem directly? well, that's because do failover well access engine api.not only that, also still work steem (and engine), if you're into that sort thing.to update your applications:```bashbundle update```#### in v0.4.8* eclipse update* wrapping [`hive-ruby`](https://gitlab.syncad.com/hive/hive-ruby) [`steem-ruby`](https://github.com/steemit/steem-ruby)#### v0.4.7* added `attr_reader` `radiator::type::amount` [#28](https://github.com/inertia186/radiator/issues/28)* restful fallback `get_transaction` during `recover_transactions_on_error`* fix beneficiary serialization (thanks @eonwarped)#### v0.4.6* health check persist option#### previous changes- [radiator v0.4.5 - support](https://hive.blog/utopian-io/@inertia/radiator-v0-4-5-steem-ruby-api-client-steem-engine-support)- v0.4.0 appbase update](https://hive.blog/radiator/@inertia/radiator-v0-4-0-steem-ruby-api-client-appbase-update)- v0.3.0 support](https://hive.blog/radiator/@inertia/radiator-v0-3-0-steem-ruby-api-client-update-now-with-failover-support)#### githubhttps://github.com/inertia186 see: v0.4.8 ruby api client: by @inertia"
    } ,
  
    
    
    
    
    
    {
      "author"    : "quochuy",
      "title"    : "My new contributions to the Hive Condenser",
      "category" : "news, nodejs, condenser",
      "url"      : "/news/nodejs/condenser/2020/11/09/29vxd3-my-new-contributions-to-the-hive-condenser.html",
      "date"     : "2020-11-09 02:30:06 -0800",
      "desc"     : "## Updates to the Badges an...",
      "content"  : "## updates to the badges and achievementsthe recent addition of peakd hivebuzz social achievement stirred some controversy, people loved it, hated it requested for its removal or at least a way opt-out.i initially thought refactoring look feel bar on user profile header add new preferences but after discussing with other members dev team we agreed implementing @guiltyparties' suggestion: - rename communities tab as was pretty empty. move from into tab.merge request gitlab:https://gitlab.syncad.com/hive/condenser/-/merge_requests/148![badges achievements in tab](https://gitlab.syncad.com/hive/condenser/uploads/ced62e0623456f39a1247e76d79ed0e1/screen_shot_2020-11-06_at_11.10.51_pm.png)## bandcamp archive.org embedded playersi think i forgot mention previous update that there is pending merge players archive.org.bandcamp player:![bandcamp player](https://gitlab.syncad.com/hive/condenser/uploads/1e835b654231f31706e89a638e703442/screen_shot_2020-10-28_at_9.38.59_pm.png)archive.org player:![archive.org player](https://gitlab.syncad.com/hive/condenser/uploads/3c2b233d98a50c52b6be6877d8413a08/screen_shot_2020-10-28_at_9.40.03_pm.png)merge gitlab: https://gitlab.syncad.com/hive/condenser/-/merge_requests/137## notes- both features are still review, tests deployment team.- now, decided slow down since have covered main ones already would like focus more important bug fixes.---**vote my witness**[![support @quochuy witness.jpg](https://images.hive.blog/dqmecytzemy8swu6rrg7awhpnrbsehup7ivk9rgyzsuupvw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1)on hive, witnesses playing role providing performant safe network all us. you power choose 30 trusty package transactions sign blocks will go hive blockchain. [vote me via hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1) support work community. see: contributions condenser by"
    } ,
  
    
    
    
    
    
    {
      "author"    : "keychain",
      "title"    : "Hive Keychain Development Proposal #2",
      "category" : "news, nodejs, hive-keychain",
      "url"      : "/news/nodejs/hive-keychain/2020/11/08/hive-keychain-development-proposal-2.html",
      "date"     : "2020-11-08 23:10:54 -0800",
      "desc"     : "Renewal of Keychain Proposal - Including summary of what has been done so far and our future plans",
      "content"  : "![](https://files.peakd.com/file/peakd-hive/keychain/xnmvxgi6-social_keychain-for-hive.jpg)a lot has happened on hive these past 6 months and i you followed the @keychain account weekly posts, know that we've never stop building features, our extension (now available for chrome, firefox, opera brave) mobile app (built android ios).the current proposal is coming to an end soon but there's still so much we want do help ecosystem thrive, hence this new proposal.## keychain dhf 2this will start november 15th, date at which one expire, there be no overlap between two proposals.just as proposal, mainly focus different axis : - maintain improve existing browser extension- continue developing appthe upcoming work regarding projects discussed paragraphs below.### extensiona been done side. can check updates see complete list of here are some noticeable changes:- improved onboarding through a `requestaddaccount` let import keys from external request- buy hive/hbd options- update keychainify dapp owners integrate more features via hivesigner link- documentation automating it using `documentation.js`- nodes management, failover, keeping rpc up date- hbd conversion (with automatic id)- requests usable by dapps such `requestsendtoken` changes with ones (`requestencodememo` now works posting active keys)- protection against phishing/blacklisted accounts during transfers, sending transfers exchanges without memos- updated apis v2 (i.e. detailed token price info)- rewards claiming- free claiming code after eclipse hf- export qr code- several ui adjustments- refactoring- brave support users developers supporttowards one, switching spend time side since pretty mature. being said, go further letting create directly services- no-key extension. make possible use any key if unsafe computer. implemented when mature enough allow link phone send phone, they confirmed- include settings files, really seamless device .kc file- ledger integration application approved ledger- he tokens operations (only supported far)- information about proposals- reorganization settings- preparation ahead introduced maintaining across all browsers future hfs- / devs support### mobilethere ton provide great would whole thrive. such, shifted project.the first part wallet its currently undergoing tests before alpha release month. what far: secure storage biometrics `react-native-keychain` package private or master (not saved)- (from extension)- balances- value- voting power rc indicators- transaction history- up, down, delegations- incoming outgoing delegations information- engine balances, value transactions balance only (so far) managementhere screenshots hope excited what's come https://images.hive.blog/1000x500/https://files.peakd.com/file/peakd-hive/keychain/itl1y13a-screenshot_20201109-143355_mobilekeychain.jpg https://images.hive.blog/1000x500/https://files.peakd.com/file/peakd-hive/keychain/riiby7sf-screenshot_20201109-143407_mobilekeychain.jpg https://images.hive.blog/1000x500/https://files.peakd.com/file/peakd-hive/keychain/qmsqld5k-124146064_785358812010920_2770059880192079036_n.jpg https://images.hive.blog/1000x500/https://files.peakd.com/file/peakd-hive/keychain/2gfrzmex-screenshot_20201109-132058_mobilekeychain.jpg https://images.hive.blog/1000x500/https://files.peakd.com/file/peakd-hive/keychain/sgwrqqx3-screenshot_20201109-132112_mobilekeychain.jpg https://images.hive.blog/1000x500/https://files.peakd.com/file/peakd-hive/keychain/stwbnmox-screenshot_20201109-143223_mobilekeychain.jpg https://images.hive.blog/1000x500/https://files.peakd.com/file/peakd-hive/keychain/eqdrmwdu-screenshot_20201109-143305_mobilekeychain.jpg https://images.hive.blog/1000x500/https://files.peakd.com/file/peakd-hive/keychain/bvx0aedn-screenshot_20201109-143008_mobilekeychain.jpg https://images.hive.blog/1000x500/https://files.peakd.com/file/peakd-hive/keychain/6ydecikm-screenshot_20201109-143315_mobilekeychain.jpg plan iterate according issues received users. expecting main challenge authentication, device-dependent os-dependent matter. user reports us sure it's working correctly independently devices.- add conversion, buying hive/hbd, witness votes, proposals)- in-app bridging your favorite securely stored in keychain. implemented.- launch open beta- communication, allowing other apps request ever seeing keys.### budgetas previous keep daily budget 200 period months.### commitments- commit produced funding opensource. find [hive keychain](https://github.com/stoodkev/hive-keychain) [keychain mobile](https://github.com/stoodkev/hive-keychain-mobile) their respective github repositories.- post progress made week. have held promise along enjoyed following development updates.## team@stoodkev lead developer witness@nateaguila ui/ux@yabapmatt founder witness@aggroed witness---### [peakd](https://peakd.com/me/proposals/140), [hivesigner](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b140%5d&amp;approve=true).*100% payout redirected dhf* see: #2 @keychainmore node.js"
    } ,
  
    
    
    
    
    
    {
      "author"    : "rishi556",
      "title"    : "How To Set Up A Hive Witness Using HIAB At Version 1.24.4",
      "category" : "howto, witness, docker, node",
      "url"      : "/howto/witness/docker/node/2020/11/08/how-to-set-up-a-hive-witness-using-hiab-at-version-1-24-4.html",
      "date"     : "2020-11-08 07:11:18 -0800",
      "desc"     : "Because @someguy123 hasn't written a post about using HIAB I decided to do it, mainly because I use it and always end up referring to discord chats on how to set it up.",
      "content"  : "used with permission from @someguy123because @someguy123 hasn't written a post about using hiab i decided to do it, mainly because use it and always end up referring discord chats on how set up. much easier just have all in one place, what better place than the chain itself? im going over basic setup snapshots but theres even more functionality(you can replay server instead of snapshot, or sync without blocks_log file) which you read here: https://github.com/someguy123/hive-docker. ### serverfirst thing that you'll need is for this. thanks efforts hf 24, its become quite bit run would recommend privex this pay hive hbd, we lot witnesses already important our be distributed between different datacenter providers, find your own.i my witness(@hextech) 16 gigs ram 4 threads witness along 400 gb(320 gb being right now) nvme ubuntu 20. higher usage required during snapshot import process(reaching 15.3 used). setting hiabi like update as first well install git screen.```sudo apt-get -ysudo upgrade screen -y```then clone repo.```git https://github.com/someguy123/hive-docker.git```and then docker you. shouldn't take too long.```cd hive-docker./run.sh install_docker```we latest image with. will grab whatever dockerhub(https://hub.docker.com/r/someguy123/hive/tags).```./run.sh install```the next step download block_log(somewhere around 300 files. are so don't remain connected while goes on. ```screen -s downloadexport bc_http_raw=http://files.privex.io/hive/block_log export rsync_base=rsync://files.privex.io/hive./run.sh fix_blocks```you'll presented downloading rest blocks_log, want say yes (y). while, depending connection speed. best wait. ![screen shot 20201107 at 5.17.16 pm.png](https://files.peakd.com/file/peakd-hive/rishi556/nbjd9c5c-screen20shot202020-11-0720at205.17.1620pm.png)after asked if block_log.index well. get again yes.finally shared_memory.bin, no(n). those downloading, move onto few steps, i'll let know where files cli wallet keysnow generate signing keys. reuse some keys use, it's recommended new ones blocks. that, cli_wallet. we'll remote local instance isn't ready yet.```./run.sh remote_wallet```you should something fresh install. says `locked` `new` setup(you won't unless updating) unlock skip init step.![screen 5.25.29 pm.png](https://files.peakd.com/file/peakd-hive/rishi556/ess2pi5w-screen20shot202020-11-0720at205.25.2920pm.png)you type `set_password ` password. example, wanted password 123, i'd 123` remember future. after that. thats simple `unlock 123`. replace 123 set. once unlocked `suggest_brain_key` public private keypair generated. save 5.29.09 pm.png](https://files.peakd.com/file/peakd-hive/rishi556/znrdztke-screen20shot202020-11-0720at205.29.0920pm.png)you exit by pressing control + d. ever forget password, wipe clean `wallet.json` file generated stored within `data` directory. delete it'll start again.### config modify work witness. located `data/witness_node_data_dir/config.ini` ```nano data/witness_node_data_dir/config.ini```most values there good. anything go ahead doing. `witness = `private-key `. they commented out(line begins `#`) them # line. witness, username account running under. value must quotes. key wallet. not quotation marks. below an example.![screen 5.42.17 pm.png](https://files.peakd.com/file/peakd-hive/rishi556/x9sitamf-screen20shot202020-11-0720at205.42.1720pm.png)### starting upgoing on, started downloaded earlier go. not, please finish continue. wait download, good things write staring voting @hextech thinking help benefit ecosystem. load snap got replay. ```./run.sh load_snap privexsnap ```this does time, nowhere near long had monitor process `./run.sh logs`.once loads in, automatically syncing live. check progress monitor`. tell synced time live when see individual blocks produced logs`. that'll look this:![screen 6.58.25 pm.png](https://files.peakd.com/file/peakd-hive/rishi556/dmpgrir9-screen20shot202020-11-0720at206.58.2520pm.png)the block numbers one. nows big enable witness.### enabling witnesslet's either wallet, wallet` remote_wallet`.```./run.sh wallet```unlock before active sign transaction broadcasting. active_key preferred choice. 5knrhhigj3prurkm5moav1xm3gwgrdzjjzcgprl2fpbljwy1obg you'd typing `import_key 5knrhhigj3prurkm5moav1xm3gwgrdzjjzcgprl2fpbljwy1obg`now broadcast following command match into name https://example.com part url stm1111111111111111111111111111111114t1anm parameters, liking, these current standard wise follow along. ```update_witness {account_creation_fee:3.000 hive,maximum_block_size:65536,hbd_interest_rate:0} true```after gets broadcast, enabled somewhere https://peakd.com/me/witnesses. green ball means enabled. version report until worry 0.0.0. word out votes. 7.09.34 pm.png](https://files.peakd.com/file/peakd-hive/rishi556/kaxmx4yp-screen20shot202020-11-0720at207.09.3420pm.png)i was took me 2 hours 15 minutes point could transaction. updates someguy make exist has made future &amp; questionsyou'll pricefeed failover script pricefeed, someguy's hivefeed-js (can found here https://github.com/someguy123/hivefeed-js) script(watcher therealwolf works https://github.com/therealwolf42/hive-witness-essentials/tree/master/essentials/watcher) update. might involve not. hard forks soft usually don't. information ask questions http://discord.privex.io/. requirements increase do, feel free vote https://vote.hive.uno/@hextech see: 1.24.4 @rishi556"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "Update for beem: improved account history handling",
      "category" : "news, python, account-history",
      "url"      : "/news/python/account-history/2020/11/06/update-for-beem-improved-account-history-handling.html",
      "date"     : "2020-11-06 15:29:39 -0800",
      "desc"     : "",
      "content"  : "## repositoryhttps://github.com/holgern/beem![beem-logo](https://cdn.steemitimages.com/dqmcrrwlpsywsymierfp6um6mejemngjn9rxw7audjqtdgb/beem-logo)[beem](https://github.com/holgern/beem) is a python library and command line tool for hive. the current version 0.24.18.there also discord channel beem: https://discord.gg/4hm592vthe newest beem can be installed by:```pip install -u beem```check that you are using hive nodes. following ```beempy updatenodes --hive```updates nodelist uses only after setting as default_chain, `beempy updatenodes` used.the list of nodes checked with```beempy config```and```beempy currentnode```shows currently connected node.## changelog 0.24.18* adapt account history on api changes fixes issue #267* speed up call, when limit below 1000* improve unit tests history* fix estimate_virtual_op_num, get_account_history returns an empty entry index* implement _get_operation_filter use filter operations in history_reverse https://api.hive.blog node## 0.24.17* fixed bug skip_account_check=true* refactor code account* add more tests## 0.24.16* bytes representation amount which prevents sending certain amounts (e.g. 8.19 hive)* added to check if 8.190 correctly working## fixing rounding errors transfersin 0.24.16, was this leads wrong signature, then broadcasting transfer op. now fixed.## improved error handling historythe functions have better handling.the returned index checked, elements were twice output.## new filtered historycurrently parameter implemented at node.on node, call has two parameters: operation_filter_low operation_filter_high.these parameters bitmask all possible operation names.they obtained with `_get_operation_filter` function:```operation_filter_low, operation_filter_high = account._get_operation_filter(only_ops=[transfer, vote])```which results operation_filter_low=5 operation_filter_high=0.the `history` `history_reverse` function from will operation_filter set node. speeds receiving data 100 %.### reverse operation_filter```from beem.account import accountfrom hiveimport timehive hive(https://api.hive.blog)acc account(holger80, blockchain_instance=hive)start_time time.time()n_op acc.virtual_op_count()transfer_ops list(acc.history_reverse(only_ops=[transfer]))print(time needed search transfers %d elements: %.2f s % (n_op, (time.time() - start_time)))print(%d op been found (len(transfer_ops)))```returns```time 283514 145.66 s4666 found```### list(acc.history(only_ops=[transfer]))print(time 283517 144.55 without filternow we do same filtering:```from []for acc.history(): op[type] == transfer: transfer_ops.append(op)print(time 283518 261.63 found```___*if like what i do, consider casting vote me witness [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) or [peakd](https://peakd.com/witnesses)* see: update by @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "inertia",
      "title"    : "Tin Toy Update - Eclipse HF",
      "category" : "tools, docker, testnet",
      "url"      : "/tools/docker/testnet/2020/11/04/tin-toy-update-eclipse-hf.html",
      "date"     : "2020-11-04 21:11:24 -0800",
      "desc"     : "Using one command, you can ...",
      "content"  : "using one command, you can deploy tin toy and play around with a tiny version of the hive blockchain:```bashdocker run -d -p 8091:8091 inertia/tintoy:latest```this is handy for developers who want to test their applications without having use mainnet. it's also nice because don't need rely on anyone public testnet. it only takes few minutes get up running.once have your testnet running, check exactly which you're using:```bashcurl -s --data '{ jsonrpc:2.0, method:database_api.get_version, params:{}, id:1}' http://localhost:8091 | jq```this will return something like:```json{ jsonrpc: 2.0, result: { blockchain_version: 1.25.0, hive_revision: 21ca61a2253a01aeca5debdcdb202ff89feae27c, fc_revision: chain_id: 18dcf0a285365fc58b71f18b3d3fec954aa0c141c44e4e5cb4cf777b9eab274e }, id: 1}```also see: [related gist](https://gist.github.com/inertia186/b88e7bfff8862858e54c59392e2bce20)---to do this *without* docker, see:https://developers.hive.io/tutorials-recipes/setting-up-a-testnet.htmli originally announced couple years ago:https://hive.blog/@inertia/tin-toythere are some extra things if doing blockchain development or build from local branch `hived` (though slightly dated article):https://hive.blog/@inertia/how-to-do-iterative-steemd-development-on-a-local-testnet update - eclipse hf by @inertia"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "BlockTrades update on Hive development work",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/11/02/blocktrades-update-on-hive-development-work.html",
      "date"     : "2020-11-02 16:20:21 -0800",
      "desc"     : "Last week we continued work...",
      "content"  : "last week we continued work on post-hf24 optimizations. below is a summary of the done and our plans for upcoming week.# hived (blockchain node software)we added reporting some virtual ops related to hive fund better accounting by block explorer (done in conjunction with @howo):https://gitlab.syncad.com/hive/hive/-/merge_requests/144https://gitlab.syncad.com/hive/hive/-/merge_requests/135we made fixes filtering get_account_history functionality fix legacy plugin (it used 1-based indexing operation history instead 0-based like get_account_history_rocksdb plugin, now they both use indexing):https://gitlab.syncad.com/hive/hive/-/merge_requests/145https://gitlab.syncad.com/hive/hive/-/merge_requests/146https://gitlab.syncad.com/hive/hive/-/merge_requests/148fixes api tests:https://gitlab.syncad.com/hive/hive/-/merge_requests/141miscellaneous:https://gitlab.syncad.com/hive/hive/-/merge_requests/147 (set reported version 1.24.6)we’re currently working major optimization get_block_api that should likely provide big boost performance get_block call (this will enable us speed up hivemind “full sync” process as well). old implementation an overly pessimistic mutex locking scheme severely degraded potential under loading.## statuswe completed all tests changes previous this there are no known outstanding issues (other than longstanding issue servicing requests during startup node).we plan tag v1.24.7 soon complete optimizations plugin. be recommended upgrade operators, but it doesn’t contain needed witness nodes or exchanges.# hivemindwe numerous bug past week:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/332https://gitlab.syncad.com/hive/hivemind/-/merge_requests/333https://gitlab.syncad.com/hive/hivemind/-/merge_requests/330https://gitlab.syncad.com/hive/hivemind/-/merge_requests/334https://gitlab.syncad.com/hive/hivemind/-/merge_requests/228https://gitlab.syncad.com/hive/hivemind/-/merge_requests/335https://gitlab.syncad.com/hive/hivemind/-/merge_requests/211https://gitlab.syncad.com/hive/hivemind/-/merge_requests/338https://gitlab.syncad.com/hive/hivemind/-/merge_requests/341https://gitlab.syncad.com/hive/hivemind/-/merge_requests/342https://gitlab.syncad.com/hive/hivemind/-/merge_requests/343https://gitlab.syncad.com/hive/hivemind/-/merge_requests/344https://gitlab.syncad.com/hive/hivemind/-/merge_requests/345one more visible comment counts correctly posts.due rapid pace which being hivemind, also started upgrading automated build-and-test (ci) system support building multiple gitlab runners so devs could get faster feedback make. primary challenge was setup one configured performing sync allow troubleshooting case test fails). reasons, hivemind’s ci only 5 millionth block, we’re adding option do testing full well (via manual trigger, much time-consuming).https://gitlab.syncad.com/hive/hivemind/-/merge_requests/327https://gitlab.syncad.com/hive/hivemind/-/merge_requests/340we introduced mock data providers operations didn’t occur block:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/336## status (2nd layer social media microservice)we deployed above production node, api.hive.blog, they’re well. still have few make (mostly importantly, further speedups unread_notifications averages around 1.5 seconds right now).we created dump database several other operators update their begin serving latest code.# condenser + wallet (open-source code **hive.blog**)the most change blocktrades tomorrow. vote information post 9 after user does upvote downovte post:https://gitlab.syncad.com/hive/condenser/-/merge_requests/136# what’s next week?we’ll finishing hivemind. addition speeding calls both, going look at time (currently takes 4 days). we’ll continue filling out cases suites projects.i’d hope analysis future features (both hardfork 25 2nd apps support), consumed current system. did little headway developers meeting had earlier today, though. i’ll later improvements community considering hf25 (all ones been previously discussed many times met general approval). nice things about architecture moving towards can add capabilities without requiring so. need when governance improvements, course, features, these released become ready, having coordinate release exchanges. see: development @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive developer meeting #12",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/11/02/hive-developer-meeting-12.html",
      "date"     : "2020-11-02 14:31:57 -0800",
      "desc"     : "Subjects touched upon: Dev sync hivemind status Documentation Hard fork 25 direction Initial smart contract thoughts meeting ...",
      "content"  : "https://www.youtube.com/watch?v=w5jnzvp67vo subjects touched upon: * dev sync* hivemind status* documentation* hard fork 25 direction* initial smart contract thoughtsmeeting tl;dr: the beginning is a lot of tech talk from @blocktrades and i. we mostly about what we've been up to. regarding documentation, i'll make post to outline my vision for it potential structure it.regarding hivemind, i know @imwatsi was interested in contributing, touch upon that bit, basically needs more tests. so this great way get involved. its direction agreed should still be small (code wise) changes like governance / economy rc delegations.and then dwell on how he envisions contracts as layer 2 engine running hive would affect smts see: developer meeting #12 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "peakd",
      "title"    : "Announcing the Hive Node Beacon project",
      "category" : "news, devops, api",
      "url"      : "/news/devops/api/2020/10/30/announcing-the-hive-node-beacon-project.html",
      "date"     : "2020-10-30 14:48:03 -0700",
      "desc"     : "Releasing Hive Node Beacon, main features and future plans.",
      "content"  : "today we are happy to announce a new tool created improve the experience of peakd (and hive) users.check it out on https://beacon.peakd.com![beacon_cover_v1.jpg](https://files.peakd.com/file/peakd-hive/peakd/9rkdln5s-beacon_cover_v1.jpg)this is already integrated into itself and allow users automatically switch api node best one available.also this first project released as [open source](https://github.com/peak-projects/peakd-node-beacon) so others can benefit from work do peakd.we planning release more tools libraries open source in near future, hopefully only post list :)#### current status for nodesyou check website itself, but sharing here quick look![image.png](https://files.peakd.com/file/peakd-hive/peakd/xi1xpui8-image.png)as you see there no nodes at moment fully working. please keep mind that working perfectly fine chain level, just social part powered by hivemind still have some things be fixed after last hf. #### checksto understand how above scores computed tests performed each (clicking magnifying glass).![image.png](https://files.peakd.com/file/peakd-hive/peakd/1roii1j0-image.png)to get better understanding hover with mouse (?) icon.![image.png](https://files.peakd.com/file/peakd-hive/peakd/r5nkk1hz-image.png)#### future plans improvementsthe up running free use right now, ideas make integrate [peakd.com](https://peakd.com) itself:- [node benchmark](https://peakd.com/me/tools/benchmark) page- perform speed test beacon itself- [status](https://status.peakd.com) select multiple their settings specified order preference.---## support @peakd projectnow probably nice time remind ways development @peakd.![selection_298.png](https://files.peakd.com/file/peakd-hive/peakd/w36dqpo7-selection_298.png)we proposal decentralized hive fund. review [here](/proposals/52).if agree think points mentioned add value blockchain consider supporting using links or directly **[this link](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=[52]&amp;approve=true)**.--- also run witness server help produce blocks blockchain. vote our position process them.vote page: https://peakd.com/witnesses- keychain: click approve transaction- hivesigner: you'll need access confirm transaction your active key least---###### *the team*_about us: https://peakd.com/about__join us discord: https://discord.gg/fy3bca5_ see: announcing"
    } ,
  
    
    
    
    
    
    {
      "author"    : "quochuy",
      "title"    : "My new contributions to the Hive Condenser",
      "category" : "news, nodejs, condenser",
      "url"      : "/news/nodejs/condenser/2020/10/27/6h8fgn-my-new-contributions-to-the-hive-condenser.html",
      "date"     : "2020-10-27 04:16:06 -0700",
      "desc"     : "## Recent contributions sin...",
      "content"  : "## recent contributions since last update### added support for spotify podcast showshttps://gitlab.syncad.com/hive/condenser/-/merge_requests/132https://open.spotify.com/show/6c1q7itjkvzvosodc9m1rm### episodeshttps://gitlab.syncad.com/hive/condenser/-/merge_requests/132https://open.spotify.com/episode/523cypcmcxdv8ubme5yzz7?si=l2uwhvjere21n86grg3zeg### fix invalid iframe html tag crashing the page + youtube player not loadinghttps://gitlab.syncad.com/hive/condenser/-/merge_requests/133https://gitlab.syncad.com/hive/condenser/-/merge_requests/134 (thank you @mahdiyari tests and contributions)## payout beneficiariesi've as beneficiary on this post helping me with issue.---**vote my witness**[![support @quochuy witness.jpg](https://images.hive.blog/dqmecytzemy8swu6rrg7awhpnrbsehup7ivk9rgyzsuupvw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1)on hive, witnesses are playing important role of providing a performant safe network all us. have power to choose 30 trusty package transactions sign blocks that will go in hive blockchain. [vote via hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1) work community. see: new condenser by"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "Update on BlockTrades Hive core coding",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/10/26/update-on-blocktrades-hive-core-coding.html",
      "date"     : "2020-10-26 14:24:48 -0700",
      "desc"     : "We’ve spent the past week a...",
      "content"  : "we’ve spent the past week analyzing performance of eclipse hived/hivemind in our api service (api.hive.blog) and making improvements based on real-world loading patterns. it’s been a very productive resolved most outstanding issues reported problems we observed. also identified fixed several longstanding hived mutex locking code that prevented peak led to potential data corruption issues.# work (blockchain node software)we made number non-consensus changes improve fix old bugs:we reviewed used protect chainbase database found serious bugs showed up under high stress node. these could lead non-optimal performance. those fixes are incorporated into this merge request:https://gitlab.syncad.com/hive/hive/-/merge_requests/143after fixing problems, ran tests using `siege` tool were unable “break” hived’s operation anymore. able get fully utilize all server’s cores (48 test system), demonstrating is fairly optimal for realistic loads.as optimization, enabled filtering operations returned by one time-consuming calls, `get_account_history`: https://gitlab.syncad.com/hive/hive/-/merge_requests/136https://gitlab.syncad.com/hive/hive/-/merge_requests/137https://gitlab.syncad.com/hive/hive/-/merge_requests/139we responses hived, mostly response reports from apps developers:https://gitlab.syncad.com/hive/hive/-/merge_requests/125https://gitlab.syncad.com/hive/hive/-/merge_requests/126https://gitlab.syncad.com/hive/hive/-/merge_requests/133we limited max can be fetched call 1k (previously it allowed 10k operations) optimize throughput: https://gitlab.syncad.com/hive/hive/-/commit/9a05f4d780fc98b891f51ab4b88ebec89fde467bwe corrected account-impacting virtual created recently:https://gitlab.syncad.com/hive/hive/-/merge_requests/134## statuswe started full replay sync early morning check above (full takes around 18 hours). don’t expect any issues, but there small chance due changes, even though no consensus made.with i think reliability has substantially improved over its condition seems quite solid face substantial traffic loading. minor issue still with crashing if receives when starting up, so may tackle next, since an annoyance updating hiveds deployed inside server configuration. **as version contains operational improvements, tagged as [v1.24.5](https://gitlab.syncad.com/hive/hive/-/releases/v1.24.5), strongly recommended upgrade nodes. however, there’s need exchanges or nodes version, come play handling significant traffic.**# hivemindwe numerous optimizations bug hivemind week:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/311https://gitlab.syncad.com/hive/hivemind/-/merge_requests/306https://gitlab.syncad.com/hive/hivemind/-/merge_requests/312https://gitlab.syncad.com/hive/hivemind/-/merge_requests/314https://gitlab.syncad.com/hive/hivemind/-/merge_requests/291https://gitlab.syncad.com/hive/hivemind/-/merge_requests/280https://gitlab.syncad.com/hive/hivemind/-/merge_requests/316https://gitlab.syncad.com/hive/hivemind/-/merge_requests/318https://gitlab.syncad.com/hive/hivemind/-/merge_requests/323https://gitlab.syncad.com/hive/hivemind/-/merge_requests/226https://gitlab.syncad.com/hive/hivemind/-/merge_requests/322https://gitlab.syncad.com/hive/hivemind/-/merge_requests/289https://gitlab.syncad.com/hive/hivemind/-/merge_requests/315https://gitlab.syncad.com/hive/hivemind/-/merge_requests/326https://gitlab.syncad.com/hive/hivemind/-/merge_requests/321https://gitlab.syncad.com/hive/hivemind/-/merge_requests/325https://gitlab.syncad.com/hive/hivemind/-/merge_requests/328## status (2nd layer social media microservice)by late tomorrow we’ll have remaining big performance, other than reputation support (which intentionally left out until resolved).# condenser + wallet (open-source **hive.blog**)merged decentralized lists:https://gitlab.syncad.com/hive/condenser/-/merge_requests/135this functionality waiting last hivemind, won’t testable deploy new hivemind.we condenser’s (corrected some display page loads newer, faster calls), including features proposals page:https://gitlab.syncad.com/hive/wallet/-/merge_requests/42https://gitlab.syncad.com/hive/wallet/-/merge_requests/43https://gitlab.syncad.com/hive/wallet/-/merge_requests/45https://gitlab.syncad.com/hive/wallet/-/merge_requests/52https://gitlab.syncad.com/hive/wallet/-/merge_requests/54https://gitlab.syncad.com/hive/wallet/-/merge_requests/55https://gitlab.syncad.com/hive/wallet/-/merge_requests/56https://gitlab.syncad.com/hive/wallet/-/merge_requests/57https://gitlab.syncad.com/hive/wallet/-/merge_requests/60https://gitlab.syncad.com/hive/wallet/-/merge_requests/62https://gitlab.syncad.com/hive/wallet/-/merge_requests/64https://gitlab.syncad.com/hive/wallet/-/merge_requests/65https://gitlab.syncad.com/hive/wallet/-/merge_requests/68https://gitlab.syncad.com/hive/wallet/-/merge_requests/70proposals changes:https://gitlab.syncad.com/hive/wallet/-/merge_requests/47https://gitlab.syncad.com/hive/wallet/-/merge_requests/49https://gitlab.syncad.com/hive/wallet/-/merge_requests/51## statuscondenser looking pretty good at point, continue look problems.# hive-js improvementsin order make hive.blog faster, modified option filter get_account_history call:https://gitlab.syncad.com/hive/hive-js/-/merge_requests/12https://gitlab.syncad.com/hive/hive-js/-/merge_requests/13https://gitlab.syncad.com/hive/hive-js/-/merge_requests/14# what’s next week?tomorrow hopefully deploying week, after real world testing node.we’ll make.**assuming deployment latest goes well tomorrow, likely few more reported, latter part coming begin analyze feasibility various previously suggested hf25 intermediate aren’t released earlier.** see: update blocktrades hive core coding @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive core developper meeting #11",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/10/23/hive-core-developper-meeting-11.html",
      "date"     : "2020-10-23 03:36:15 -0700",
      "desc"     : "Subjects touched on: Dev Sync problems encountered with hivemind pending issues ...",
      "content"  : "https://www.youtube.com/watch?v=ztfpbeo8ptw youtube urlsubjects touched on:* dev sync* problems encountered with hivemind pending issues* update of documentation (who/when/how)* clarification on the organization/coordination work developers external to bt team latter* patreon use case and tech limitations* communities v2 ?* language field in hivemind* get discussion a tree instead an array* airdrop distribution round* 5 minute post limit removal this was one longest meetings as there lot things that were on. i highly encourage you give it listen :) see: hive core developper meeting #11 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "Hive&#39;s First Community Hardfork is Complete! A Post Fork Perspective",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/10/20/hive-first-community-hardfork-complete.html",
      "date"     : "2020-10-20 19:36:09 -0700",
      "desc"     : "Hive has forked: lets look at HF24's big successes, what work still needs doing, and where we need to aim to improve.",
      "content"  : "### last week, consensus witnesses came together and coordinated to activate hf 24 (eclipse), it has been a busy, exciting, frustrating few days since. let's take look at the big successes, what work still needs be done, where we need aim improve.![hivesurfacelogo.gif](https://files.peakd.com/file/peakd-hive/hiveio/e9dqburw-hivesurfacelogo.gif)## blockchain hived forked smoothly 🎉while approach was little bumpy, crossing over version 1.24.2 higher went incredibly well without even stutter. top twenty began by holding off meeting make sure that production (not testing) hivemind nodes were ready, main frontends prepared for switch. as super-majority got closer closer, one of ready an upgraded witness encountered transaction required new version. despite hoping more minutes prep, this challenging situation spurred plunge- fork activated, with out hitch! **it is always exciting rewarding when blocks start successfully rolling in on thanks eclipse, our are now part chain expansive potential... brand id, finally making hive truly independent from previous codebase.**## almost entirely new, optimization 📝after fork, it's very likely you've noticed some slowdowns or switch your frequently. we've lucky have robust infrastructure ecosystem since inception hive: most users day don't really think about what's actually doing all connecting interfaces blockchain. however, hf24, end getting familiar concept having them. far ideal (and being smooth itself), but will settle back down figure how best provision everyone. right there lot tweaks patches see fully rebuilt api works within ecosystem, means any given time selection may replaying. there's no doubt frustrating, entire foundation changed, things bouncing fairly quickly continue get seamless experience users.### here node tips general knowledge help you through period:- if seeing posts hours old 'stale' information while browsing interface, try switching website using pull example, go into peakd hive.blog preferences select different available list, then refresh.![nodes.png](https://files.peakd.com/file/peakd-hive/hiveio/qcorodlc-nodes.png)- you're post, comment, vote broadcast error, process changing same above logged directly interface like hive.blog. keychain hivesigner user, those services signs broadcasts you, so under preferences. here's dropdown looks keychain:![image.png](https://files.peakd.com/file/peakd-hive/hiveio/1somvzc7-image.png)- want status, helpful sites available: [peakd's benchmark tool](https://peakd.com/me/tools/benchmark), @ausbitbank's [node tracker](https://hive.ausbit.dev/), @drakos' list](http://hivekings.com/nodes).## fixed possible 🛠️one frustrations disappointments midst huge undertaking airdrop issues. hf24 liquid hbd amounts corrected exactly planned. unfortunately, vested hp not. many accomplished hardfork, doesn't feel great people who waiting longest issue addressed. past days, fix priority requiring another hardfork won't extended period complete heavily discussed. scenario these accounts full, way do funds held dhf unless additional fork. would both too long, dev resources, difficult exchanges, community step up resolve outstanding transactions simply instead. @blocktrades volunteered organize large amount needed vest front, funded proposal replace pocket original trust dhf. pretty amazing offer which not cost anything creates quick safe correct everyone already long. route preparing good news security, also patient their control.#### ➡️ [please click proposal: learn work, completed.](https://peakd.com/hiveblockchain/@hiveio/airdrop-vested-funds-distribution-round-corrections)## come, worth taking celebrate just been.everyone incredible terms helping contribute effort, including supporting each other, liaisons devs project owners adapt, teams put secure decentralize hive. coming weeks, talk projects built hive, can keep improving working cooperatively decentralized way, generate momentum everything powered. ## kickstart highlighting coindesk's *most influential 2020!*it's wild year everyone, come long way. else, contender poll coindesk celebrating groups expanding cryptocurrency space. &gt; **coindesk determine should year’s series. editors reporters long-list contenders, decide short list.**![](https://i.imgur.com/rds9uma.png)please minute visit survey link fill included series! ⬇️⬇️⬇️# [vote 2020* now!](https://www.surveymonkey.com/r/y2gnh2f)### ***congrats, hive... happy eclipse*** 🌚 see: hive's first complete! post perspective @hiveio"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "Update on Blocktrades work and the results of HF24",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/10/18/update-on-blocktrades-work-and-the-results-of-hf24.html",
      "date"     : "2020-10-18 21:26:36 -0700",
      "desc"     : "![image.png](https://images...",
      "content"  : "![image.png](https://images.hive.blog/dqmulqqw81jqyb4ctvaq9dfg2x8b4satula92qzblqwznxo/image.png)i’m publishing this post a little early, as i expect to be pretty busy on monday. before go into my normal reporting the detailed coding issues that blocktrades team worked last week and our plans for upcoming week, first wanted give brief overview of hardfork process it happened since that’s what’s been driving work flow in past week.# review 24 (and an “unplanned” that)on date (oct 14th), apps developers were still making related changes api problems they finding with hivemind, while was working fixing those bugs reported (i’ll discuss bug fixes later post). meanwhile, top 20 witnesses standing by, waiting “all clear” signal enough stable we could safely execute by upgrading their nodes code (tagged hived node repository either v1.24.2 or v1.24.3).several had already updated code, but considered ok me other devs, hf24 requires super-majority switch trigger new protocol contains. allowed some not have hang around waited apps/hivemind integration get acceptable level triggered hardfork.unfortunately, led unexpected side-effect: contained change wasn’t properly guarded against execution 24. means produce block wouldn’t accepted hf23 nodes. never seen before, because only cause problem when produced then under special circumstances. there few times prior we’ve run producing node, past, such minority, so worst thing might if got would temporarily fork, fall back consensus chain generated nodes.but date, even though didn’t running hf24, did majority hf24. is do determine how forks resolved. one rejected nodes, fork resolution logic kept separate unplanned hard from (effectively splitting two forks). quickly realized what happening, decided remaining all rejoined fork. also required operators upgrade hive switched versions use nodes.because executed sooner than liked due split, hadn’t resolved performance hivemind at time hardfork. various glitches slowdowns experienced users over days. devs resolve fast possible things are looking much better, quite soon.one future: want look ways detect like split happen. possibility setup secondary witness signs blocks witness, where produces broadcast isolated old report unable accept any received node. can reduce occurring practice having most very near same time, us far: ideal solution better test method think variation proposal above should work.# (blockchain software)we made several responses returned hived, mostly response reports developers:https://gitlab.syncad.com/hive/hive/-/merge_requests/125https://gitlab.syncad.com/hive/hive/-/merge_requests/126https://gitlab.syncad.com/hive/hive/-/merge_requests/133we general cleanup docker, scripts, configuration files hived:https://gitlab.syncad.com/hive/hive/-/merge_requests/130we fixed cli-wallet: using chain-id after hardfork, couldn’t generate proper transactions. seems tests written previously testing cli-wallet. https://gitlab.syncad.com/hive/hive/-/merge_requests/128the cli-wallet fix necessary exchanges, tagged version v1.24.4 includes above). note none needed witnesses, which why primarily 1.24.2. these exchanges.we started full replay yesterday check (this takes 18 hours). don’t issues, designed non-consensus changes, api, safe sorry.# (2nd layer social media microservice)most spent good progress. improvements separated categories: (wrong missing data responses) slow queries result unacceptable times. usually detected observing postgres servers used pghero tool. found handy sql consuming complete (it functions profiler). it’s useful duplicate unnecessary indexes impact performance.here’s list hivemind:https://gitlab.syncad.com/hive/hivemind/-/merge_requests/281https://gitlab.syncad.com/hive/hivemind/-/merge_requests/282https://gitlab.syncad.com/hive/hivemind/-/merge_requests/286https://gitlab.syncad.com/hive/hivemind/-/merge_requests/287https://gitlab.syncad.com/hive/hivemind/-/merge_requests/290https://gitlab.syncad.com/hive/hivemind/-/merge_requests/294https://gitlab.syncad.com/hive/hivemind/-/merge_requests/298https://gitlab.syncad.com/hive/hivemind/-/merge_requests/297https://gitlab.syncad.com/hive/hivemind/-/merge_requests/302https://gitlab.syncad.com/hive/hivemind/-/merge_requests/295https://gitlab.syncad.com/hive/hivemind/-/merge_requests/307https://gitlab.syncad.com/hive/hivemind/-/merge_requests/306https://gitlab.syncad.com/hive/hivemind/-/merge_requests/310decentralized merged develop branch, updates (the diverged lot made, decent amount manual merging testing): https://gitlab.syncad.com/hive/hivemind/-/merge_requests/275## status latest optimizations (last big merge request 310 saturday), fairly well, more make, need re-enable reputation updating disabled further optimization avoid sync downs caused excess loading receiving real world traffic). optimized alogorithm local dev system, we’ll experimental traffic part official build.we currently has generally 4 day process) see there’s problems, skipping doing incremental upgrades existing database order quickly.# experimenting optimum configurationanother we've configuring optimal performance. i've sharing information discovered channel, i'll make here about findings, once completed condenser (open-source hive.blog)we hive.blog wallet (mostly itself), especially removing usages get_state function being obsoleted favor efficient calls.https://gitlab.syncad.com/hive/wallet/-/merge_requests/38https://gitlab.syncad.com/hive/wallet/-/merge_requests/39https://gitlab.syncad.com/hive/wallet/-/merge_requests/40https://gitlab.syncad.com/hive/wallet/-/merge_requests/42https://gitlab.syncad.com/hive/wallet/-/merge_requests/43https://gitlab.syncad.com/hive/wallet/-/merge_requests/45https://gitlab.syncad.com/hive/condenser/-/merge_requests/118https://gitlab.syncad.com/hive/condenser/-/merge_requests/121https://gitlab.syncad.com/hive/condenser/-/merge_requests/119one deploy soon correctly vote button state user votes:https://gitlab.syncad.com/hive/condenser/-/merge_requests/129# next week?we reports, plus final calculation code. down couple days, although won’t likely until end (we observed today needs analysis).we’ll make. see: update results @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "inertia",
      "title"    : "Ruby Client for Hive: hive-ruby-1.0.1",
      "category" : "news, ruby, eclipse",
      "url"      : "/news/ruby/eclipse/2020/10/14/ruby-client-for-hive-hive-ruby-1-0-1.html",
      "date"     : "2020-10-14 17:07:27 -0700",
      "desc"     : "  I made some minor tweaks ...",
      "content"  : "i made some minor tweaks today, now that eclipse is active. mostly stuff couldn't test until the fully integrated production version was deployed.so also updated tests and documentation. it seems rubydocs.info refuses to index gitlab repo, so if you want read full hive-ruby documentation:```bashgit clone https://gitlab.syncad.com/hive/hive-ruby.git &amp;&amp; cd yard open doc/index.html```---# [`hive-ruby`](https://gitlab.syncad.com/hive/hive-ruby)hive-ruby ruby api for hive blockchain.## `radiator` vs. `hive-ruby`the `hive-ruby` gem written from ground up by `@inertia`, who author of [`radiator`](https://github.com/inertia186/radiator).&gt; intend continue work on indefinitely. but in `radiator-0.5`, refactor uses as its core. this means features like serialization will become redundant. think it's still useful radiator do own because reduces number requests. - @inertia`radiator` | `hive-ruby`---------- ------------has internal failover logic can have delegated externallypasses `error` responses caller handles raises exceptionssupports tx signing, does supports delegates `database_api.get_transaction_hex`, then deserializes verifyall apis methods are hardcoded asks `jsonrpc` what available node(`radiator-0.4.x`) only appbase relies `condenser_api` not rely **(wip)**small list helper select ops (in addition build your transaction) complete implementation every op transaction)does (yet) support `json-rpc-batch` requests requests## getting startedthe compatible with 2.2.5 or later.### install project*(assuming [ruby installed](https://www.ruby-lang.org/en/downloads/) computer, well [rubygems](http://rubygems.org/pages/download))*to run shell:```bashgem hive-ruby```... add code:```rubyrequire 'hive'```to a dependency project [bundler](http://bundler.io/), line gemfile:```rubygem 'hive-ruby', require: 'hive'```## examples### broadcast vote```rubyparams = { voter: voter, author: author, permlink: permlink, weight: weight}hive::broadcast.vote(wif: wif, params: params) |result| puts resultend```### streamingthe value passed block an object, keys: `:type` `:value`.```rubystream hive::stream.newstream.operations |op| #{op.type}: #{op.value}end```to start stream specific number, pass argument:```rubystream hive::stream.newstream.operations(at_block_num: 9001) #{op.value}end```you grab related transaction id each operation:```rubystream |op, trx_id, block_num| #{block_num} :: #{trx_id} certain operations:```rubystream hive::stream.newstream.operations(types: :vote_operation) #{op.value}end```or array [:comment_operation, :vote_operation]) (optionally) just operation(s) arguments. semantic sugar when types take all defaults.```rubystream hive::stream.newstream.operations(:vote_operation) include virtual hive::stream.newstream.operations(include_virtual: true) #{op.value}end```### multisigyou use multisignature operation.```rubyparams [wif1, wif2], resultend```in signing multiple `wif` private keys, possible export partially signed completed someone else.```rubybuilder hive::transactionbuilder.new(wif: wif1)builder.put(vote: weight})trx builder.sign.to_jsonfile.open('trx.json', 'w') |f| f.write(trx)end```then send contents `trx.json` other party they privately sign transaction.```rubytrx open('trx.json').readbuilder wif2, trx: trx)api hive::condenserapi.newtrx builder.transactionapi.broadcast_transaction_synchronous(trx)```### get accounts```rubyapi hive::databaseapi.newapi.find_accounts(accounts: ['hiveio', 'alice']) result.accountsend```### reputation formatter```rubyrep hive::formatter.reputation(account.reputation)puts rep```### tests* client repository into directory choice: * `git https://gitlab.syncad.com/hive/hive-ruby.git`* navigate new folder `cd hive-ruby`* be invoked follows: `bundle exec rake test`* `static` tests: test:static`* `broadcast` (broadcast simulated, `verify` actually used): test:broadcast`* `threads` (which quickly verifies thread safety): test:threads`* `testnet` actual broadcasts) `test_node=https://testnet-api.openhive.network bundle test:testnet`you part above `test` execution:* `block_range`, which streams blocks (using `json-rpc-batch`) stream:block_range`if point any node tests, instead letting suite pick default, set environment variable `test_node`, e.g.:```bash$ test_node=https://testnet-api.openhive.network test```## contributionspatches welcome! contributors listed `hive-ruby.gemspec` file. please (`rake test`) before opening pull request make sure passing them. would contribute, don't know on, check issues list.## issueswhen find issues, report them!## licensemit see: hive: hive-ruby-1.0.1 @inertiamore about"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "Has the Eclipse Happened? Explaining How Hive Hardforks Work, and Activating HF24 on October 14th",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/10/08/has-the-eclipse-happened-explaining-how-hive-hardforks-work-and-activating-hf24-on-october-14th.html",
      "date"     : "2020-10-08 16:26:30 -0700",
      "desc"     : "The date for October 6th in the HF24 blockchain code has already passed- did we actually fork? No, and here's why.",
      "content"  : "### the date for october 6th in hf24 blockchain code has already passed- did we actually fork? **no, and here's why.**![](https://images.hive.blog/p/2ffvza2zeqovlrye9s796g7tfwjfd37wzzynz6rlt726eopj9puazrunhnmciozdprhg5oqzfajxdtbdycbap1smmdtxeaqpv8yimtmmdfnm9hokpwgmqjv8ktzqj)eclipse is a *big* set of changes- across chain itself, impacting almost every service piece infrastructure that interacts with it. as per previous posts about hf24, itself called hived it finished, tested, ready to go. many witnesses are running it, hardfork passed... *so why haven't forked?***a reminder how hardforks work on hive from last announcement post:**&gt;the does not fork at specific block height (after certain amount finalized blocks) like some chains. timestamp code, when super-majority witness servers upgrade or after this time, will new version. non-tech speak: long enough top 20 hit coded time 6th, happens automagically.### consensus have indicated they all support but purposefully holding off having few more days. been make sure interfaces everyone uses hivemind nodes need run available network.## tl;dr: there were steady real application testing activating so plan ***wait until 14th*** fixes node upgrades. if you backup go, then fine there's nothing do!this pretty humbling learning experience us try towards cooperative decentralization. checking final hours before activation date, became clear dapps hadn't had chance test against would be able continue smoothly fork, experienced breakage, rpc operators up everyone's needs forked. previously, api changes small, easy test, upgrading eleventh hour enough. sometimes launched one site mind no concern breaking everything else. changing site, interface, project impacted. even should smoothly, single ends broken success users hive.this unique circumstances (you don't rebuild foundations day, really than once) doesn't change fact major improvements made development operator end ecosystem. while knew inception decentralization requires cooperation, choice activate scheduled hammered point home. it's good example where whole fix friction points communication developers who used different circumstances, also an opportunity help recognize importance personal responsibility. thrives can always improved.#### excited retooling done next step hive's journey, thank your passion. things beyond control aren't working way expect. most engaged communities is, that's part getting right matters. #### upgraded waiting activated, you're still go! big being prepared network.in intervening between post, community members reaching out talk known dapp team check they've figure what their lives easier through hf process, double core services following hardfork. small coming course patched snapshots created synced faster handle increased load put parts our network infrastructure. finally, chosen ***october 14th 14:00 utc majority switch over we'll finally get eclipse.*** see: eclipse happened? explaining work, by @hiveio"
    } ,
  
    
    
    
    
    
    {
      "author"    : "inertia",
      "title"    : "BeeLine, a BeeChat Client Framework for Ruby",
      "category" : "news, ruby, beechat",
      "url"      : "/news/ruby/beechat/2020/10/08/beeline-a-beechat-client-framework-for-ruby.html",
      "date"     : "2020-10-08 14:53:33 -0700",
      "desc"     : "[beeline](https://github.co...",
      "content"  : "[beeline](https://github.com/inertia186/beeline-rb)=======beeline is a [beechat](https://beechat.hive-engine.com/) client framework for ruby. beechat has been designed by [@reazuliqbal](https://hive.blog/@reazuliqbal). beeline provides abstraction to ruby developers interact through the [api](https://github.com/hive-engine/beechat-frontend/blob/master/documentation.md).#### installationadd your `gemspec````rubygem 'beeline-rb', require 'beeline'``````bashbundle install```**--or--**in project ...```bashgem install beeline-rb``````rubyrequire 'beeline'```#### usagefrom root of project, add file called `config.yml` containing (using own account information):```yaml# example config.yml:chain: :hive_account: social :hive_public_key: stm5ctejusoz9fwfcavbnvwyygnmbo9tvshse8whrqamnji6sdctt :hive_posting_wif: 5jrvprqebbvcrdjv29idvkwn3eqyz9jqfahzrcyuvfbebrkryfc :hive_api_url: https://api.openhive.network```in access session:```rubyrequire 'beeline'bot = beeline::bot.new(prefix: '$')# just match on message.bot.message('ping!') do 'pong!'end# pattern.bot.message(/d+/) 'yes, those are numbers.'end# respond `$time` with current time.bot.command(:time) time.now.to_send# `$say` reply.bot.command(:say) |args| if args.nil? 'what you want me say?' else wanted say: #{args} endend# start bot run loop.bot.run```--- see some my previous how posts in: [#radiator](https://hive.blog/created/radiator) [#ruby](https://hive.blog/created/ruby)## get in touch!if you're using tender, i'd love hear from you. drop line and tell what think! i'm @inertia hive. ## licensei don't believe intellectual property. do, consider as licensed under creative commons license. see: beeline,"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive core developper meeting #10",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/10/05/hive-core-developper-meeting-10.html",
      "date"     : "2020-10-05 12:08:09 -0700",
      "desc"     : "Meeting tl;dr: I'm working on rc delegations still, currently stuck but hopeful a hivemind dump should be coming later today so we can skip the 4 day sync time @blocktrades team is working on a docker h...",
      "content"  : "https://www.youtube.com/watch?v=5frrfo96xbumeeting tl;dr: - i'm working on rc delegations still, currently stuck but hopeful- a hivemind dump should be coming later today so we can skip the 4 day sync time- @blocktrades team is docker hivemind- need all apps to test their against https://beta.openhive.network/ and report if they found issues or not (especially peakd essency @asgarth / @good-karma ) @roelandp will make an excel track which have tested are okay not- pay x hive/hbd every days operation would nice enable patreon-like use cases i'll take care of that on. loads discussion hive's future you listening because it makes less sense summarized see: hive core developper meeting #10 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "reazuliqbal",
      "title"    : "Open sourcing BeeChat Client And Developer Documentation",
      "category" : "news, devops, api, chat",
      "url"      : "/news/devops/api/chat/2020/09/29/open-sourcing-beechat-client-and-developer-documentation.html",
      "date"     : "2020-09-29 01:55:33 -0700",
      "desc"     : "![image.png](https://images...",
      "content"  : "![image.png](https://images.hive.blog/dqmpxwpzsumzbizzwhopbzurrsxq5gs1o956fdrpxwmvdch/image.png)beechat is real-time chat service for hive built by hive-engine. you probably have read the [announcement post](https://hive.blog/beechat/@aggroed/beechat-chatting-with-friends-through-hive-sites-like-nftshowroom-com) @aggroed. if a account, can start chatting immediately with other users from websites which would implement beechat in them.hive-engine open sourcing client website may help developers to add feature their or mobile apps.beechat demo: https://beechat.hive-engine.com/beechat client: https://github.com/hive-engine/beechat-frontendclient written vue js, logic implementation on frameworks should be similar. future we will provide embed-able widget code make it very easy any website.# developer documentation## apibase url: https://beechat.hive-engine.com/api### `get /users/login`logs user.**query parameters**- `username`: string - username, e.g. `reazuliqbal`- `ts`: number timestamp miliseconds, `1601355471900`- `sig`: signed `username + timestamp` using user's posting/active key. `reazuliqbal1601355471900`**example response**```jsonld={ username: reazuliqbal, admin: true, ws_token: 01ekc3jvr2d81am8z9s3q0nvaj}```### /users/verify`verifies current access token valid. not valid and there refresh token, then new issued.**query parameters**no parameters are needed.**example response**```json={ /users/refresh-token`requests token.**query /users/friends`returns friends blocked list.**query friends: [codebull, bdcommunity, aggroed], blocked: [reazul-dev]}```### /users/friend-requests`returns an array of pending friend requests.**query response**```json=[{ id: 01ekc46zmg111c2hyabe80we8t, reazul-dev}]```### /users/settings`returns settings.**query dm: { only_from_friends: false }}```### `post /users/settings`updates settings.**payload**- `dm` object-- `only_from_friends`: boolean**example /users/channels`returns user-created channels.**query payload**```json=[{ moderators: [], members: [reazuliqbal], false, type: channel, name: bdcommunity chat, creator: created_at: 2020-09-29t05:17:43.848z, updated_at: 01ekc4q317ym484z7bmvg9y1k0},........]```### /users/channels`creates channel.**payload**- `name`: string**example 01ekc4q317ym484z7bmvg9y1k0, reazuliqbal}```### /users/logout`logs out user.### /messages/conversations`returns conversations.**query reazuliqbal], dm, 2020-09-29t04:09:31.453z, 2020-09-29t04:09:51.596z, 01ekc0t6hevrdp0cygzae6vvfr},..........]```### /messages/conversation`returns details conversation.**query `id`: id conversation- `ids`: comma separated ids conversationseither `id`, `ids` required.**example 01ekc0t6hevrdp0cygzae6vvfr}```### /messages/new`return unread messages.**query conversation_id: 01ekc0t6hevrdp0cygzae6vvfr, from: codebull, to: content: whats up?, timestamp: 2020-09-29t05:31:56.399z, 01ekc5h3kfswn7fe9xt497hgqt},........]```### /messages/chats`**query `conversation_id`: string. required conversation id- `before`: number. optional return messages- `limit`: messages return**example hey, first message beechat, 2020-09-29t04:09:31.473z, 01ekc0t6jhcgepgpsmrb3x88rr, read: true}, hey hey!, 2020-09-29t04:09:51.617z, 01ekc0tt81t2wgrkkypqrxwgva, true},........]```## websocketserver: `wss://ws.beechat.hive-engine.com`a websocket server two way communication between user, this facilitates chatting. as soon user connects server, they authenticate themselves otherwise connection closed server.the only accept json also reply json.**protocol**```json={ string, payload: object}```### authenticationauthenticate server.**message**```json={ authenticate, {}}```**response**```json={ status, authenticated: true }}````authenticated` could depending authentication status.### create conversationcreates dm group conversation.**payload**- `to`: (dm) (group)- `message`: string**message**```json=// dm{ create-conversation, message: hi }}// group{ reazul-dev], conversation! }}```**response**the respond messages. one created message.```json={ conversation-created, reazul-dev, group, 2020-09-29t06:16:25.695z, 01ekc82jamv9jq1ppg9cndf3er }}``````json={type:chat-message,payload:{id:01ekc82jbdqd25b94nzrsh2fmx,conversation_id:01ekc82jamv9jq1ppg9cndf3er,content:this conversation!,from:reazuliqbal,to:null,read:false,timestamp:2020-09-29t06:16:25.709z}}```### rename conversationrenames conversation. creator renamed.- name**message**```json={ rename-conversation, 01ekc82jamv9jq1ppg9cndf3er, awesome }}```**response**```json={ conversation-renamed, leave conversationleaves conversation.**message**```json={ leave-conversation, }}```**response**to user:```json={ conversation-removed, }}```to all members:```json={ member-left, member: codebull messagesend message.**payload**- conversation.- `to` : null (group) username recipient null- sent chat**message**```json=// chat-message, null, hey! 01ekca9bwcjxqepmvf047qqfxw, 2020-09-29t06:55:05.613z delete messagedeletes chat. sender message. moderators chat.**payload**- message**message**```json={ delete-message, 01ekcae9ksktq7shx0p0pzz53z message-deleted, acknowledgmentsets read.**payload**- conversation**message**```json={ acknowledgment, 01ekc0t6hevrdp0cygzae6vvfr acknowledged, memberadds member member.**payload**- member's username**message**```json={ add-member, member-added, remove memberremoves removed.**message**```json={ remove-member, member-removed, moderatoradds moderator member.**message**```json={ add-moderator, reazul-dev moderator-added, moderatorremoves moderator. moderator.**payload**- remove-moderator, moderator-removed, request friendshipsends request.**payload**- request-friendship, reazuliqbal friendship-requested, 01ekcb8d4pvdhbq4mc7t4jfyab, friendshipaccepts request**message**```json={ accept-friendship, 01ekcb8d4pvdhbq4mc7t4jfyab friendship-accepted, reject friendshiprejects reject-friendship, 01ekcbkxx88mandk8fwnqag8ab friendship-rejected, friendshipremoves friend.**payload**- remove-friendship, friendship-removed, block userblocks blocking them list.**payload** block-user, user-blocked, unblock userunblocks user.**payload** unblock-user, user-unblocked, re-authentication requiredserver send `reauthentication-required` 1 minute before about expire. do listen those renewing requesting `/users/refresh-token` api endpoint.**response**```json={ reauthentication-required, }}```___please note that beta. find bug, please report me @reazuliqbal (`reazuliqbal#1149`). need implementing feel free contact discord.___i am running witness @bdcommunity.**please vote [@bdcommunity](https://hivesigner.com/sign/account-witness-vote?witness=bdcommunity&amp;approve=1) witness.** see: documentation"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "FINAL HIVE HF24 DATE SET: October 6, 2020",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/09/24/final-hive-hf24-date-set-october-6-2020.html",
      "date"     : "2020-09-24 13:14:09 -0700",
      "desc"     : "We now have an official hard fork date of October 6th, 2020. Set your alarms and get ready for Eclipse! 🌒🌑🌘",
      "content"  : "![#hivepowered... an asset provided by community member @nateaguila ](https://files.peakd.com/file/peakd-hive/hiveio/dt3wzmx5-image.png)in the past few weeks, hf24 has been put through its paces dedicated testing - tentative initial and interim suggested dates have come gone as issues uncovered, but with latest round of fixes, we now **official hard fork date october 6th, 2020.**set your alarms get ready for eclipse! 🌒🌑🌘**you'll note that if you view this post at peakd.com, there is a countdown timer to attached it. can also find live hive.io.**the hive blockchain does not specific block height (after certain amount finalized blocks) like some chains. timestamp set in code, when super-majority witness servers are running upgrade or after time, chain will new version. non-tech speak: long enough top 20 hit coded time on hardfork happens automagically.![image.png](https://files.peakd.com/file/peakd-hive/hiveio/otkjchwx-image.png)## ***exact 24: 6, 2020, 14:00 utc/gmt***![image.png](https://files.peakd.com/file/peakd-hive/hiveio/dbfwyfho-image.png)#### why it taken so long?one things that's happened during code base updates lack testing, which certainly isn't acceptable given how much changing under hood upgrade. direct run up first pretty large bugs were discovered squashed, hived (the actual code) test successfully forked many times possible between then now. last largest delays related hivemind, extensive api powering all features favorite dapps. getting prepared working smoothly final piece make sure where there's no disruption any user doing *anything* they love use for. both these components place, it's finally hardfork!### what set?exchanges notified upgrade, already begun posting about their intention update subsequent outages. (see: [binance](https://www.binance.com/en/support/articles/1955a55126e241999b5495873e4fa55f), [huobi](https://huobiglobal.zendesk.com/hc/en-us/articles/900002737723-huobi-global-will-suspend-hive-deposits-and-withdrawals-at-16-00-on-september-22-gmt-8-)) notice exchanges supporting wallets go temporarily down maintenance nodes version anticipation fork. big plus be quicker them spin replay, means downtime wallet easier going forwards. over next week, dapps projects services won't interrupted. lot information development places learn more ecosystem from still applicable, here hf info mega post: https://peakd.com/hiveblockchain/@hiveio/tentative-hardfork-date-hive-hf24-information## **if node, release here:** https://gitlab.syncad.com/hive/hive/-/tags/v1.24.2![image.png](https://files.peakd.com/file/peakd-hive/hiveio/mwazxovh-image.png)for most you, nothing different special need do prepare- require anything end users. road properly prepare power social, business, dreams, worth ride. 🚀#### thanks being part blockchain, creating one active diverse crypto communities world 🐝 see: set: 2020 @hiveio"
    } ,
  
    
    
    
    
    
    {
      "author"    : "keychain",
      "title"    : "Hive Keychain DHF - Week 18",
      "category" : "news, nodejs, hive-keychain",
      "url"      : "/news/nodejs/hive-keychain/2020/09/24/hive-keychain-dhf-week-18.html",
      "date"     : "2020-09-24 01:06:36 -0700",
      "desc"     : "![social_keychainforhive.jp...",
      "content"  : "![social_keychainforhive.jpg](https://files.peakd.com/file/peakd-hive/keychain/xnmvxgi6-social_keychain-for-hive.jpg)as promised in our [proposal](https://peakd.com/hive/@keychain/hive-keychain-proposal-dhf), we will post weekly updates to let you know what's going on regarding keychain development.### extensiona new version (v1.10.1) is now online both the chrome store and firefox add-ons.this fixes a few minor issues introduce two features from settings &gt; automated tasks menu :- automatically claiming rewards. if selected, as long unlocked, rewards (if any) be claimed every 20 minutes.- accounts. this only show up options have enough rc for accounts minutes.this week i also started working hbd conversion.### mobile appi finished implementing transfers information main page, which means page pretty much ready, just some fine tuning do.however, memos cannot decoded/encoded keychain. difference between react native node.js that it can very troublesome implement core libraries such crypto (needed case). i've spent days trying resolve this, no avail. important get back work later but prefer focus getting app ready.#### team@yabapmatt : founder - [witness](https://hivesigner.com/sign/account-witness-vote?witness=yabapmatt&amp;approve=1)@aggroed [witness](https://hivesigner.com/sign/account-witness-vote?witness=aggroed&amp;approve=1)@nateaguila ui/ux@stoodkev lead developer [witness](https://hivesigner.com/sign/account-witness-vote?witness=stoodkev&amp;approve=1)#### frequent contributors@arcange [witness](https://hivesigner.com/sign/account-witness-vote?witness=arcange&amp;approve=1)@quochuy [witness](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1)---### support hive development by voting [our proposal](https://peakd.com/hive/@keychain/hive-keychain-proposal-dhf) [peakd](https://peakd.com/proposals/98) (on upcoming section), [hivedao](https://hivedao.com/proposal/98) or with [hivesigner](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b98%5d&amp;approve=true).*100% of payout redirected dao* see: dhf 18 @keychain"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core development report #8",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/09/23/core-development-report-8.html",
      "date"     : "2020-09-23 06:19:03 -0700",
      "desc"     : "![image.png](https://files....",
      "content"  : "![image.png](https://files.peakd.com/file/peakd-hive/howo/6zzmfzkf-image.png)hello ! it's been while since i've done one of those, so i figured i'd do one. rather short because there isn't much to talk about. finished testing hf24 and am now working get the rc delegation feature work again.you might remember me saying that was ready, well issue is a lot code around it has changed (rebranding optimization from @blocktrades' team) need adapt my pull request with them also follow rebranding (i had remove steem here there). not an easy process as i'm too familiar some changes. fun tidbit noticed today devs leaving message for like me:![image.png](https://files.peakd.com/file/peakd-hive/howo/f0nasrxi-image.png)basically things used be accessible they aren't you differently (it's bad thing).anyways, underway, have decided leave original merge intact again changing want keep somewhere branch works on hf23 in case delete by mistake. gitlab currently unavailable can't link you, but soon is, feel freel check out, name `feature/rc_delegation_rebase`howo see: core development report #8 @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "good-karma",
      "title"    : "Hivesigner - Documentation, Hardfork and other improvements",
      "category" : "news, nodejs, hivesigner",
      "url"      : "/news/nodejs/hivesigner/2020/09/14/hivesigner-documentation-hardfork-and-other-improvements.html",
      "date"     : "2020-09-14 03:02:51 -0700",
      "desc"     : "Just pushed some updates in...",
      "content"  : "just pushed some updates into hivesigner api and ui to get them ready for upcoming hardfork, as well add improvements fix reported bugs.![hivesigner-hardfork-ready-ecency](https://images.ecency.com/dqmucyseb9qpgpfxylafcydx4jpuoqwjctt7ftnqtxbxbh6/thumbnail.png)## what's new- updated libraries both hardfork- api: app profile detection issue- conderser operations related condenser custom_json ui: owner key signing account auths page keys sorting easy revoke- redirect_uri sign so apps [can redirect page](https://github.com/ledgerconnect/hivesigner.js#redirect-with-transaction-id) transaction id after success.- wiki [pages updated](https://github.com/ledgerconnect/hivesigner/wiki) better documentation linking.- [developers, updated](https://hivesigner.com/developers).### developershttps://hivesigner.com/developers got changes that will help any developer started with learn about use cases.![hivesigner-developers-hive-authentication](https://images.ecency.com/dqmzuzydwo56kju524hrwqjahydaqisfpnshnwn8wecmmpz/2020_09_14_12_44_53.png)we are numbering each section developers follow step by actions guide best out of start integrating hive. has relevant links more other cases. showcasing usages like `imagehoster` where minor could be used securing backend web/mobile/desktop applications a hivesigner. cases `openhive.chat`, `hivesearcher` application data is off-chain while authenticating on-chain user # hive on! ## support - [read details proposal](https://ecency.com/hive/@good-karma/hivesigner-ongoing-development-and-improvement) [`hivesigner proposal`](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b88%5d&amp;approve=true) | [`hivesearcher proposal`](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b114%5d&amp;approve=true) [![vote @good-karma witness](https://images.ecency.com/p/o1aj9qdyyjnspzwhuggyc3mngfqoan2qn9aitn8uplp6qb5tl?format=match&amp;mode=fit)](https://hivesigner.com/sign/account-witness-vote?witness=good-karma&amp;approve=1) see: documentation, hardfork"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive core developper meeting #9",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/09/12/hive-core-developper-meeting-9.html",
      "date"     : "2020-09-12 08:56:09 -0700",
      "desc"     : "Meeting tl;dr: Testing has been successful and now hived is solid enough for it to be run as production nodes.",
      "content"  : "https://www.youtube.com/watch?v=wovs5l4kewsmeeting tl;dr:testing has been successful and now hived is solid enough for it to be run as production nodes. we still need about a week solve some hivemind issueshard fork moved the 22 this date (unless something major comes up) final. most of what discussed there can found in greater details here: https://peakd.com/hive-139531/@blocktrades/eclipse-hardfork-progress-hf-date-set-to-sep-22nd see: hive core developper meeting #9 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "good-karma",
      "title"    : "Hivesearcher - free, integrate it into your Hive apps",
      "category" : "seo, api",
      "url"      : "/seo/api/2020/09/10/hivesearcher-free-integrate-it-into-your-hive-apps.html",
      "date"     : "2020-09-10 11:18:27 -0700",
      "desc"     : "Thrilled to share with you ...",
      "content"  : "thrilled to share with you all about new changes we pushed hivesearcher. it is now open for every app integrate and give better content search discovery its users.![hivesearcher-decentralized-search-engine-hive-ecency](https://images.esteem.app/dqmcakfejdgj55stb3gwtvmzw6wtz5k9v3uwbh83da9a8qm/thumbnail.png)## api endpoint changewe have changed our endpoint, https://api.hivesearcher.com. old will continue function until deprecate later, but urge change or use endpoint. try out let us know if find some issues.## documentationmade relevant documentation: https://hivesearcher.com/api-docs as well obtaining key screen. from on completely free into your app. visit above page get key. there daily 3k requests limit by default need increase, just ping make sure increase it.## keysexisting keys are updated non-expiry token, so paid previously keys, those freemium automatically.## cluster improvementswe made improvements servers ready upcoming ranking, indexing changes. any in ranking algorithm require couple days demanding memory/disk sizes, coming write existing algorithms how proposing improve nextour next course of actions be check algorithm, remove payout factoring popular filter ui hivesearcher.com user can better, simpler filtering options. similar google tools which everyone familiar with. another thing, `hivemind` hardfork doesn't break `hive2elastic` plugin. ## call hive appsare developer apps? engine consider adding fast search. tribes, mobile app, website frontends, desktop using could potentially feature lines code. go click `get key` button, confirm account hivesigner (it authority, validate username). that's it, backed up stays private, not published public repositories.## support proposal - [read details hivesearcher proposal](https://ecency.com/hive/@good-karma/open-search-engine-development-and-maintenance) [vote hivesigner](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b114%5d&amp;approve=true) hiveblog wallet: https://wallet.hive.blog/proposals peakd: https://peakd.com/proposals/114 source: https://github.com/ecency/hive2elastic see: free, apps @good-karma"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "Misconceptions about 2nd layer apps: part 1",
      "category" : "dapps",
      "url"      : "/dapps/2020/08/28/misconceptions-about-2nd-layer-apps-part-1.html",
      "date"     : "2020-08-28 17:16:54 -0700",
      "desc"     : "@howo recently shared with ...",
      "content"  : "@howo recently shared with me the image below (neither of us made this image, but i have a reasonable belief that it's copyright free), and it realize there are some common misconceptions about 2nd layer apps worth dispelling. originally, was going to make one post this, started run long when tried avoid skipping any steps in my explanations, so i’ve decided break up into few short, easy-to-digest posts. also means won't be explaining all problems today, either, hey, what's life without little anticipation?![image (3).png](https://images.hive.blog/dqmwapvwwsacytitpb8of4xfmdjqdnmvdjufsj7mpq5fgyp/image%20(3).png)# misconception 1: it’s difficult (or impossible) decentralized appscreating app on hive is almost trivially easy for an experienced programmer. how easy? let’s take look at go creating playing tic-tac-toe matches.## design transactions protocol rules your start game, we just need two operations:`offer_match, “player”: “mynextvictim”``accept_offer, “transaction_id”: transaction_id_of_offer`whenever player wants challenge he broadcasts offer_match. simple example, our will auto-expire offer if isn’t accepted 24 hours. accept offer, challenged transaction “accept_offer” operation includes id original offer. acceptance broadcast within hour period, game moves from each player.so more operation, “move” operation:`move, transaction_id:transaction_id_of_offer, “coordinates”: [row_number, column_number]`again, simplicity, we’ll gets first move, could easily parameter either or operation.we add rules: 1) players turns moving, 2) can’t move previously occupied square, 3) wins 3 row, 4) ends tie 9 valid occur winner (i.e. squares get filled).defining simple, there’s probably marginally work writing user interface displays board, allows click squares, updates board as received blockchain. pretty do, code-wise. hive, great choices programming language do would python javascript, has easy-to-use libraries allow application publish read blockchain.## decentralize gamenow, design, still “hard step” decentralizing app, right? nope, that’s really part.simply official publicly. ideally, you source code license lets anyone code. congratulations, can play other people around world, secure knowledge they cheat. their computer, connect api node, verify transactions, determine who won (although, fair warning, most those games ties). blockchain maintains immutable record what were actually made, by whom, publicly available “tic-tac-toe” winner. someone server provides false answers, always own find out truth. see: apps: part 1 @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive core developper meeting #8",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/08/24/hive-core-developper-meeting-8.html",
      "date"     : "2020-08-24 09:11:42 -0700",
      "desc"     : "Meeting tl;dr: This meeting was mostly about testnet sync and how we want to do testing, we are very close to release so we want to make sure that everything works.",
      "content"  : "https://youtu.be/ajdiwzokysg# meeting tl;dr:this was mostly about testnet sync and how we want to do testing, are very close release so make sure that everything works.@blocktrades' team is still working on hivemind the last details need be ironed out. pushing hard fork date from 16th or even 22th (of september) if things don't go as planned. perfect, it's better one week late than launch have blockchain fail at some point.regarding testnets will create three: - with new chain id, where super-majority of witnesses run 24, see transition hf23 hf24 goes this time without supermajority, attacknet running id supermajority. goal provide a bug bounty whomever can take network down / cause an outage notices significant (details shared later).later we'll organizing but program generalize approach proven successful.if you witness help out, get in touch me via slack, mattermost discord setup node testnets.we start scratch requirements small. see: hive core developper #8 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "Tentative Hardfork Date Set! Hive HF24 Information Mega Post",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/08/21/tentative-hardfork-date-hive-hf24-information.html",
      "date"     : "2020-08-21 14:42:39 -0700",
      "desc"     : "HF24 is tentatively set for September 8th, 2020. Get the final release candidate code, learn what it does, and more. ",
      "content"  : "![#hivefork ... a futuristic digital asset, provided by community member @yuurinbee-znz](https://files.peakd.com/file/peakd-hive/hiveio/pkjrncbk-hive-wallpaper-1920x1080.png)## as of today's final release candidate code, hf24 will occur on september 8th, 2020, no major bugs are discovered in public testnet over the course coming week. this is long post that cover hardfork date, what's been worked to be included hardfork, look at where conversation and updates continued development hive can found, more. it's big one!![](https://images.hive.blog/dqmr3iwcn9yvwxdxfunjmmx6frjavffyqwga4qrckpens1j/hive%20dividers-02.png)#### hf24: an 'eclipse' 2020 🌘🌑🌒what for how timing works, more was covered last post, so if you'd like get refreshed [you read back here](https://hive.blog/hiveblockchain/@hiveio/hive-hardfork-24-upcoming-release-candidate-testnet-other-info). time since announcement potential eclipse candidate, code has frozen - means unannounced changes way chain works have added version. **the available today includes only features already communicated past repo.**over months, api node operators core developers running through its paces, finding fixing all sorts problematic calls. during first testing period, repository buzzing with activity. prepare work done blockchain itself, hivemind layer social integrations, large number language libraries use build things hive. so, while what do never changed, there lot testing, fixing, again best it done. give you example looks quantifiable way, four months alone had average 19 pull requests per month. (a request submission open source project consideration.) almost ***six times rate monthly contributions previous version base***.&gt; ### one month alone, 89 tracked members repo overseen contributed 116 merge 29 projects blockchain, hivemind, websites library code. those some pretty neat statistics!![](https://files.peakd.com/file/peakd-hive/hiveio/zr5bkjg9-image.png)*a few stats from 30 days*![image.png](https://files.peakd.com/file/peakd-hive/hiveio/rt63hcpr-image.png)### now ready witnesses app (and anyone else) spend next week trying find anything else may need fixed. *get here:* ⬇️ https://gitlab.syncad.com/hive/hive/-/tags/v1.0.11#### witnesses, encouraged begin firing up nodes, details announced here very shortly. start break things!if everything goes well, exchanges notified two weeks advance happening 2020. confirmation posted here.![](https://images.hive.blog/dqmr3iwcn9yvwxdxfunjmmx6frjavffyqwga4qrckpens1j/hive%20dividers-02.png)#### tl;dr! does do, point form? 📝if reminder being here's short list:**hive updates:**- changing id unique hive- newly powered hp cooldown days before counted towards governance voting- tokens distributed dhf fund slow converted into hbd top several year period prevent market flooding- hived (core code) drastically reorganized remove ecosystem naming conventions reduce costs resources needed run any type node- ability save state files account history snapshot help avoid replays- virtual operations fixes op itself makes, without needing keys)- airdrop corrections issued**hivemind including voting payouts calls, sorting feeds, etc. previously handled (the itself) moved allowing much faster response calls hugely increased capacity serve traffic- across board most types data dates, tags, feed order vote computations, pinned posts, more- decentralized blacklists created followed, well following mutes, which users full control participation (or not) lists not maintained level**hive programming updated alongside above dhive- hive-js- beem- hive-python- hive-ruby- lighthive## that's details. when week's complete notified, countdown made finalized date. reason bug revised date instead. rest discusses communication future involved, doesn't include specific about hf24. let's everyone who realize dedicated discussion spaces hardforks join in!![hf24.gif](https://files.peakd.com/file/peakd-hive/hiveio/rqwbvolx-hf24.gif)![](https://images.hive.blog/dqmr3iwcn9yvwxdxfunjmmx6frjavffyqwga4qrckpens1j/hive%20dividers-02.png)#### i detailed information around hive? learn between announcements?over years, biggest complaints should publicly accessible places observe or participate. birth hive, thing vastly improved! however, having single centralized ownership entity also collecting presenting ideas isn't straightforward represents whole ecosystem.both plus minus actually working better decentralization @hiveio represent person team; pick choose highlight others; meant present opinions individuals. exists solely announce important needs thrive together hive... new versions backed voters, decide approve run. go discuss contribute releases announcements? people building tools sharing discussion. we creating email mailing lists, newsletters, aggregate event listings, discords communities, space looking decentralized, won't don't make it! hivers stepped answer call.with increase diverse opinions, sometimes uncomfortable different than current reality) futures discussed debated. because now, tends front mind talking it. great! just remember tricky appreciate shared jumping off everyone, able in. part you're going see many people, bound agree with. your own, absolutely dive right in!it's hard let concern talked 'without you' ecosystems. three main fully development, debate, plans radar, realizes they exist yet! fostering great starts venues happens in.**if want talk support, challenge, suggest ecosystem, then [check out improvement community](https://hive.blog/created/hive-102930):**this mentioned but keep brought place feature governance, rewards economic conversations happening. late, discussions pool aspect would change, why become hot topic debated specifically weighing path future. conversation, wishes share them, forum developers, users, managers, stakeholders engage think guarantees hardforks- important, *public*, on-chain weigh each other, pitch they're coding matters.**if follow individual devs community](https://hive.blog/created/hive-139531):**developers condenser, frontends, games, projects, announcements community, interact built ecosystem. what, progress making, up-and-coming good start. directly developer yourself, whatever matters you, organize content.**and finally, actual written gitlab](https://gitlab.syncad.com/hive).**this lives. exactly suggesting submitted bring life, heart source. add take task submit report request, comments, can- [remember there's tutorial](https://hive.blog/hiveblockchain/@hiveio/core-development-on-hive) sure started gitlab. another trick activity feed](https://gitlab.syncad.com/groups/hive/-/activity) merged day!## road one, thanks ways small chance could officially on! 🐝 see: tentative set! mega"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "delegationOnboardBot - a new bot for managing delegation to referred accounts created with hiveonboarding",
      "category" : "news, python, bot",
      "url"      : "/news/python/bot/2020/08/19/delegationonboardbot-a-new-bot-for-managing-delegation-to-referred-accounts-created-with-hiveonboarding.html",
      "date"     : "2020-08-19 15:07:00 -0700",
      "desc"     : "The post [Bounty to Develop...",
      "content"  : "the post [bounty to develop delegation manager for hiveonboard](https://peakd.com/hive-101690/@sportstalksocial/bounty-to-develop-delegation-manager-for-hiveonboard) has inspired me a python based bot hiveonboard. source code can be found in https://github.com/holgern/delegationonboardbot![running bot](https://images.hive.blog/dqmvxtw5zhwnfq9wrclie1wsi1eoxyv6kmrzcpxqakwxwjs/running%20bot)## how does work?the receives list of all referred accounts by using api from then current rc level these is monitored, whenever it drops below threshold given.the given removed when one following conditions hold:* account gained sufficient hive power* period exceeds specific time duration (can disabled)* posts without setting beneficiaries referrer bad behavior was detected (managed mute muteaccount)the parameter that control are set config.json.a description config.json [readme](https://github.com/holgern/delegationonboardbot/blob/master/readme.md).### installing and running botdetailed instruction receiving created hiveonboard apithe part fetches have equal `peakd````import requestslimit = 20offset 0referreraccount peakdonboard_api https://hiveonboard.com/api/referrer/ + referreraccountlast_result []cnt 0result []while last_result not none len(last_result) == limit or cnt 0: += 1 r requests.get(onboard_api '?offset=%d' % (offset)) if r.ok: r.json()[items] &gt; result offset limit```## streaming blocks### checking new accountsthe streams now blocks created, checks this through case correct one, added list.```elif op[type] create_claimed_account: op[json_metadata] : continue meta_data json.loads(op[json_metadata]) meta_data: entry meta_data[beneficiaries]: entry[label] entry[name] self.config[referreraccount]: self.accounts[op[new_account_name]] {timestamp: none, weight: muted: false, rc: 0, hp: delegated_hp: delegation_timestamp: rc_comments: delegation_revoked: false} self.accounts[op[new_account_name]][weight] entry[weight] self.accounts[op[new_account_name]][timestamp] op[timestamp].replace(tzinfo=none) store_data(self.data_file, accounts, self.accounts)```### comment, vote, transfer custom_jsonwhenever broadcasting either custom_json operation, checked rc. able broadcast at least `minpostrc` posts, he will receive small delegation, apply:* no yet* revoked delegation* less owned hp than `maxuserhp` ```def check_account_on_activity(self, account, timestamp): self.accounts: return acc account(account, blockchain_instance=self.hive) self.accounts[account][rc] acc.get_rc_manabar()[current_mana] self.accounts[account][hp] acc.get_token_power(only_own_vests=true) self.accounts[account][rc_comments] / self.comment_rc_costs self.accounts) self.accounts[account][delegated_hp] self.accounts[account][delegation_revoked]: self.config[maxuserhp]: &lt; self.config[minpostrc]: ok self.add_delegation(account, timestamp) ok: self.notify_account(account, self.config[delegationmsg])```where `comment_rc_costs` defined as follows:```rc rc(blockchain_instance=self.hive)self.comment_rc_costs rc.comment(tx_size=4000, permlink_length=40, parent_permlink_length=0)```### correctly setwhenever post, set. they had received an revoked.```def check_beneficiaries(self, author, permlink): author self.accounts[author][delegated_hp] self.accounts[author][delegation_revoked]: self.config[beneficiaryremoval]: comment 0 while 10: try: comment(construct_authorperm(author, permlink), except: time.sleep(3) referrer_ok false bene comment[beneficiaries]: bene[account] self.config[referreraccount] bene[weight] self.accounts[author][weight]: true referrer_ok: self.remove_delegation(author) self.notify_account(author, self.config[delegationbeneficiarymsg])```### muted muteaccountwhenever `muteaccount` receveid revoked.## more checksit also reaches hp, case, removed.it possible certain `delegationlength`. set, delegations monitored age higher specified threshold, removed.the remaining power `delegationaccount` memo broadcasted.### storing loading statethe writes important state variables on every change into data container loads them startup. makes combination with systemd very robust. something goes wrong, restarted restored.## summarythe helps services which refering users managing manually now.the delegation/undelegation [hiveonboard](https://hiveonboard.com/). service who referring user, use automatic management. ___*if you like what i do, consider casting vote witness [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) [peakd](https://peakd.com/witnesses)* see: delegationonboardbot - hiveonboarding @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "ali-h",
      "title"    : "HiveBot - Easy &amp; real-time automation on top of Hive Blockchain",
      "category" : "howto, nodejs, bot",
      "url"      : "/howto/nodejs/bot/2020/08/18/hivebot-easy-real-time-automation-on-top-of-hive-blockchain.html",
      "date"     : "2020-08-18 13:12:21 -0700",
      "desc"     : "An open-source free library that provides real-time automation on top of Hive Blockchain with a very simple API",
      "content"  : "![hivebot_logo2.png](https://files.peakd.com/file/peakd-hive/ali-h/akz3rn6d-hive-bot_logo2.png)# hivebothivebot is an open-source free library that provides real-time automation on top of hive blockchain with a very simple api. it useful for the new comers who want to develop applications hive, can be easily used perform automated tasks without having go through node's mechanism and tricky api.this basically abstraction official javascript which somehow low-level api not easy newcomers platform.similar was published by @p0o about 3 years ago steem called `steem-bot` ([github repo](https://github.com/p0o/steem-bot)). although still works, hasn't been updated in long time its limited steem. this modified version able work hive's provide same more functionalities.# featuresit has most common operations included. at moment possible monitor these actions:- receiving deposits (for selected or all accounts)- posts comments accounts)every action above optionally trigger automatic response can:- send hbd- hive- upvote- downvote- comment/reply# installationnpm package available. you should fine use any supported node-js but feel report issue [here](https://github.com/alihassanah/hive-bot/issues):```shellnpm install hive-bot --save```then include your file:```javascriptconst { hivebot } = require('hive-bot');```# how use?it setup. instance, lets say just every deposit account `poloniex`, will start defining constructor:```javascriptconst bot hivebot({});// username keys (no need case):// const hivebot({username, postingkey, activekey});```after than we call function whenever our target (`poloniex`) receive deposits:```javascript// add one usersconst targetusers ['poloniex']// first param user 2nd handlerbot.ondeposit(targetusers, (data, responder) =&gt; console.log(data); // no responder since are monitoring each show message like from: 'ali-h', to: 'poloniex', amount: '358 hive', memo: 'gbh4hgv35ygv'}});```now after functions declared only have this:```javascript// keep openbot.start();```just as this, example many possibilities, may visit hivebot's [github repo](https://github.com/alihassanah/hive-bot) complete explanation examples.- depositing hbd from users [click here](https://github.com/alihassanah/hive-bot/blob/master/examples/depositnotify.js)- notifying deposit, comment &amp; post (without arguments) here](https://github.com/alihassanah/hive-bot/blob/master/examples/observingblockchain.js)- auto voting list here](https://github.com/alihassanah/hive-bot/blob/master/examples/voterbot.js)- change rpc node here](https://github.com/alihassanah/hive-bot/blob/master/examples/changenode.js)- error handling here](https://github.com/alihassanah/hive-bot/blob/master/examples/errorhandling.js)# further developmentthis under development i features planned implement soon, support communities, hive-engine tokens detecting commands mentions (like `@tipu curate!` `!trdo`) create curation dynamic bots. using semantic versioning so don't worry changes breaking bot. give feedback.# links[github repository](https://github.com/ali-h/hive-bot)[npm package](https://www.npmjs.com/package/hive-bot)[github profile](https://github.com/ali-h)[hive profile](https://hive.blog/@ali-h)[discord: ali h#7057](https://discord.com/app)`hive-bot@0.6.0` see: - @ali-h"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core development report #7",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/08/18/core-development-report-7.html",
      "date"     : "2020-08-18 09:53:06 -0700",
      "desc"     : "![image.png](https://files....",
      "content"  : "![image.png](https://files.peakd.com/file/peakd-hive/howo/xnepltfa-image.png)hi, we are nearing the release of new hard fork (tentatively targeting sept 8) (read more here: https://peakd.com/hive-139531/@blocktrades/weekly-update-on-hive-hf24). work i'm doing is mostly about testing and adding finishing touches.we recently closed two my open merge requests, one added tests to update proposal endpoint, another slow conversion hive dao. @blocktrades' team did some reviews on it, had a few iterations them pointing out issues me fixing them. but now they both merged, issue that i overlooked caused day delay in finished code because complete replay necessary make sure everything works. sorry that.you can see commits here :https://gitlab.syncad.com/hive/hive/-/commit/92feeec25928fefc1d2549dc2a0600e1287dc647and here:https://gitlab.syncad.com/hive/hive/-/commit/96254ae57c9e92cdf066e4ccd5deeed4ec9d964fso am done for 24, working final touches, so unless need something, turning focus towards 25. first changes while ago was rc delegation feature, which needs be updated since base changed lot will it future.to give you an idea, rebranding don't have any mentions steem feature before those, still has mentions. anyways that's all. guys at anyone remote zoom party ?@howo see: core development report #7 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "How to create transactions history tables with python for your tax report",
      "category" : "howto, python, reports",
      "url"      : "/howto/python/reports/2020/08/04/how-to-create-transactions-history-tables-with-python-for-your-tax-report.html",
      "date"     : "2020-08-04 14:05:54 -0700",
      "desc"     : "![](https://images.hive.blo...",
      "content"  : "![](https://images.hive.blog/dqmdvjbbhhlmsmmk5nfhwel97gbohwpeedta61spuz3x1fp/image)[source](https://pixabay.com/de/photos/audit-buchhaltung-finanzbuchhaltung-4190945/)i finally finished the scripts for storing transaction lists into an excel / csv file, which can then be imported [cointracking](https://cointracking.info/), [cryptotax](https://cryptotax.io/) or [koinly](https://app.koinly.io/) generating a tax/income report.you find at https://github.com/holgern/hive-reports. please create [issue](https://github.com/holgern/hive-reports/issues) in case of bug feature wish. ## how does workthere are two available each service:* cointracking * [liquid-hive-report.py](https://raw.githubusercontent.com/holgern/hive-reports/master/cointracking/liquid-hive-report.py) [staked-hive-report.py](https://raw.githubusercontent.com/holgern/hive-reports/master/cointracking/staked-hive-report.py)* cryptotax [liquid-hive-report.py](https://raw.githubusercontent.com/holgern/hive-reports/master/cryptotax/liquid-hive-report.py) [staked-hive-report.py](https://raw.githubusercontent.com/holgern/hive-reports/master/cryptotax/staked-hive-report.py)* koinly [liquid-hive-report.py](https://raw.githubusercontent.com/holgern/hive-reports/master/koinly/liquid-hive-report.py) [staked-hive-report.py](https://raw.githubusercontent.com/holgern/hive-reports/master/koinly/staked-hive-report.py)the liquid-hive-report script creates list regarding all movements to and from wallet. staked-hive-report staked token.let's check example where 100 hive have been powered up.the first will withdrawal, removed wallet balance, whereas second deposit entry about hive.powering up powering down same amount not taxable events. they handled as normal transfer between your virtual whenever more is it was previously, created newly added labeled staking rewards.i do distinguish author, curation, inflation witness rewards, i only care when rewards liquidated considered just rewards.assuming you earned another power through rewards. these stored blockchain vests.the time were matter tax calculation, moveable tradable. long stay up, sleeping. that point than down, event value attached received handle this by counting hive, sum getting negative (more up), add difference rewards.i'm consultant, so everything wrote may completely wrong take any responsibility.## forkonly transactions after block number 41818753 considered. i'm exact hive/hbd fork with amounts.the also counted hive.the deposits airdrop/fork depending on used service. cryptotax, needs done manually. hardfork withdrawal steem manually, order this.you see entries 55934.253 my steem_holger80_powered_up wallet,![handling hard cryptotax](https://images.hive.blog/dqmnqintp5heywjo1mhaze4avnax9surap2tergd1zsn1vg/handling%20the%20hard%20fork%20on%20cryptotax)i clarified fork:![](https://images.hive.blog/dqmdnu9737uorxq1dwnuumkv9hnap2nuuyxutqypjfg4ec8/image)i did hbd steem_holger80 wallet.## use scripts### liquid hive/hbdthe following parts modified:``` stm = hive(node=nodelist.get_hive_nodes()) # steem(node=nodelist.get_steem_nodes()) print(stm) account_name holger80 data_account_name hive_%s % symbol backed_symbol hive_fork_block has_fork true limit_to_year false current_year 2020 csv_filename koinly_%s_%d.csv (data_account_name, current_year)```* `account_name` - hive/steem account name* `symbol` steem* `backed_symbol` sbd* `has_fork` `limit_to_year` set true, separate year. has advantage, previous year remain untouched, something changed next report. remaining balance transferred end account.* `current_year` true### hivethe parameter script:``` hive_%s_powered_up 2020```## automatically classify transfersyou `clarification` names transfers:for incoming transfers:```if ops[from] [reward.app]: clarification stakingelse: ```you `elif ops[type] == transfer:` section.i consider some kind json configuration file this. without modification, every clarification.## running scriptyou need python packages:```pip3 install beem pandas```## koinlythe really great thing service free there no limit. pay want custom wallets:go https://app.koinly.io/wallets/new enter![creating new wallet](https://images.hive.blog/dqmz8we3xb5kw947kau478fikvz9wtdui1unzjnvvj82zbw/creating%20a%20new%20custom%20wallet)in step, drag generated import field.you wallet:![second wallet](https://images.hive.blog/dqmtwfrk3xboqhur6iwn7xpsuniujfnd8tm9mcebbu3p2dx/second%20custom%20wallet)where results script.## cryptotaxyou enter 50 transactions.you wallet, file.the both files here: https://app.cryptotax.io/import-manual## cointrackingyou 200 created. herehttps://cointracking.info/import/import_csv/only work.you delete newer version file.## conclusiondoing crypto fun takes lot time. think help lot, entering hand feasible. creating report complicated history api had returned twice. now.there edge cases script, e.g. escrow mining early beginning steem.let me know, if different layout. send template, quite easily.___*if like what do, casting vote [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) [peakd](https://peakd.com/witnesses)* see: tables @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core development report #6",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/07/26/core-development-report-6.html",
      "date"     : "2020-07-26 05:09:18 -0700",
      "desc"     : "![image.png](https://files....",
      "content"  : "![image.png](https://files.peakd.com/file/peakd-hive/howo/j4hxmkex-image.png)hi, welcome fore another development report, the past week has been quite eventful, i mostly worked on slow conversion to dhf: https://gitlab.syncad.com/hive/hive/-/merge_requests/2thanks some testing done by @gtg, we found out that there was a bug prevented replay (it configuration changed do forgot remove).then started working unit tests, due my changes, tests were now failing.some things previously forbidden like transferring hive dhf is possible, so needed update test cases and tell them chain won't reject transaction, that's intended. while at it added more around feature make sure transfer operation correctly converting hbd.then moved onto writing for actual conversion, doing noticed with code (that's one of reasons why write this good thing). which promptly fixed. finally wrote an final within pull request being not taking funds in into account when calculating debt ratio, as expected. lots these days, it's normal have entered freeze phase eclipse time where add any new functionalities instead focus stabilizing release completely bug-free push live network.that's all ! if you questions or remarks, feel free comments. see: core report #6 @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive core developper meeting #7",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/07/20/hive-core-developper-meeting-7.html",
      "date"     : "2020-07-20 08:51:06 -0700",
      "desc"     : "Meeting tl;dr: This has been a rather quick meeting, we mostly wanted to sync on the current testing status.",
      "content"  : "https://www.youtube.com/watch?v=6nuj1iycnp8# meeting tl;dr:this has been a rather quick meeting, we mostly wanted to sync on the current testing status.blocktrades' team is still hard work, they found few bugs in hivemind and are working it, but it will cause some delays, hope get testnet running 1 2 weeks. now feature freeze phase, which means no more features be added release. so most of work being put towards bugfixing.we had opportunity discuss ideas for future:- adding downvote power delegations- decay pretty much any hive operation (proxy, witness vote, proposal delegation etc)- reducing number daily votes blocktrades would like have another fork about 3 months, that's quite an aggressive timeline allow us ship lot tweaks what i call business logic kind wrote above, it's changes that do nothing technical side affect economy chain way interact with it.but doing this tweak mean smt next (as can definitely not them months) up air do, there things need poll community. expect from me or @blocktrades https://peakd.com/c/hive-102930 community.anyways, stuff discussed doesn't really fit as tl;dr feel free listen in. see: core developper #7 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "rishi556",
      "title"    : "My Scripts 4- Your Curation Reward In The Past 24 Hours",
      "category" : "howto, nodejs, reports",
      "url"      : "/howto/nodejs/reports/2020/07/17/my-scripts-4-your-curation-reward-in-the-past-24-hours.html",
      "date"     : "2020-07-17 23:27:54 -0700",
      "desc"     : "This script here is being u...",
      "content"  : "this script here is being used by a few bots, for different reasons. but if you want to know how much you've made in the last 24 hours curation rewards, can use following code. ```jslet hive = require('@hiveio/hive-js')var moment require(moment)var curation_transactions []getdaycurationreward(rishi556, (cb) =&gt; { console.log(cb)})function getdaycurationreward(account, callback) loadcuration(account, hive.api.getdynamicglobalproperties((err, properties) var total_vesting_shares properties.total_vesting_shares total_vesting_fund properties.total_vesting_fund_steem total 0 (i cb) += cb[i] } totalrewards hive.formatter.vesttohive(total, total_vesting_shares, total_vesting_fund) //since we have dealt with everything vests so far, need convert callback(totalrewards) }) })}function [] gettransactions(account, -1, callback)}function start, last_trans start con true hive.api.getaccounthistory(account, (start &lt; 0) ? 10000 : math.min(start, 10000), (err, result) //account, limit. limit cannot be greater than (err) console.log(err) settimeout(() last_trans, }, 1000 * 30) //with account history and public nodes, most likely reason error too many requests, set delay of 30 seconds it return result.reverse() //we get data back oldest events first, newest first work backwards. achieve that, reverse array trans result[i] transtime moment.utc(trans[1].timestamp).unix() now moment.utc().unix() ((now - &gt; 86400)) false break op trans[1].op (op[0] == 'curation_reward') //all reward operations are labeled as curation_reward curation_transactions.push(parsefloat(op[1].reward.split( ))) push all earned trans[0] //for going onto next time around (con) //due 10k, might call multiple times else callback(curation_transactions) })}```the base was from @yabapmatt's post promoter's delegator's fetching script, some modifications rewards rather current delegation accounts. also longer period times(including time) slight difference (86400 days) or removing that part its entirety adding check see end has been reached there's no more.#### scriptssend one othersauto send destinationwitness rank amount needed up see: my scripts 4- your past @rishi556"
    } ,
  
    
    
    
    
    
    {
      "author"    : "rishi556",
      "title"    : "My Scripts 3- Auto Sending From One Account To Multiple Others",
      "category" : "howto, nodejs, automation",
      "url"      : "/howto/nodejs/automation/2020/07/15/my-scripts-3-auto-sending-from-one-account-to-multiple-others.html",
      "date"     : "2020-07-15 20:25:21 -0700",
      "desc"     : "This script is one that sav...",
      "content"  : "this script is one that saves a lot of time for me, and i wrote it just yesterday. usually don't keep funds in my account, send them out to different accounts each with its own purpose. some get powered up. now can do by typing 4 letters into the terminal hitting enter.```js#! /usr/bin/env node//^ we need have on cli applicationslet hive = require(@hiveio/hive-js)let account rishi556 //who fromlet privateactivekey //private active keylet tokeep 0.005 //how much accountlet hiveaccounts {rishi556.cold : 0.25, giftgiver.wallet 0.25} //account:% as decimallet powerupaccounts {giftgiver rishi556.lambo decimalhive.api.getaccounts([account], (err, result) =&gt; { // array accounts. only let balance parsefloat(result[0].balance) - if (balance &lt; 0){ console.log(`not enough balance.`) return } (i hiveaccounts){ send(i, * hiveaccounts[i]).tofixeddown(3) + hive) powerupaccounts){ powerup(i, powerupaccounts[i]).tofixeddown(3) }})function send(reciever, amount){ hive.broadcast.transfer(privateactivekey, reciever, amount, memo, //wif, from, destination, memo (!err){ console.log(`sent ${amount} ${reciever}.`) })}function powerup(reciever, hive.broadcast.transfertovesting(privateactivekey, to, amount. powers up console.log(`powered })}//this does job tofixed, but rounds down alwaysnumber.prototype.tofixeddown function(digits) if(this == 0) 0; var n math.pow(10, -digits)/2; += / math.pow(2, 53); n.tofixed(digits)}```to make work application, add package.json file(index.js name file code's in, command want use) :```bin: send: index.js }```there's ways improve this, including checking ensure numbers 1 or below such, works. `hiveaccounts` liquid `powerupaccounts` power decided not include hbd normally covert hive. always, you any questions, comments are open i'll try help out.#### history scriptsauto from multiple destinationwitness rank amount needed see: scripts 3- auto sending others @rishi556"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core development report #5",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/07/15/core-development-report-5.html",
      "date"     : "2020-07-15 04:04:36 -0700",
      "desc"     : "![image.png](https://files....",
      "content"  : "![image.png](https://files.peakd.com/file/peakd-hive/howo/arvtsoci-image.png)hey guys!sorry for the lack of reports lately, with hf24 (codename: eclipse) drawing near, my workload has increased significantly, so i didn't have time to make reports, but here am !the bulk work been reading on what blocktrades' team doing, they did a monster commit where pretty much whole codebase changed (everything related steem was renamed hive)i also organized few dev meetings in which we discussed lot technical details, you can find them profile and there, latest edition is there: https://peakd.com/hive/@howo/hive-core-developper-meeting-6i started take notes during those summaries post, feel like not everyone wants listen through 45-60 minutes long don't understand everything.meanwhile worked ninja mine conversion feature, after making public debate get some public's thoughts how that process should take: https://peakd.com/hive-102930/@howo/public-debate-at-which-rate-should-the-non-airdropped-stake-be-converted-to-hbdi finished feature (netuoso it while ago) as wasn't ready sub 1% amounts. code daily instead hourly, required changes at chain level actions processor would trigger once per day. reason if want hourly there isn't really need happen every hour. tested thourougly various amount see worked. way debt ratio calculated include hbd inside dhf, behind doesn't sense funds are currently locked, be taken into account when liquid aka paid out people. this especially important because will an influx dhf convert mine.nowadays, apart from testing, working more renaming changes: https://gitlab.syncad.com/hive/hive/-/issues/61, basically files still sps linked it, do no want.that's about update, soon !@howo see: core development report #5 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "update for beem: add community support",
      "category" : "news, python, community",
      "url"      : "/news/python/community/2020/07/14/update-for-beem-add-community-support.html",
      "date"     : "2020-07-14 15:12:51 -0700",
      "desc"     : "## Repositoryhttps://github...",
      "content"  : "## repositoryhttps://github.com/holgern/beem![beem-logo](https://cdn.steemitimages.com/dqmcrrwlpsywsymierfp6um6mejemngjn9rxw7audjqtdgb/beem-logo)[beem](https://github.com/holgern/beem) is a python library and command line tool for hive. the current version 0.24.5.there also discord channel beem: https://discord.gg/4hm592vthe newest beem can be installed by:```pip install -u beem```check that you are using hive nodes. following ```beempy updatenodes --hive```updates nodelist uses only after setting as default_chain, `beempy updatenodes` used.the list of nodes checked with```beempy config```and```beempy currentnode```shows currently connected node.## changelog versions 0.24.5* replace percent_hive_dollars by percent_hbd (to make hf24 ready)* remove whaleshares related code * fix adding wif in beempy* steemconnect* set token hivesigner* add blurt* community reladed requests broadcasts* improve lookup beempy createpost* improved history output* stream supporti added support to beem. example shows content dict:```from beem.community import communityfrom prettytable prettytablecommunity = community(hive-139531)t prettytable([key, value])t.align lt._max_width {value : 60}for key community.json(): t.add_row([key, community.json()[key]])print(t)```returns```+-------------+--------------------------------------------------------------+| | value |+-------------+--------------------------------------------------------------+| id 1357761 || name hive-139531 title hivedevs about - developers working on projects. visit our at https://discord.gg/cvnbyhu lang en type_id 1 is_nsfw false subscribers 1005 sum_pending 638 num_pending 253 num_authors 120 created_at 2020-01-23 16:27:39 avatar_url context {} description flag_text settings team [['hive-139531', 'owner', ''], ['netuoso', 'admin', ['abit', 'mod', ['roadscape', ['acidyo', ['gtg', ['good-karma', 'founder esteem'], ['jesta', ['inertia', '#1138'], ['arcange', ['someguy123', ['mahdiyari', ['blocktrades', ['drakos', ['themarkymark', ['stoodkev', ['therealwolf', ['yabapmatt', ['eonwarped', ['emrebeyler', ['bobinson', ['asgarth', ['quochuy', 'witness'], ['crimsonclad', ['pharesim', '']] |+-------------+--------------------------------------------------------------+```the api functions have been implemented:```roles community.get_community_roles()print(len %d first entry: %s % (len(roles), str(roles[0])))subscribers community.get_subscribers()print(len (len(subscribers), str(subscribers[0])))last_activity community.get_activities(limit=100, last_id=none)print(len (len(last_activity), str(last_activity[0])))latest_post community.get_ranked_posts(limit=25)print(len (len(latest_post), str(latest_post[0])[:120]))```returns:```len 50 ['hive-139531', '']len 250 ['joshman', 'guest', none, '2020-07-14 16:16:15']len 100 {'id': 78159733, 'type': 'subscribe', 'score': 35, 'date': '2020-07-14t16:16:15', 'msg': '@joshman subscribed hivedevs', 'url': 'trending/hive-139531'}len 25 {'post_id': 83702748, 'author': 'netuoso', 'permlink': 'creation-of-steemdevs-community-information-about-steemdevs', 'c````get_subscribers()` returns it not possible receive all (`hive-139531` has total). way could parsing `get_activities`, there an entry each new subscriber.## communities`communities` registred communities. communities inside printed `printastable()` search match:```from communitiescommunities communities(limit=100)communities.search_title(dev).printastable()```returns```+-----+-------------+----------+------+-------------+-------------+-------------+-------------+| nr. |+-----+-------------+----------+------+-------------+-------------+-------------+-------------+| 1000 945 236 113 |+-----+-------------+----------+------+-------------+-------------+-------------+-------------+```the limit returned increased `limit` parameter:```from communities(limit=1000)communities.search_title(dev).printastable()```returns```+-----+-------------+---------------+------+-------------+-------------+-------------+-------------+| |+-----+-------------+---------------+------+-------------+-------------+-------------+-------------+| 2 hive-152825 devcoin 0 5 3 hive-199094 devotionals 4 hive-192808 kr-dev-center kr 20 hive-150008 game dev 12 6 hive-101482 beewiki.dev |+-----+-------------+---------------+------+-------------+-------------+-------------+-------------+```searching its was createpost`![](https://images.hive.blog/dqmuz5j5z4ov6axobxunqgybcdkdivhui5y8jj58mnvvkpy/image)currently searched top 1000.## broadcasting opsthe operation broadcasted:```from communitycommunity community(hive-111111)community.set_role(account_a, mod, mod)community.set_user_title(account_b, investor)community.mute_post(author_a, permlink_a, spam, mod_a)community.unmute_post(author_a, no mod_a)community.update_props(my community, great false, me, admin_a)community.subscribe(user_c)community.unsubscribe(user_c)community.pin_post(author_a, mod_a)community.unpin_post(author_a, mod_a)community.flag_post(author_a, please check, user_a)```## hivesigner / steemconnecti removed steemconnect class from beem, steemconnect.com longer working.i fixed parameter hivesigner:```from beem.hivesigner hivesignerhs hivesigner(token=[32...])print(hs.me())```where 32... valid hivesinger token.## stream```beempy -t -f```retuns now table block:```+----------+---------+-------------+------------------------------------------------------+| blocknum trx_num type |+----------+---------+-------------+------------------------------------------------------+| 45157440 custom_json sm_submit_team sm_find_match vote 100.00% @mattsanthonyit/uty6wgup4ul mattsanthonyit 7 8 9 10 11 13 14 scot_claim_token 15 5.00% @xr-hammergaming/52ktvx97870 innerhive 16 |+----------+---------+-------------+------------------------------------------------------+```where custom_json, vote, transfer transfer_to_vesting shortened output.```beempy -f```streams output raw format.## blurtas some users were interested blurt, i blurt this adds beempy.the commands will change nodes, check if they set```beempy --blurtbeempy config```it then amount powered up power down by```beempy holger80beempy powerdown -a holger80 33244```the ask your active keys. activity -t```you need patient, much activity...:```{'block_num': 306762, 'op': ['withdraw_vesting', {'account': 'oth1', 'vesting_shares': {'amount': '36699505048', 'nai': '@@000000037', 'timestamp': '2020-07-14t21:53:57', 'trx_num': 0}{'block_num': 306765, ['vote', {'author': 'discernente', '0alhcnfp0r7dh2t', 'voter': 'weight': 10000}], '2020-07-14t21:54:06', 0} ```you switch back with:```beempy --hive```the used simplify access blockchain:```from blurtblurt blurt(node= [https://rpc.blurt.world, https://blurt-rpc.steem.buzz])print(blurt)```returns```&lt;blurt node=https://rpc.blurt.world, nobroadcast=false&gt;```___*if like what do, consider casting me witness [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) or [peakd](https://peakd.com/witnesses)* see: update @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "rishi556",
      "title"    : "My Scripts 2- Auto Send From Multi To One Destination",
      "category" : "howto, nodejs, transfer",
      "url"      : "/howto/nodejs/transfer/2020/07/13/my-scripts-2-auto-send-from-multi-to-one-destination.html",
      "date"     : "2020-07-13 18:57:39 -0700",
      "desc"     : "I hope that someone ends up...",
      "content"  : "i hope that someone ends up finding some use out of the first post and others enjoy its in future as well. people them examples do old posts from utopian days made by way smarter than me.now let's go onto second script. have a lot accounts need to move funds my central account time time(some are delegating bots, other used storage for something, whatever case, they end having funds) doing it manually does take quite time. enter this ```jslet hive = require(@hiveio/hive-js)let {} // : activekeylet destination //recieving accountlet hivebalances //hive balances account, auto pulledlet hbdbalances //hbd pulledhive.api.getaccounts(object.keys(accounts), (err, response) =&gt; { //array with limit (i //response is an array data each user individually let response[i] if (data.balance != 0.000 hive) //balance hvie balance hivebalances[data.name] data.balance } (data.sbd_balance hbd) //i expect sbd_balances name change soon hbdbalances[data.name] data.sbd_balance send(hivebalances) send(hbdbalances)})function send(balances) hivebalances) hive.broadcast.transfer(accounts[i], i, destination, balances[i], memo, result) //wif, from, amount, memo }) }}```what gets all `accounts` then sends destination. because multiple transfers one allowed same block, shouldn't problem running both send hbd at exact always simplify life lot. did work get private active key order put into variable(remember be careful keys, can your balance) but after that, so much easier pull just launching script up, once. always, you any questions about this, leave comment i'll try best answer.#### history scriptswitness rank amount needed see: scripts 2- multi @rishi556"
    } ,
  
    
    
    
    
    
    {
      "author"    : "rishi556",
      "title"    : "My Scripts 1- Witness Rank And Amount Needed To Rank Up",
      "category" : "howto, nodejs, witness",
      "url"      : "/howto/nodejs/witness/2020/07/12/my-scripts-1-witness-rank-and-amount-needed-to-rank-up.html",
      "date"     : "2020-07-12 02:05:00 -0700",
      "desc"     : "So I've got a whole bunch o...",
      "content"  : "so i've got a whole bunch of little scripts that i use from time to time. some actually do things, others just return me data might be interested in looking at. decided it good idea share them, people(especially future me) have something refer the on how certain things. learned things and knowledge should shared. these not perfect, probably don't follow convention, even errors them(if you see anything can improved/is wrong, please point them out) but hopefully reference future. won't go over everything line by line(unless someone asks comments) will try explain basic logic behind it. if they need get updated remember, i'll update them.so let's start with first one, my witness rank amount needed up script wrote last night. this was written js is currently live repl.it at https://repl.it/@rishi556/hextech-hp-required-count#index.js or https://hextech-hp-required-count.rishi556.repl.run. ```jslet hive = require(@hiveio/hive-js)hive.api.getwitnessesbyvote(, 100, (err, result) =&gt; { // start, limit let 0 //how much stake vote person ahead us has we //our for (i rank++ (result[i].owner == hextech) parseint(result[i].votes) / 1000000 //we are dividing because returned omits decimal point. goes 6 places vests divide back right break } hive.api.getdynamicglobalproperties((err, properties) total_vesting_shares properties.total_vesting_shares total_vesting_fund properties.total_vesting_fund_steem //i assume its name changed soon total hive.formatter.vesttohive(last - us, total_vesting_shares, total_vesting_fund) //this built function convert hive. (the want convert, vesting shares as received properties, fund console.log(`current : ${rank}nrequired up: ${total.tofixed(3)} hp ${(last us).tofixed(6)} vests`) process.exit(0) })})```so gets top 100 witnesses(if your lower than that, you'd either change witness, increase limit), then uses value above calculate up(also formatted make life easier).and here's our result.![screen shot 20200712 3.53.03 am.png](https://files.peakd.com/file/peakd-hive/rishi556/2whxoho5-screen20shot202020-07-1220at203.53.0320am.png) see: 1- @rishi556"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive  core developper meeting #6",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/07/09/hive-core-developper-meeting-6.html",
      "date"     : "2020-07-09 17:02:06 -0700",
      "desc"     : "Hi, sorry for the delay, this meeting already happened two weeks ago (we will do another one shortly), we ran into some issues with the zoom recording.",
      "content"  : "hi, sorry for the delay, this meeting already happened two weeks ago (we will do another one shortly), we ran into some issues with zoom recording.https://www.youtube.com/watch?v=ynjtbqvvjce&amp;t=513s# tl;dr:libraries updates are still ongoing, needs more time. (now, hive-js, dhive, beem ready thanks @mahdiyari and @holger )on open mrs:- deprecate incoming delegation api as it goes against current efforts of making consensus nodes lightweight we'll use hivemind later on.- a public post to let people debate at which rate should convert steemit stake dhf (it's there : https://peakd.com/hive-102930/@howo/public-debate-at-which-rate-should-the-non-airdropped-stake-be-converted-to-hbd)- add in feature exclude hbd hdf from debt ratio hf24 done here: https://gitlab.syncad.com/hive/hive/-/merge_requests/2)- include conversion ninja mine next hard fork (also merge request above)full node blocktrades' team is nearly ready, need finishing touches on make sure everything works, expected be soon, by then testnet network witnesses run app developers test their apps eclipse (ideally most libraries ready)on vision, roadmap etc:this has been mostly about optimizations securing network, running an forum form hive improvements brainstorm community what steps. (@blocktrades shared his thoughts https://peakd.com/hive/@blocktrades/hive-s-future-as-a-2nd-layer-blockchain-network)## extra postin end even though were late, it's quite cool able look back say okay spoke this, here's concrete action behind perhaps following posts i'll review last during between each so you can follow progress along. see: core developper #6 @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "stoodkev",
      "title"    : "How to use HiveJs (or other modules referencing core Node.js modules) on React Native",
      "category" : "howto, nodejs, react",
      "url"      : "/howto/nodejs/react/2020/07/07/how-to-use-hivejs-or-other-modules-referencing-core-node-js-modules-on-react-native.html",
      "date"     : "2020-07-07 20:54:39 -0700",
      "desc"     : "![image.png](https://files....",
      "content"  : "![image.png](https://files.peakd.com/file/peakd-hive/stoodkev/c3s6phs5-image.png)as some of you may know, i am developing a hive keychain app for mobile using react native (rn). @revo asked me how managed to use related modules on rn.although rn uses javascript, npm won't work directly because they node.js core such as `assert` and `crypto`.it's bit tedious make it work, but truly hope see more application in our ecosystem, so i'm writing this tutorial hoping will be help.**babel the rescue!**we babel `rewrite-require` preset rewrite these or browserified packages instead. let's step by is working out new project.## 1 : create projecti assume already have your environment setup that we are making classic project (no expo) :```npx react-native init [projectname]```## 2 add hivejsrun ``` @hiveio/hive-js --save ```let's try out, app.js, following lines after imports :```import hivejs from '@hiveio/hive-js'(async function () { console.log(await hivejs.api.getaccountsasync(['stoodkev']));})();```try run bim! error!```error: error: unable resolve module `node_modules/@hiveio/hive-js/lib/auth/memo.js`: assert could not found within project.```that's has no idea what `crypto` are, since modules.## 3 configfind file, `babel.config.js`. note name might slightly different `.babelrc` `.babel-cli`.add existing config ```sourcemaps: true,plugins: [ 'rewrite-require', aliases: crypto: 'react-native-crypto', constants: 'constants-browserify', dns: 'node-libs-browser/mock/dns', domain: 'domain-browser', fs: 'node-libs-browser/mock/empty', http: 'stream-http', https: 'https-browserify', net: 'node-libs-browser/mock/net', os: 'os-browserify/browser', path: 'path-browserify', pbkdf2: 'react-native-pbkdf2-shim', querystring: 'querystring-es3', stream: 'stream-browserify', _stream_duplex: 'readable-stream/duplex', _stream_passthrough: 'readable-stream/passthrough', _stream_readable: 'readable-stream/readable', _stream_transform: 'readable-stream/transform', _stream_writable: 'readable-stream/writable', sys: 'util', timers: 'timers-browserify', tls: 'node-libs-browser/mock/tls', tty: 'tty-browserify', vm: 'vm-browserify', zlib: 'browserify-zlib', }, throwfornonstringliteral: true, ], ],```install dependencies ```npm babel-plugin-rewrite-require events react-native-crypto stream react-native-randombytes vm-browserify process```also manually dependency `package.json` then `npm install` :```react-native-pbkdf2-shim: git+https://git@github.com/wswoodruff/react-native-pbkdf2-shim.git```## 4 globalsif code now should error ```exceptionsmanager.js:76 buffer supported environment. browserify browser support.```create `global.js` file root ```// inject node globals into global scope.global.buffer = require('buffer').buffer;global.process require('process');global.process.env.node_env __dev__ ? 'development' 'production';// needed 'stream-http' chooses right default protocol.global.location protocol: 'file:',};// don't do production. you're going want patch in// https://github.com/mvayngrib/react-native-randombytes similar.global.crypto getrandomvalues(bytearray) (let 0; &lt; bytearray.length; i++) bytearray[i] math.floor(256 * math.random()); } },};```and import `app.js` './global.js'```## 5: voila!hivejs my account info debugger. if still getting errors, cleaning :```rm -rf node_modules &amp;&amp; install npx jetify```i uploaded [my code](https://github.com/stoodkev/react-native-hivejs-example/tree/master) github reference, help future devs ;)if questions encounter issues, hesitate ask comment section.hive on! ---@stoodkevhive poif find valuable, please consider voting [witness](https://hivesigner.com/sign/account-witness-vote?witness=stoodkev&amp;approve=1) see: (or other referencing modules) @stoodkev"
    } ,
  
    
    
    
    
    
    {
      "author"    : "good-karma",
      "title"    : "Imagehoster + Hivesigner and Condenser bounty",
      "category" : "news, nodejs, hivesigner, imagehoster",
      "url"      : "/news/nodejs/hivesigner/imagehoster/2020/07/07/imagehoster-hivesigner-and-condenser-bounty.html",
      "date"     : "2020-07-07 09:03:48 -0700",
      "desc"     : "Hello everyone,Earlier in [...",
      "content"  : "hello everyone,earlier in [hivesigner updates](/hive/@good-karma/hivesigner-ongoing-development-and-improvement), i mentioned that [integrating hivesigner into hive.blog](https://gitlab.syncad.com/hive/condenser/-/issues/43) would be huge steps for giving similar user experience across hive applications.one of the first were to solve imagehoster issue or rather expand it allow image uploads if logged via hivesigner.![](https://images.ecency.com/p/y2ixprrknsnseh3nul6kubitjtxrc5k2vbtzbsegeence)## + hivesignerimagehoster works by signing file with user's private key and then use signature upload file. on server side, is verified content accepted/stored.hivesigner being oauth2 slightly different, so we couldn't sign before uploading because don't have access keys. but each application has `accesstoken` issued permission. [i just created merge request imagehoster](https://gitlab.syncad.com/hive/imagehoster/-/merge_requests/1) which uses verifying application, account image.once accepted @blocktrades team, can start working next step [condenser integration](https://gitlab.syncad.com/hive/condenser/-/issues/43). ## condenser bountyif you are familiar source code: https://gitlab.syncad.com/hive/condenser, here a challenge programming task get hand how works, earn extra reward while learning.announcing bounty integrating hive.blog wallet.hive.blog.**bounty prize: 1000 hbd**related issue: https://gitlab.syncad.com/hive/condenser/-/issues/43integration examples started: esteem/ecency [desktop](https://github.com/esteemapp/esteem-surfer/blob/master/app/helpers/sc.js) [mobile](https://github.com/esteemapp/esteem-mobile/blob/development/src/providers/steem/steemconnect.js) apps, as well https://demo.hivesigner.com.if anyone interested adding prize pool, please feel free reach out leave comment.# on!## support hivesigner- [read details proposal](https://esteem.app/hive/@good-karma/hivesigner-ongoing-development-and-improvement)- [vote proposal using hivesigner](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b88%5d&amp;approve=true)- peakd: https://peakd.com/proposals/88- hiveblog wallet: https://wallet.hive.blog/proposals- discord: https://discord.gg/pnjn7wh see: @good-karma"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hivebuzz",
      "title"    : "Introducing the HiveBuzz API for applications and websites",
      "category" : "news, devops, api, hivebuzz, engagement",
      "url"      : "/news/devops/api/hivebuzz/engagement/2020/07/07/api.html",
      "date"     : "2020-07-07 07:38:03 -0700",
      "desc"     : "Introducing our new public API to help developers integrate HiveBuzz badges into their apps and websites",
      "content"  : "![](https://i.imgur.com/4qjwayd.png)several developers have recently contacted us to ask if it is possible integrate hivebuzz badges with their websites or applications.this why we set up an api server that will allow them easily obtain information relating users' badges. the free use. however, be aware call rate throttled avoid exhausting resources.## how use api?### endpointhttp://hivebuzz.me/api### /badges/{username}/||||-|-||method|get||description|retrieve list of all for a user, including those were not collected by user||example|https://hivebuzz.me/api/badges/arcange|returns array objects following properties||||-|-||`type`|badge type _(activity, perso, meetup)_||`id`|identifier||`name`|short name||`title`|name badge displayed on board||`description`|description in description modal window when you click badge||`description_title`|title top window||`group`|group identifier used group affinity||`url`|url badge|sample response:```js[ ..., { type: id: 38, name: birthday-3, title: 3 years hive blockchain, description: congratulations! joined blockchain three ago!, description_title: group: p01, url: https://hivebuzz.me/badges/birthday-3.png }, meetup, 43, steemfest-4, steemfest 4 attendee, went bangkok attend steemfest⁴, m01, https://hivebuzz.me/badges/steemfest-4.s4.png ...]```### /owners/{id}/||||-|-||method|get||description|query owner badge||example| https://hivebuzz.me/api/owners/43|returns strings (usernames)sample response:`[achimmertens,arcange,brittandjosie,charly.travels,coolsurfer,detlev,fynemiene,louis88,martibis,pundito,rollie1212,sunsea]`### displaying user level badgedisplaying quite easy and doesn't require any api. can simply build url image using format:**`https://hivebuzz.me/{username}/level.png`**example: `https://hivebuzz.me/@arcange/level.png`hivebuzz update automatically whenever user's changes (up down) becomes inactive.### supportif need help your website application hivebuzz, feel contact [discord](https://discord.gg/j6jrabj).**the team**---hivebuzz needs help! **read support [our proposal](https://peakd.com/me/proposals/109)!**---_hivebuzz project created @arcange_ see: introducing applications @hivebuzz"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "hiveengine - NFT support has been added",
      "category" : "news, python, hive-engine, nft",
      "url"      : "/news/python/hive-engine/nft/2020/07/04/hiveengine-nft-support-has-been-added.html",
      "date"     : "2020-07-04 15:35:12 -0700",
      "desc"     : "## Repositoryhttps://github...",
      "content"  : "## repositoryhttps://github.com/holgern/hiveengine![](https://images.hive.blog/dqmcbvjrsw6fy2xqrfe9yn6v6xbkp9glgjg7g4jwuvhw2xu/image)## hiveengine[hiveengine](https://github.com/holgern/hiveengine) is a python library for working with [hive-engine.com](https://hive-engine.com/) tokens and nfts.i released version 0.2.1 which can be installed by```pip install hiveengine```hiveengine using [beem](https://github.com/holgern/beem) broadcasting transfers custom_json to the hive blockchain. hiveengine only when nodes. you check currently set nodes with```beem config```hive updatenodes --hive```## changelog### 0.2.1* fix nft_id list in nftbuy, nftcancel, nftchangeprice nftsell### 0.2.0* add nft support has been added (collection, nft, nftmarket, nfts)* related commands cli nftchangeprice, nftlist, nftopen, nftparams, nftsell, nftsellbook, nfttrades)## command line toolnft 0.2.0. following have added.### collection```usage: collection [options] account [symbol]... return an account```for example:```hiveengine holger80 city```which returns```nft: city+-------+---------------+---------------------------------------------------------------------+| _id | lockedtokens properties |+-------+---------------+---------------------------------------------------------------------+| 12659 {'sim': '20'} {'name': 'basic home', 'population': 4, 'income': 1, 'type': '1st'} |+-------+---------------+---------------------------------------------------------------------+```### nftbuy```usage: nftbuy symbol [nft_ids]... buy nfts from marketoptions: -a, --account text this (defaults default_account) -m, --market_account market will receive fee nftmarket) -y, --yes answer yes all questions```the any except seller. fees, token was successfully bought.hiveengine default value @nftmarket, created by me. i decide later what do received token. figure it out buyer are connected, @nftmarket would share 50% of fees (the excluded transfer history).setting used send alt account:```hiveengine -a -m my_alt star 100```in case, 100 tokens. ### nftcancel```usage: nftcancel cancel sell orderoptions: questions```this open order:```hiveengine 7147```which asks me proceed:```canceling selling nfts:+-------+-----------------+----------------------------------------------------------------+| nftid previousaccount |+-------+-----------------+----------------------------------------------------------------+| 7147 {'type': 'fanboost1', 'class': 'fanboost', 'stats': '1,0,0,0'} |+-------+-----------------+----------------------------------------------------------------+continue [y/n]?```### nftchangeprice```usage: newprice changes price my order 1160 starbits:```hiveengine 1160```### nftlist```hiveengine nftlist```returns existing nfts:```+----+---------+-----------------------------+| id name |+----+---------+-----------------------------+| 1 city dcity || 2 critter mischievous crypto critters 3 rising game 4 music 5 api 6 nftsr showroom |+----+---------+-----------------------------+```### nftopen```usage: nftopen returns interest book given symboloptions: -g, --grouping grouping parameter, or parameter.value -v, --value property value, parameter -s, --price-symbol limit symbol```this orders each type.```hiveengine -g -v basic home city```would one specific type:```+-------------+---------------------------------------+-------+| pricesymbol count |+-------------+---------------------------------------+-------+| sim ''} 0 beer swap.hive swap.steem starbits leo 344 1194 weed stem |+-------------+---------------------------------------+-------+```### nftparams```hiveengine nftparams```returns creating nfts:```+-------------------------+----------------------------------+| key |+-------------------------+----------------------------------+| nftcreationfee nftissuancefee {'bee': '0.001', 'pal': '0.001'} datapropertycreationfee enabledelegationfee 1000 |+-------------------------+----------------------------------+```### nftsell```usage: nftsell price_symbol create on (uses beem not set) -f, --fee integer 500 -&gt; 5% 500) creates new 1150 starbits```and then if worked by:```hiveengine nftsellbook type fanboost1 -l star```### nftsellbook```usage: -n, --nft-id -l, --limit shown entries```it possible returned property:```hiveengine -s 10 city```will cheapest offers sold tokens:```+--------+------------+------------+---------+-------------+--------+-----------+| est. |+--------+------------+------------+---------+-------------+--------+-----------+| 191946 lestrange 329.000 2.50 % 1.704 191944 191941 191936 191902 194596 bobawondua 330.000 1.709 194587 194584 194582 194581 |+--------+------------+------------+---------+-------------+--------+-----------+```i estimated order. result table sorted price. allows offer best calculated last api.### nfttrades```usage: nfttrades [symbol] trades historyoptions: default_account)```this shows symbol.___*if like do, consider casting vote as witness [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) [peakd](https://peakd.com/witnesses)* see: - @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "good-karma",
      "title"    : "Hivesigner UI simplified, 0.2.0 release",
      "category" : "news, hivesigner",
      "url"      : "/news/hivesigner/2020/06/12/hivesigner-ui-simplified-0-2-0-release.html",
      "date"     : "2020-06-12 00:51:36 -0700",
      "desc"     : "",
      "content"  : "hivesigner user interface got simplified. here is the summary of new 0.2.0 release.![hivesigner](https://images.esteem.app/p/y2ixprrknsnseh3nul6kubitjtxrc5k2vbtzbsegeence)# what's in hivesignerhivesigner ui full enhancements you will appreciate everyday, especially dapp developers love how simplified authenticating a user. login screens make even more productive and less confusing. just start using, or unlock no multiple clicks confusing breadcrumbs. - pages- saved users screen- oauth2 redirect improved, single page login/approve- removed electron/desktop app dependencies- fix ci builds- add cd for staging production- accounts added into footer, keystore replaced with to avoid confusions- other navigation changes improvements- browser extension update submitted chrome store.we now have environment improved continuous integration deployment, as well stability service. status hive api pages help get started.home: https://hivesigner.comstaging: https://staging.hivesigner.comstatus: https://status.hivesigner.comhive api: https://hive.hivesigner.com## on! 🛡️ #### support proposal[vote proposal](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b88%5d&amp;approve=true)hivedao: https://hivedao.com/proposal/88peakd: https://peakd.com/proposals/88hiveblog wallet: https://wallet.hive.blog/proposalsdiscord: https://discord.gg/pnjn7wh[github roadmap thread](https://github.com/ledgerconnect/hivesigner/issues/2) see: simplified, release by @good-karma"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive developpers bi-weekly meetings #4 and #5 with a tl;dr ! ",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/06/09/hive-developpers-bi-weekly-meetings-4-and-5.html",
      "date"     : "2020-06-09 04:25:54 -0700",
      "desc"     : "Hi, yesterway was bi-weekly meeting #5, so I figured I would link it along with #4 and provide a tl;dr for both of them.",
      "content"  : "hi, yesterway was bi-weekly meeting #5, so i figured would link it along with #4 and provide a tl;dr for both of them.# dev 4:agenda tl;dr: - syncit's better if you listen to this one, there is lot stuff- allow users change the proposal title https://gitlab.syncad.com/hive/hive/-/issues/45- consider increasing creation cost by 1hbd each day lasts over 10 days https://gitlab.syncad.com/hive/hive/-/issues/44basically it's on that we decided be good idea have update_proposal operation new fee structure. referral system at chain level https://gitlab.syncad.com/hive/hive/-/issues/43regarding system, thought could cool implement similar bitshares, but need more discussion how exactly should do it, add buyback etc.- linking than one permlink per https://gitlab.syncad.com/hive/hive/-/issues/41we didn't think necessary, adds burden when just main post list posts top- hard fork 24 convert steemit stake hdfwe idea- node status page hive.io ?technically already implemented few services already, try get them no longer remove expired proposals instead filtering api https://gitlab.syncad.com/hive/hive/-/issues/48better solved via hivemind hive.https://youtu.be/-0x7ubflyak# 5: agenda * syncsame, in. basically, i've been working structure blocktrade's team has optimizing prepping testnet.* 60 feedback https://peakd.com/hive-139531/@howo/some-extra-changes-are-being-bundled-into-hf24-regarding-the-proposal-system-we-want-your-opinion-on-itwe discussed bit other solutions proposed in post, end best ship as update later necessary.* discuss controversial changes, poll community ideas, mostly [hive improvement community](https://peakd.com/c/hive-102930/created) or [gitlab](https://gitlab.syncad.com/hive/hive/-/issues) technical things. controversial, we'll make two community.* object issue fix https://gitlab.syncad.com/hive/hive/-/issues/53in end, edge case fine is, because super rare it'll happen, worst front thing rather blockchain issue.* support custom keys? https://gitlab.syncad.com/hive/hive/-/issues/49this interesting, were throwing ideas around, having keys too much apps manage. done changing give authority where don't use your active key want voting able posting key, witness authority, then using an key.* downvote mana delegation same, discussion, suggest wasn't really conclusion.* increase max vote changes https://gitlab.syncad.com/hive/hive/-/issues/40why not, find out why limit put first place before acting.* @imwatsi asking i'm interested know can involved hivemind, jussi hive-python. are any priority issues tackle?the stuff changed, work probably cause code conflicts (all names changed from steem hive instance), kind preventing outside help bit. after hf24 will open lots tasks tackled volunteers.also had some leaving easy (not them) tag contributors people learn core subject tasks. https://youtu.be/uaxqb5swlysfyi, those streamed hiveio youtube account, next 22th june 5pm cet. tune ask questions :) finally, please my development here https://hivedao.com/proposals/97 co-manage @steempress see: developpers meetings #5 ! @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "Hive Hardfork 24: Resources for Node Operators and Developers",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/06/08/hardfork-24-resources-for-node-operators-and-developers.html",
      "date"     : "2020-06-08 23:00:51 -0700",
      "desc"     : "Info for devs and node operators to prepare for a smooth hardfork deployment",
      "content"  : "![#hivefork ... an awesome digital asset, provided by community member @elgeko](https://files.peakd.com/file/peakd-hive/hiveio/xfg9agyh-7ohp4gdmgpru6ktuuw27tq6en5jyhcvexl6faj1rujuw3nuljf8ndi8hyatt3nrng1mppzitt4u4fzf5jr5wdppfzb1k3sx51tol.jpg)in the [last post](https://peakd.com/hiveblockchain/@hiveio/hive-hardfork-24-upcoming-release-candidate-testnet-other-info), we discussed some of coming features for hive's first coded hardfork, and important aspects around choosing a hardfork date. to follow up prepare ecosystem smoothest possible deployment, next step is start coordinating people who run nodes or develop on hive. while goal build strong decentralized blockchain global community, still need work together get there! if you're end user content creator, you don't take any action following information. (feel free along, skip this post entirely.) ### i'm node operator (witness, rpc, seed, private node). where will i be able find release candidate code?the code tagged ***this week*** main repository at https://gitlab.syncad.com/hive, with separate tags for:- **hived:** core software hive blockchainhttps://gitlab.syncad.com/hive/hive- **hivemind:** consensus interpretation layer which maintains state social provides more flexibility developershttps://gitlab.syncad.com/hive/hivemind### developer, project owner, dapp creator. what do ready 24?one most crucial parts chain id change. libraries have been updated are so make sure that correct versions ensure things go smoothly. these include:- **hive-js:** https://gitlab.syncad.com/hive/hive-js- **dhive:** https://gitlab.syncad.com/hive/dhive- **hive-python:** https://gitlab.syncad.com/hive/hive-python- **beem:** https://gitlab.syncad.com/hive/beem- **lighthive:** https://github.com/emre/lighthive/if would like test your specifically against change, there very limited scope testnet available. designed single purpose: every hour, it resets hf23, after 30 minutes forks new hf24 id. **do not** use not want to, **not** full featured api testnet: *this solely prepared change.*- **chain change information:** https://gitlab.syncad.com/hive/hive/-/issues/36### about other, testnets?after tagged, continually running spun up. help participate, please keep eye repos [hivedevs community](https://peakd.com/c/hive-139531/trending), dev meeting recaps posted. @hiveio account creating pinning hivedevs feed containing future development schedule. once week, coordination can begin specific testing tasks.#### 24 includes lot foundational existing better, but also prepares growth.to begin, won't tasks day users aren't savvy, doesn't mean role play! frontends may decide their own interfaces call testers, all transactions happening in real time used populate testnets accurate data. otherwise, you've thinking ways improve features, governance, projects ecosystem, consider helping discussion [hive improvements community](https://hive.blog/trending/hive-102930) - place set aside members create on-chain conversations what's needed development.### out updates week!🐝 see: 24: resources operators developers"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core development report #4",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/06/07/core-development-report-4.html",
      "date"     : "2020-06-07 12:12:21 -0700",
      "desc"     : "![image.png](https://files....",
      "content"  : "![image.png](https://files.peakd.com/file/peakd-hive/howo/ckaffjgz-image.png)hi ! this one will be relatively short, remember how i wrote a new operation to update proposals and updated the way proposal fees were calculated ? well didn't write unit tests (although tested them extensively) at time. is now done: https://gitlab.syncad.com/hive/hive/-/merge_requests/52this was part of issue: https://gitlab.syncad.com/hive/hive/-/issues/51the idea behind mostly prevent regressions, regressions happens when features somehow affect another feature. by running we can tell if things are behaving correctly (this not silver bullet though, it's many ways testing software).if you want learn more about tests: http://softwaretestingfundamentals.com/unit-testing/and while doing those noticed bug in original implementation filed an issue, tackle it later on: https://gitlab.syncad.com/hive/hive/-/issues/53it's really bug, edge case doesn't have any serious consequences. but should handled before someone actually runs into that see: core development report #4 @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "Hive Hardfork 24: Upcoming Release Candidate, Testnet, and Other Info",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/06/04/hive-hardfork-24-upcoming-release-candidate-testnet-other-info.html",
      "date"     : "2020-06-04 12:10:09 -0700",
      "desc"     : "Details to come about release candidate, testnet, potential timing, and a brief overview of what's included in HF24.",
      "content"  : "![social_hive_letstalkhardfork.jpg](https://files.peakd.com/file/peakd-hive/hiveio/zrs1i5b9-social_hive_lets-talk-hard-fork.jpg)### the hardfork that created hive blockchain was coded by contributors from community.in past few months, we've seen hive's ecosystem grow to include a wealth of community members contributing open source core code and beyond. it's been an exciting time watch people stepping up help bring life! there are increasing number devs working on making better every day. if you'd like learn more about code, how contribute, or even just comment what's happening, please check out [core development post](https://peakd.com/hiveblockchain/@hiveio/core-development-on-hive) for walkthrough. we're fast approaching being ready first hardfork, than twenty developers who have contributed library changes this version.with said, work addresses lot areas aren't super flashy necessarily very easy follow along with, you know where in repos look. get everyone speed impending here's some information release candidate, testnet creation, what potential timing will look like, overview included hf24.## is candidate? when can we expect hf24?when software developed, eventually set upgrades chosen be final version next release. still steps take make sure correctly covers off everything it needs to! as **release candidate**, stable, go, no further done unless problem found. frozen (which means new features stop added version) enters period thoroughly tested. why called candidate: long significant bugs found during wider testing, run everyone. ### @hiveio account post with details candidate hf24 monday, june 8th.while *more* trying break it! 💪 everyone's invited (and encouraged!) jump talk little involved at any level- whether you're end user, project manager, node operator, developer.as testing progresses, we'll bit accurate frame actual date. things smooth big right away, then exchanges notified date could early two three weeks later. should come immediately really heavy vetting done, closer four five away. giving feedback, faster move! part choosing sufficient amount notice exchange teams so they prepare their nodes support upgrade. important give them advance window assist need wallet maintenance downtime minimal. ## sort hf24? do?the most parts involve easier everywhere use network. many personally documenting progress. here quick layman's biggest change:- **changing id.** - existing frontends dapps migrate quickly easily, chain id not changed creation. however, improving secure access going forward, now preparation projects joining ecosystem.- **30 day cooldown newly powered hp governance voting.** system made both witness voting dhf voting. additional funds up, weight count towards following 30 days. adds healthy buffer malicious coordinated takeover attempt which allows chance respond, yet reasonable safeguard prevent attacks via stored without impacting way.- **a huge preliminary running easier.** simplified statement *a ton* portions code. one restrictive growing has cost, resources needed, difficulty infrastructure blockchain. meant helping decentralize seed nodes, witnesses, rpc harder do be. needed longer times direct hive. projects, dapps, want build hard started because can't afford own public options limited. while sounds technical, translates directly into poor experience users investors too. easier, faster, affordable decentralization, level diversity **correct incorrectly excluded airdrop recipients supported proposal list corrections [previous post](https://peakd.com/hiveblockchain/@hiveio/community-discussion-updates-hive-airdrop-exclusion-core-developer-meetings). also, group *as whole* were voted **against** included, individual proposals airdropped block hardfork.### keep eye space post, spread info @hiveio, developed community, 🐝 see: 24: upcoming testnet, other"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core development report #3",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/05/28/core-development-report-3.html",
      "date"     : "2020-05-28 10:19:15 -0700",
      "desc"     : "![image.png](https://files....",
      "content"  : "![image.png](https://files.peakd.com/file/peakd-hive/howo/7qo9o077-image.png)hi, this week i worked on the proposal update operation and adapting current create to change fee structure (10 hbd first 60 days then 1 extra per day). created in core blockchain code, also updated cli_wallet utility make use of that new operation. since code is scheduled wanted get it out as fast possible so skipped unit tests for now it's an easy endpoint test but i'll do them later avoid having regressions (https://gitlab.syncad.com/hive/hive/-/issues/51)if you're interested you can see here: https://gitlab.syncad.com/hive/hive/-/merge_requests/48that has been merged hf24.so far we went with same parameters really liked fredrikaa's idea might more changes on.and easily like so: (assuming built a local testnet latest 0.24.0) ```create_account initminer howo truetransfer_to_vesting 10000.000 truepost_comment tag title body truetransfer 2500.000 tbd truecreate_proposal 2020-05-22t03:00:00 2020-05-28t04:00:00 200.000 cool vote me truefind_proposals [0]the above should output: [{ id: 0, proposal_id: creator: howo, receiver: start_date: 2020-05-21t03:00:00, end_date: 2021-05-21t03:00:00, daily_pay: tbd, subject: me, permlink: test, total_votes: 0 }]update_proposal 100.000 [0]should proposal, }]get_account_history 1000``` see: development report #3 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "How to fix canonical URLs and links in your pre-fork posts",
      "category" : "howto, beem, python, content",
      "url"      : "/howto/beem/python/content/2020/05/23/how-to-fix-canonical-urls-and-links-in-your-pre-fork-posts.html",
      "date"     : "2020-05-23 07:20:12 -0700",
      "desc"     : "As you can see here, I have...",
      "content"  : "as you can see here, i have some links in my blogs written before the hive-fork pointing to steemit.com. it's time replace them all.![steemit link blog](https://images.hive.blog/dqmfdpnhj9kxeqo2zxnsakapbfb4svfqwxlyuedeuniqd3e/steemit%20link%20in%20my%20blog)almost all blog posts fork are with apps that not included [hivescript](https://www.npmjs.com/package/@hivechain/hivescript) and lead problems canonical urls:as it be seen old post [update for beem: first release hf 21](https://peakd.com/beem/@holger80/update-for-beem-first-release-for-hf-21) result different urls on front-ends. this is then handled duplicated content by search engines.the was through palnet. there no entry palnet [hivescript](https://www.npmjs.com/package/@hivechain/hivescript), front-ends know how build a proper url:![wrong url](https://images.hive.blog/dqmxe1t2qwjtizzvxdpg89gvnxyyaorfu6tjj5lrnxkejss/wrong%20canonical%20url)# fixing messfixing means:* replacing steemit, steempeak, ... relative links* setting `canonical_url` each 2020-03-20, fix urls.### small updatethe script uses now links, when found steemit.com ..., will replaced link. looks like: `[holger80](/@holger80)` `[this post](/hive-139531/@holger80/how-to-fix-canonical-urls-and-links-in-your-pre-fork-posts)`### update 2there three boolean parameters, which used set following:* `replace_steemit_links`: true, replaced* `use_relative_links`: (starting `/`)* `add_canonical_url`: canonical_url added metadata### 3it possible use same steem fork.when want steem:* `target_blockchain = steem`when hive:* hive`### python codethe following using beem do exactly this.beem installed by```pip install beem```or```conda beem```store `fix_canonical_urls_hive.py`:```#!/usr/bin/pythonfrom import hive, steemfrom beem.utils addtzinfofrom beem.account accountfrom beem.comment commentfrom beem.nodelist nodelistimport timefrom datetime datetimeimport getpassif __name__ == __main__: # parameter https://hive.blog replace_steemit_links true use_relative_links add_canonical_url target_blockchain hive or ---- at least one option must assert [hive, steem] url end / if canonical_url[-1] /: canonical_url[:-1] nodelist nodelist() nodelist.update_nodes() test_run_answer input(do test run? [y/n]) [y, y, yes]: test_run print(doing run %s! % target_blockchain) else: false test_run: hive: blockchain_instance= hive(node=nodelist.get_hive_nodes()) steem(node=https://api.steemit.com) wif getpass.getpass(prompt='enter your posting key %s.' blockchain_instance hive(node=nodelist.get_hive_nodes(), keys=[wif]) steem(node=https://api.steemit.com, blockchain_instance.is_hive blockchain_instance.is_steem account input(account name =) account(account, blockchain_instance=blockchain_instance) add_canonical_url: print(start %s (target_blockchain, account[name])) replace_steemit_links: steemit apps_with_cannonical_url [hiveblog, peakd, esteem, steempress, actifit, travelfeed, 3speak, steemstem, leofinance, clicktrackprofit, dtube] hive_fork_date addtzinfo(datetime(2020, 3, 20, 14, 0, 0)) blog_count 0 expected_count 100 while - 100: account.get_blog_entries(start_entry_id=blog_count, raw_data=false): += 1 blog[parent_author] != : continue blog[author] account[name]: blog.json_metadata blog.json_metadata[canonical_url]: app blog.json_metadata[app].split(/)[0] blog[created] &gt; hive_fork_date: body blog.body blog.json_metadata: blog.json_metadata[links] none blog.json_metadata[links]: steempeak.com busy.org partiko.app link: authorperm link.split(@) acc new_link len(authorperm) 1: authorperm[1] authorperm.find(/) -1: try: account(authorperm, use_relative_links: /@ + acc[name] except: comment(authorperm, post.category post.authorperm range(len(links)): links[i] body.replace(link, new_link) print(replace (link, new_link)) json_metadata {} json_metadata[links] json_metadata[canonical_url] blog[category] blog[permlink] print(edit nr %d canonical_url=%s (blog_count, json_metadata[canonical_url])) print(---) blog.edit(body, meta=json_metadata, replace=true) print(skipping due error blog.authorperm) time.sleep(6) ```you start with:```python fix_canonical_urls_hive.py```if linux, should `pip` `pip3` `python` `python3`.## does workthe goes 2020-03-14. whenever an app, properly new set.you define preferred front-end here:```canonical_url https://hive.blog```if like other front-ends, line by* `canonical_url https://peakd.com`* https://leofinance.io`* https://esteem.app`in next step, checked. valid user, releative (when steemit.com, steempeak.com, partiko.app).## runyou checking what changed script:![test_run](https://images.hive.blog/dqmzht6kjmnjkbgebgwyxdgbpj4dsccykdqwzn6ppwd4ado/test_run)this show information:![test result](https://images.hive.blog/dqmwe3jdvzbyjauzmahjffnscwyuz6ybhzonbbsbtpf5gdx/test%20result)the shown well replaced.## postswe posts:![starting script](https://images.hive.blog/dqmdafjfkxsaammc8wg5vesfwrgqpjwrr2gpxysjtveaxkh/starting%20the%20script)## resultsall changes been broadcasted:![broadcasted posts](https://images.hive.blog/dqmnq6jkn9cr5mdkbmsecl8ncqrvh7ktkprtnxtu75k4pz4/broadcasted%20posts)the corrected, here:![](https://images.hive.blog/dqmufvmj9vw84zh1aa2v4pfskhsjlsardukwbo62kpxnnfa/image)there seems bug hive.blog, internal hive.blog external links.the also fixed:![canonical urls](https://images.hive.blog/dqmvjxuvchytfas2p6c9i4wj43sijumjcib2gwke8dn5rms/canonical%20urls)it esteem.app has its right now. read (works steempress), may correct later.after esteem.app, url:![canonical from esteem.app](https://images.hive.blog/dqmcbapv3teuczt5wmxuamybeyz4hdtebag5nv6kq2hghhj/canonical%20url%20from%20esteem.app)## results steemsetting works steemit:![canonical steemit](https://images.hive.blog/dqmshxp35w4arxfryjedsdwnuvkv1zebksorgbgcjtqrqbc/canonical%20url%20on%20steemit)i [seoreviewtools](https://www.seoreviewtools.com/canonical-url-location-checker/) check urls.___*if do, consider casting vote me witness [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) [peakd](https://peakd.com/witnesses)* see: pre-fork @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core development report #2: Rc delegations are ready for review",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/05/17/core-development-report-2-rc-delegations-are-ready-for-review.html",
      "date"     : "2020-05-17 16:40:51 -0700",
      "desc"     : "![](https://i.imgur.com/5T4...",
      "content"  : "![](https://i.imgur.com/5t4rdig.png)hi, as i said last week, those updates will almost always be super short, this is a good example.this week spent bit of time gathering first list who get an airdrop https://gitlab.syncad.com/hive/hive/-/merge_requests/46 but worked on rc delegations again, did some extra testing, to update the old unit tests and added more. finally felt that it was ready. so here : https://gitlab.syncad.com/hive/hive/-/merge_requests/45/diffsso what's next for feature ? have created pull request with appropriate tag notify other core devs now ready peer tested reviewed. assume they send me feedback, perhaps find bugs didn't notice fix things. we'll do few iterations like this. then run proper testnet mirror main net transactions see how behaves in wild. make fixes if needs be.i am planning submit hf25, there no rush.now need write documentation feature, comments sure everything up date, provide examples js python use new devs. focus won't bit, hard fork 24 very near most my attention towards reviewing finishing up. see: development report #2: are review by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "crokkon",
      "title"    : "Hive Tools/Libs on a Raspberry Pi 4",
      "category" : "tools, beem, python, raspberrypi",
      "url"      : "/tools/beem/python/raspberrypi/2020/05/17/hive-tools-libs-on-a-raspberry-pi-4.html",
      "date"     : "2020-05-17 04:26:51 -0700",
      "desc"     : "![raspberrypi4_hive.png](ht...",
      "content"  : "![raspberrypi4_hive.png](https://files.peakd.com/file/peakd-hive/crokkon/r5c88oir-raspberrypi4_hive.png)raspberry pi 4b, image source: https://www.raspberrypi.org/, modified with the hive logoi recently bought a raspberry 4 and finally found time to set it up:* raspbian* python development environment via `virtualenv` using * [beem](https://github.com/holgern/beem) [lighthive](https://github.com/emre/lighthive) numpy, matplotlib, ... whatever is needed* remote access from anywhere an ssh server as tor hidden servicei added heatsinks ics because they came case, not necessarily were necessary. in fact i haven't tested without, so can't really tell. fan was included well, but didn't install isnt' necessary far. cpu reports around 50 degc. compared rpi3 had before, i'm excited by performance! here's comparison of (wall) takes sign same transaction 200 times on rpi4:![pi3.png](https://files.peakd.com/file/peakd-hive/crokkon/dumo7iys-pi3.png)![pi4.png](https://files.peakd.com/file/peakd-hive/crokkon/avy1vjsq-pi4.png)| device | mean (s) median || --- 3 0.3398 0.3811 0.1839 0.1969 |now that's basically factor 2 difference! test script identical, both idle use `secp256k1` for signing. sure why there are multiple peaks differences apart each other. does signing algorithm randomly multiples rounds? worth look into - at later :)main point here: #### rpi4 typically two faster than its predecessor makes decent platform hive-related tools scripts!for moment, runs following things me:* @curx steem* account creation token claiming autovoter my main hive* some tribe-related helpers scriptsboth beem lighthive work like charm! anyone else pi's steem/hive? what do you them? see: tools/libs @crokkon"
    } ,
  
    
    
    
    
    
    {
      "author"    : "quochuy",
      "title"    : "Beta Hive Ledger web interface",
      "category" : "howto, nodejs, wallet",
      "url"      : "/howto/nodejs/wallet/2020/05/14/beta-hive-ledger-web-interface.html",
      "date"     : "2020-05-14 23:38:33 -0700",
      "desc"     : "![Beta Hive Ledger web app]...",
      "content"  : "![beta hive ledger web app](https://images.hive.blog/dqmcfyrwvu8sawuhqvg1axd2xcaxmrmopqfswornh66k2bh/ledger-hive.jpg)i've updated my beta interface for @netuoso app the hardware wallet. it now allows you to select key up 10 accounts and will use keychain add your selected public into account auths.## lets learn a little bit more about blockchainon blockchain, contains set of roles (owner, active, posting memo keys). this blockchain verify when dapps are signing transactions with one private keys.for each role, store multiple keys verification. what are:1. different keys2. allow another user do things on behalf without sharing own keysthe case #2 is happens peakd schedule post in future or steem auto follow trail via hivesigner. those two don't have but they can still behalf. hivesigner give them permission adding their list authorised users.with #1, it's very similar instead granting account, key. useful project because means i extract tell that i'm perform activities alternatively, could also replace existing if loose both main device, backup recovery words, won't be able access anymore. current from device. then write down piece paper would keep somewhere safe. anything devices always retrieve paper.## interface![beta app](https://images.hive.blog/dqmcfyrwvu8sawuhqvg1axd2xcaxmrmopqfswornh66k2bh/ledger-hive.jpg)so [the interface](https://tools.hivean.com/ledger.html), ask connect device launch [hive app](https://hive.blog/hive-139531/@netuoso/hive-application-for-the-ledger-nano-s-x-hardware-wallet). presented form some basic actions: keys, sending hive/hbd user.### generate lot accounts. manage all alt hive. beta, i've restricted only.each sets keys. usually start #1 ever need change next set.each composed owner key, active only never leave which why much safer share anyone any dapp.### permissions keysonce number, number display its confirm by matching displayed upon confirmation, present button role. action performed @keychain browser extension.there strategies keys:- 4 although not yet fully supported- just post, comments upvotes.- want financial transactions- actions done other including exclusive key![active authority granted](https://images.hive.blog/dqmnxmdnzb3zia6xi5ftruueb6d363ae8rhjxc3jnsuscmc/screen%20shot%202020-05-14%20at%2011.32.29%20pm.jpg)### making transfer using sign transactiononce added (or both) authorise hbd assets account.![making interface](https://images.hive.blog/dqmcpm8pixon5pu2gpqzttmqqjgcc7xzbrrz4yfnabb7rmg/screen%20shot%202020-05-15%20at%204.27.51%20pm.jpg)once you've filled click `send`, details show fields: from, to, amount, currency memo. please note accepts symbols sbd actually map respectively. hardfork behaviour.![confirming nano s](https://images.hive.blog/dqmxqycpbm8ky1366qidsglhi5k2fcwdiccczkn7d42anww/img_5581.jpg)once confirmed approved receive crypto signature submit signed request (hive used here) response. wait few minutes double check transaction has been recorded block explorer such as https://hiveblocks.com![ledger successful](https://images.hive.blog/dqmr8ght9e7d2mb1jlachjt5bj9lrfjhtyf2n4lgvtsmofs/screen%20shot%202020-05-15%20at%204.33.10%20pm.jpg)## related links- interface: https://tools.hivean.com/ledger.html- instructions installing device: https://hive.blog/hive-139531/@netuoso/hive-application-for-the-ledger-nano-s-x-hardware-wallet- apps beem python library: https://peakd.com/hive-139531/@holger80/update-for-beem-support-for-ledger-nano-sx-has-been-added## open sourcemy release source, however, library working communicate usb soon get code ready.---**vote witness**[![support @quochuy witness.jpg](https://images.hive.blog/dqmecytzemy8swu6rrg7awhpnrbsehup7ivk9rgyzsuupvw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1)on hive, witnesses playing important role providing performant safe network us. power choose 30 trusty package blocks go blockchain. [vote me hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;approve=1) support work community. see:"
    } ,
  
    
    
    
    
    
    {
      "author"    : "netuoso",
      "title"    : "Example of using the Ledger Nano S with Beem",
      "category" : "howto, beem, python, wallet",
      "url"      : "/howto/beem/python/wallet/2020/05/12/example-of-using-the-ledger-nano-s-with-beem.html",
      "date"     : "2020-05-12 19:46:45 -0700",
      "desc"     : "Example of using the Ledger Nano S with Beem",
      "content"  : "# example of using the ledger nano s with beem![hive ledger](https://files.peakd.com/file/peakd-hive/netuoso/qo0crk3m-hiveledgerbanenr.png)---earlier today, @holger80 announced release beem v0.23.8 which has support for signing transactions via hive application on s. you can find that post here: https://peakd.com/hive-139531/@holger80/update-for-beem-support-for-ledger-nano-sx-has-been-addedthis will give a quick demonstration `cli_wallet` to configure your account be able use signing.## first thing's first, install beem- `pip -u beem`## getting new public keythe step configuring is get key from device.- `beempy listkeys````+-------------------------------------------------------+| available 48'/13'/0'/0'/0' |+-------------------------------------------------------+| stm8szg3gbcuaekz9xgkvmnwjhweshcxfywdbrcsbcz322dh6jpwy |+-------------------------------------------------------+```you see `path` `48'/13'/0'/0'/0'`. now we are going ignore reason specific path and just proceed it as default path. result relates shown above; changing path, changes key.### accountnow have obtained `cli_wallet`. this guide assume already knowledge installing imported account's owner private already.next, let's `get_account` method list our current keys. here sample output my @nettybot account:``` name: nettybot, owner: { weight_threshold: 1, account_auths: [], key_auths: [[ stm5ndussdruiqjb6inok3krhfbgfxmpsf5f4wdts5qbad7bv11du, 1 ] }, active: stm8szg3gbcuaekz9xgkvmnwjhweshcxfywdbrcsbcz322dh6jpwy, posting: stm7pczisjxklcp5keqlwdsop7akrfbbzagrrpjsxnt4pyiq3nulb, memo_key: stm5qqy3f2byahsuyw5pkr2fafrhdfb6t9jm8mvzffprknvzfyflb,```with out way, `update_account` command. check help command:```this updates keys an existing account.parameters: accountname: name (type: string) json_meta: json metadata associated public_key_type) active posting memo: memo broadcast: true if wish broadcast transaction bool)```now information put everything together.`update_account nettybot stm7pczisjxklcp5keqlwdsop7akrfbbzagrrpjsxnt4pyiq3nulb stm5qqy3f2byahsuyw5pkr2fafrhdfb6t9jm8mvzffprknvzfyflbtrue`the above command set @nettybot's got `listkeys`. *(note: in i am setting same key. optimal security, should different each but since test account, single both)*.after running command, again by once more.``` stm5qqy3f2byahsuyw5pkr2fafrhdfb6t9jm8mvzffprknvzfyflb,```success .. protected inside there very little risk me ever having these stolen or lost. breaks, backup words initialize generate exact again.hopefully noticed means **always keep recovery phrase offline**.### + ledgeralright, configured proper setup, perform operations blockchain.- want vote post?`beempy upvote -w 100 -a @netuoso/example-of-using-the-ledger-nano-s-with-beem`- witness?`beempy approvewitness netuoso`- delegate some hp?`beempy 1000.000 send tokens?`beempy transfer netuoso tip :)`---that's pretty idea no need import because all stored hardware wallet. absolute most secure way possible execute blockchain.beem growing badass dev so sure tell him thanks making integration awesome. soon hopefully even keychain integrations.by vessel also around corner. stay tuned more options become available.### @netuoso witness well! see:"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "update for beem: support for Ledger Nano (S/X) has been added",
      "category" : "howto, beem, python, wallet",
      "url"      : "/howto/beem/python/wallet/2020/05/12/update-for-beem-support-for-ledger-nano-sx-has-been-added.html",
      "date"     : "2020-05-12 12:23:15 -0700",
      "desc"     : "## Repositoryhttps://github...",
      "content"  : "## repositoryhttps://github.com/holgern/beem![beem-logo](https://cdn.steemitimages.com/dqmcrrwlpsywsymierfp6um6mejemngjn9rxw7audjqtdgb/beem-logo)[beem](https://github.com/holgern/beem) is a python library and command line tool for hive. the current version 0.23.7.there also discord channel beem: https://discord.gg/4hm592vthe newest beem can be installed by:```pip install -u beem```if you want to use ledger nano, then need also:```pip ledgerblue```check that are using hive nodes. following ```beempy updatenodes --hive```updates nodelist uses only after setting as default_chain, `beempy updatenodes` used.the list of nodes checked with```beempy config```and```beempy currentnode```shows currently connected node.## changelog versions 0.23.7* fix update_account_jsonmetadata add posting_json_metadata property account* nano s support* beempy activates signing* listkeys shows pubkey from ledger* listaccounts searches accounts have derived attached keygen creates lists used newaccount changekeys* new option use_ledger path hive* allow role selection in keygen## 0.23.6* --key key_list.json command` set keys without wallet.## signingbeem/beepy first library/application supports signing operation with s/x hardware wallet. it [hive wallet application s/x](https://peakd.com/hive-139531/@netuoso/hive-application-for-the-ledger-nano-s-x-hardware-wallet) @netuoso.uploading app x not yet possible.you your nano. download [ledger-hive-app](https://github.com/netuoso/ledger-app-hive) by @netuoso.please read readme on how ledger.when sucessfully could ledger, select enter `open application`.you ledgerblue```pip ledgerblue```you test if everything works listkeys```the `-u` or `--use-ledger` parameter support all commands.if see```ledgerblue.commexception.commexception: exception : invalid status 6d00 (unexpected state device: verify right opened?)```your setup correct. see```+-------------------------------------------------------+| available key 48'/13'/0'/0'/0' |+-------------------------------------------------------+| stm... | +-------------------------------------------------------+```everything up.## changing keysyou change public provides before signing. possible owner key.as private will leave wallet, cannot put them into keychain peakd before. sign operations apps ledger. when lose recovery phrase, ability role. e.g. changed key, lost account anymore.in (lack other apps), i recommend key.## paththe pubkeys provided given path.a consists ```48'/13'/role number'/account index'/key sequence'```the number 0 owner, 1 active, 4 posting 3 memo.you assign an index account. starting plan second account, increase this index. starts each whenever keys, sequence index.### active keyit recommended memo (no encryption yet), maximum setup. means at moment (when more change):* broadcasted beem/beempy* voting, transferring mobile device possible* usage peakd, hive.blog voting any operation* hive-engine dapp longer usedat first, three needs obtained ledger:```beempy --account --role owner,active,posting```this paths: * ` 48'/13'/0'/3'/0'`* 48'/13'/1'/3'/0'`* 48'/13'/4'/3'/0'`you save json easier by:```beempy owner,active,posting --export-pub beembot.json```in both cases asked approve shown nano.we now changekeys --import-pub beembot.json beembot```## keythis involves key.* beem/beempy. hive/hbd needing key* dapps custom_json signed used.```beempy owner,active account_pubkeys.json```you `--account`.changing done changekeys` above.## changes key. still managed until supported mobile, most likely use-case now.* beem/beempy```beempy above.you may default path. `--account 2`, set```beempy default_path 48'/13'/0'/2'/0'```whenever -u`, signing.## checking was successfullythe checks somewhere `getaccountfrompublickey` class. listaccounts```returns then```+---------+---------+-------------------------------------------------------+------------------+| name type |+---------+---------+-------------------------------------------------------+------------------+| beembot stm7uyxcqjszqoropkozidmb3xhsvfnlblj9twsvsd4zc7yhsdgo5 48'/13'/0'/3'/0' || stm7a1bcn9anx7f2dkzgekbvrfbcht9exx42sskd4jicjw82vqtac 48'/13'/1'/3'/0' stm7cvhexk2fteakwe1u7sd2w6h6h3a6uj28ors37rxce5evp5fji 48'/13'/4'/3'/0' |+---------+---------+-------------------------------------------------------+------------------+```## pathas we &gt; 0, must moment, one stored default_path.```beempy 48'/13'/0'/3'/0'```we transactions transaction `--path`.you check which returned actually `default_path` info stm...```## transactionswe set.```beempy transfer -a holger80 0.001 ledger```this `48'/13'/0'/3'/0'`.we same trx `48'/13'/1'/3'/0'`:```beempy --path ledger```## building python```from import hivefrom beem.transactionbuilder transactionbuilderfrom beembase operationshive = hive(use_ledger=true, path=48'/13'/1'/3'/0')tx transactionbuilder(blockchain_instance=hive)transfer_dict {from: 'beembot', to: 'holger80', amount: '0.001 hive', memo: 'test ledger'}op operations.transfer(**transfer_dict)tx.appendops(op)tx.sign()tx.broadcast()```it predefined broadcast function```from beem.account accounthive path=48'/13'/1'/3'/0')account account(beembot, blockchain_instance=hive)account.transfer(holger80, 0.001, hive, ledger)```sending four transfers had worked:![](https://images.hive.blog/dqmqp4epeqsc67hw44vav7zyphujjjgjrcryaek4gcpr576/image)i everytime op validate every field.## advantages keyletting has some advantages:* entering reviewed broadcasting* accidentally pasted* my easily create ledger.* protected against pishing hacking.i just take good care words.## roadmapfor next release, work multisigning signer (at ledger). also, better handling needed. set. something like storing depending roles database would useful. parallel storage paths nice.___*if what do, consider casting vote me witness [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) [peakd](https://peakd.com/witnesses)* see: update (s/x) been added @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "netuoso",
      "title"    : "Hive Application for the Ledger Nano S/X Hardware Wallet",
      "category" : "howto, nano, python, wallet",
      "url"      : "/howto/nano/python/wallet/2020/05/10/hive-application-for-the-ledger-nano-s-x-hardware-wallet.html",
      "date"     : "2020-05-10 20:46:24 -0700",
      "desc"     : "# Hive Application for the ...",
      "content"  : "# hive application for the ledger nano s/x hardware wallet![image credit @thepeakstudio](https://files.peakd.com/file/peakd-hive/netuoso/7awm0dda-image.png)---#### wallet framework s/xwhen installed on a device, this will deserialize transactions and display them secure validation by user. if user accepts transaction, then sign transaction with key specified user.there is pre-compiled binary available in `bin/` folder attached to each public github release. however, you may optionally choose compile manually help of run.sh script provided repository. usage instructions examples are below..## latest stable release`https://github.com/netuoso/ledger-app-hive/releases/tag/v1.0.0`## building development version- clone repository - `git https://github.com/netuoso/ledger-app-hive`- install docker not already `./run.sh install_docker`- pull ledger-app-hive image update`- start container start`- build version` replace version `1.4`,`1.5`,`1.6` based your s firmware## loading app s- *you must use python 3.7 loading*- connect computer- module `pip ledgerblue`- load onto testing application- navigate test directory `cd test`- run `getpublickey.py` **python3 required** `python getpublickey.py`- `signtransaction.py` **python2.7 signtransaction.py`## example output- getpublickey:![](https://imgur.com/ptkjcek.gif)```public compressed 03d3ead6a886a5896dd05f546704761228c14d6b8d306fa7b0945f75df678b6193calculated from key: address stm8szg3gbcuaekz9xgkvmnwjhweshcxfywdbrcsbcz322dh6jpwyreceived ledger: stm8szg3gbcuaekz9xgkvmnwjhweshcxfywdbrcsbcz322dh6jpwy```- signtransaction:![](https://imgur.com/48o5qhz.gif)```hid =&gt; d40400007205800000308000000d8000000080000000800000000420000000000000000000000000000000000000000000000000000000000000000004021b88040485342c6304048164b85e040101042302086e65747479626f74076e6574756f736f010000000000000003535445454d000000040100hid &lt;= 1f636611993e469a3ad201fbe40df36e8c2be55378a3ca338654f3844d80ce2d6d32a27448c4e5d5e63707f1b9164b42e8cf29f052ae72bd12609182c9d8c88c3890001f636611993e469a3ad201fbe40df36e8c2be55378a3ca338654f3844d80ce2d6d32a27448c4e5d5e63707f1b9164b42e8cf29f052ae72bd12609182c9d8c88c38```## technical spec- [ledger-app-hive documentation](https://github.com/netuoso/ledger-app-hive/blob/master/doc/hiveapp.asc)## contributingif interested contributing repository, need account. ensure that have compiled application, it s/x, and/or throughly read readme visited relevant links before filing an issue.## bug reportsif encounter issue while using visit [issues pages](https://github.com/netuoso/ledger-app-hive/issues) leave detailed all necessary information assist debugging.---## notes- its initial release (v1.0.0)- there be bugs i encountered- device ever locks up, just unplug restart it- bugs/issues file repository- try break report benefit everyone- contact @netuoso hive, [hivedevs discord](https://discord.gg/cvnbyhu), or twitter ([@netuoso](https://twitter.com/netuoso))- thanks @thepeakstudio @doze their contribution + assets used page---## vote witness- https://peakd.com/me/witnesses- https://wallet.hive.blog/~witnesses---## links- https://github.com/netuoso/ledger-app-hive- https://www.ledger.com/- https://twitter.com/netuoso![image @doze](https://files.peakd.com/file/peakd-hive/netuoso/hzlfn4gx-image.png) see:"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Core development report #1",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/05/09/core-development-report-1.html",
      "date"     : "2020-05-09 11:13:15 -0700",
      "desc"     : "![image.png](https://files....",
      "content"  : "![image.png](https://files.peakd.com/file/peakd-hive/howo/hc23np8u-image.png)hi, first of all thank you to everyone who voted on my proposal, it's very humbling see so much support from stakeholders. i initially wanted make a post every two three weeks as mentioned initial the reason for such length between each update is that sometimes we work big features (like rc delegations) and weekly updates would be almost one liners technical talk yep did x/y/z still working it, stuck this bug because code works strangely z. figured it was not worth it.but when talking with @neoxian he told me &gt; know what? even simple week saying yep, i'm x confidence booster.so will try do what am doing. warned though, these posts also most likely quite short.so delegations, have taken bunch feedback last https://peakd.com/rc/@howo/rc-delegations-current-development-status-and-request-for-feedbacki removed some limitations slots allow user set delegator 1,2 3. should help use cases where before if steem created your account, only @steem account could delegate change slot. changed keep same property (aka letting outside people it) but added possibility himself. previously there thing allowed top (ranked 1) witness changing recover slot, which useful mined accounts recovery slot effectively dead (since slot). those accounts. now can himself, feature since don't think really serves purpose anymore. pool multiple slots, served zero caused calculations fail. logic delegation. good news in place modifications delegation operation hide complexity devs. delegating had say delegate, no longer needed. that's bit more straightforward.i made javascript test suite, progress. share time double documentation devs how new system. want too early making changes api parameters. took opportunity edge cases, done yet starting look solid. coming days proper suite actual chain things quickly means run whenever release whole stable. speaking testing, hf24 freeze upon us, need automated tests then, well short term. # questions ? suggestions ask them below !please consider voting core development proposal here https://hivedao.com/proposals/97i managing @steempress free vote appreciated :) see: report #1 by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "inertia",
      "title"    : "Ruby Client for Hive: hive-ruby-1.0.0.pre.1",
      "category" : "tools, ruby",
      "url"      : "/tools/ruby/2020/05/07/ruby-client-for-hive-hive-ruby-1-0-0-pre-1.html",
      "date"     : "2020-05-07 01:16:18 -0700",
      "desc"     : "The hive-ruby gem was written from the ground.",
      "content"  : "# [`hive-ruby`](https://gitlab.syncad.com/hive/hive-ruby)hive-ruby the ruby api for hive blockchain.## `radiator` vs. `hive-ruby`the `hive-ruby` gem was written from ground up by `@inertia`, who is also author of [`radiator`](https://github.com/inertia186/radiator).&gt; i intend to continue work on indefinitely. but in `radiator-0.5`, refactor so that uses as its core. this means some features like serialization will become redundant. think it's still useful radiator do own because it reduces number requests. - @inertia`radiator` | `hive-ruby`---------- ------------has internal failover logic can have delegated externallypasses `error` responses caller handles and raises exceptionssupports tx signing, does supports delegates `database_api.get_transaction_hex`, then deserializes verifyall apis methods are hardcoded asks `jsonrpc` what available node(`radiator-0.4.x`) only appbase relies `condenser_api` not rely **(wip)**small list helper select ops (in addition build your transaction) complete implementation every op transaction)does (yet) support `json-rpc-batch` requests requests## getting startedthe hive-ruby compatible with 2.2.5 or later.### install project*(assuming [ruby installed](https://www.ruby-lang.org/en/downloads/) computer, well [rubygems](http://rubygems.org/pages/download))*to run shell:```bashgem hive-ruby```... add code:```rubyrequire 'hive'```to a dependency project [bundler](http://bundler.io/), you line gemfile:```rubygem 'hive-ruby', require: 'hive'```## examples### broadcast vote```rubyparams = { voter: voter, author: author, permlink: permlink, weight: weight}hive::broadcast.vote(wif: wif, params: params) |result| puts resultend```### streamingthe value passed block an object, keys: `:type` `:value`.```rubystream hive::stream.newstream.operations |op| #{op.type}: #{op.value}end```to start stream specific number, pass argument:```rubystream hive::stream.newstream.operations(at_block_num: 9001) #{op.value}end```you grab related transaction id each operation:```rubystream |op, trx_id, block_num| #{block_num} :: #{trx_id} certain operations:```rubystream hive::stream.newstream.operations(types: :vote_operation) #{op.value}end```or array [:comment_operation, :vote_operation]) (optionally) just operation(s) want arguments. semantic sugar when types take all defaults.```rubystream hive::stream.newstream.operations(:vote_operation) include virtual hive::stream.newstream.operations(include_virtual: true) #{op.value}end```### multisigyou use multisignature operation.```rubyparams [wif1, wif2], resultend```in signing multiple `wif` private keys, possible export partially signed completed someone else.```rubybuilder hive::transactionbuilder.new(wif: wif1)builder.put(vote: weight})trx builder.sign.to_jsonfile.open('trx.json', 'w') |f| f.write(trx)end```then send contents `trx.json` other party they privately sign transaction.```rubytrx open('trx.json').readbuilder wif2, trx: trx)api hive::condenserapi.newtrx builder.transactionapi.broadcast_transaction_synchronous(trx)```### get accounts```rubyapi hive::databaseapi.newapi.find_accounts(accounts: ['hiveio', 'alice']) result.accountsend```### reputation formatter```rubyrep hive::formatter.reputation(account.reputation)puts rep```### tests* clone client repository into directory choice: * `git https://gitlab.syncad.com/hive/hive-ruby.git`* navigate new folder `cd hive-ruby`* tests be invoked follows: `bundle exec rake test`* `static` tests: test:static`* `broadcast` (broadcast simulated, `verify` actually used): test:broadcast`* `threads` (which quickly verifies thread safety): test:threads`* `testnet` actual broadcasts) `test_node=https://testnet-api.openhive.network bundle test:testnet`you part above `test` execution:* `block_range`, which streams blocks (using `json-rpc-batch`) stream:block_range`if point any node tests, instead letting test suite pick default, set environment variable `test_node`, e.g.:```bash$ test_node=https://testnet-api.openhive.network test```## contributionspatches welcome! contributors listed `hive-ruby.gemspec` file. please (`rake test`) before opening pull request make sure passing them. if would contribute, don't know on, check issues list.## issueswhen find issues, report them!## licensemit see: hive: hive-ruby-1.0.0.pre.1 @inertia"
    } ,
  
    
    
    
    
    
    {
      "author"    : "howo",
      "title"    : "Hive core dev meeting #3 recording (and #1 and #2 I&#39;m late sorry)",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/05/04/hive-core-dev-meeting-3-recording-and-1-and-2-i-m-late-sorry.html",
      "date"     : "2020-05-04 11:36:24 -0700",
      "desc"     : "Hi, Every two weeks, I organize a the core dev meeting so the team can sync and discuss ongoing issues.",
      "content"  : "hi, every two weeks, i organize a the core dev meeting so team can sync and discuss ongoing issues. think it's very important to get together now then when everyone is working in decentralized manner. guess should have made posts first times but wasn't sure if publish them here or ask for it be published @hiveio. anyways, better we keep @hiveio announcements instead of this kind things. you missed them: ## #1:meeting points:- update on what has been doing (on subjects, work apps not focus)- discussion workflow using blocktrade's post baseline read https://hive.blog/hive/@blocktrades/hive-workflow-proposal- roles: devs, who review what, deploy etc...- regular scheduled deployments? automated/manual?- how do prioritize issues dealt with first?- git branching strategy? maybe staging branch that gets automatically deployed website upon new merge.core blockchain: - scope hard fork 24- rc delegation- rpcs, account history nodes, get_transaction op improvements- smts, current state where are going- optimize jussi efficiencybrainstorm what's left librarieshttps://www.youtube.com/watch?v=v4cfy6wxgdg## #2: points: (as always)- hf24- naming conventions added recently (and close ones closed):- removing active_votes field from api calls front ends- auto claim rewards.... (more come, just red list issues)https://www.youtube.com/watch?v=bsxxbc11zue# #3: some topics discussed: tentative code freeze hf25 25/05/20- massive optimizations coming steemd hivemind chain id change testnet live all lib owner check their libs compatible.- lengthy proposals apis deprecating condenser_api- transferrable claimed accounts good idea.and more, gist it.https://www.youtube.com/watch?v=i1cswmunxpmnext one 18th may, livestream youtube comments there make tune :) see: hive #3 recording #1 #2 i'm late sorry) by @howo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "gtg",
      "title"    : "Hive Pressure 2: How to Answer Hive Questions?",
      "category" : "news, devops, hivemind, nodes",
      "url"      : "/news/devops/hivemind/nodes/2020/05/04/hive-pressure-2-how-to-answer-hive-questions.html",
      "date"     : "2020-05-04 11:32:57 -0700",
      "desc"     : "First, you need to learn ho...",
      "content"  : "first, you need to learn how ask good questions, and here are some of the resources that will help do so:https://developers.hive.io/apidefinitions/https://hive.hivesigner.com/(kudos @inertia @good-karma)this set api calls is far from perfect, but for now it has be enough general purpose nodes.https://www.youtube.com/watch?v=vlw9lde3dui# big, slow, ugly.back in days, we used run a so-called “full node”, single ~~`steemd`~~ (yeah, haven’t renamed binary yet) node was built with `low_memory_node=off` `clear_votes=off` configured all plugins can get.it required lot ram, replayed ages, huge pain keep running.our code great running blockchain. it’s not equally efficient when answer complex questions.# current architecturethe idea move workload requiring queries out our blockchain nodes.``` +----------+ | &lt;-----------------+ @ @@@@@@ ,@@@@@% hivemind @@@@ (@@@@@* +-------+ &lt;-------+ %@@@@@@ %@@@@@, +-----^----+ @@@@@@@@@@ redis ,@@@@@@@@@@@@ &lt;--+ +----v-----+ @@@@@@@@@@@@@@@&amp; +-v-+ @@@@@@@@@@@@@@@@@@ .@@@@@% &lt;-----&gt; ah @@@@@@@@@@@@@@@@@@@@@( +--&gt; j @@@@@@@@@@@@@@@@@@@@ &lt;-------&gt; u *@@@@@@@@@@@@@@@@ @@@@@@. nginx s @@@@@@@@@@@@@@ &amp;@@@@@. #@@@@@@@@@@ #@@@@@/ i @@@@@@@@ /@@@@@/ fat &lt;---+ @@@@@( .@@@@@&amp; +---+ @@ @@@@@&amp; ```sorry, lack gimp skills## hivemindfor this use (hats off @roadscape) backed by postgresql.&gt; hive consensus interpretation layer blockchain, maintaining state social features such as post feeds, follows, communities. written python, synchronizes an sql database chain state, providing developers more flexible/extensible alternative raw hived api.## nodealso, instead `hived` plugins, chose two nodes, one them “fat node” (`low_memory_node=off` `clear_votes=off`) on mira-enabled instance feed hivemind.please note have included `market_history` my configuration, simply because doesn’t require requires it, so make sure somewhere.## nodeaccount history other setup. serves only account history, definitely heaviest plugin here, hence name.i’m using mira prefer pre-mira implementation had issues it. also, way too slow replay.## jussiinstead service, three specialized ones, route incoming them.so `get_account_history` goes node, while `get_followers` hivemind.that’s what jussi does, also caches things.## redisjussi uses in-memory data cache. very effectively take load nodes. even though most entries quickly expire, common questions “what’s head block?”![headblock.jpg](https://images.hive.blog/dqmdb8psfpbkd2dm8cjtlzjnvcyae2ayly5rr9mclqxhlon/headblock.jpg)8 dapps asking latest block result 1 call 7 cache hits redis.## nginxthat’s world facing component - your ssl termination, rate limiting, balancing, fancy stuff related serving clients.# resourcesnow know components, let's look at (in darkness) bind them.## small stuffthere no specific needs here. traffic expect, need, they any reasonable server instance:- usually bunch cores ram.- different than comes resources.- few gb ram hold data.## big stuff- which non-mira setup, plenty `shared_memory.bin` file either tmpfs or buffer/cache especially during replay. machine 32gb work, would rather suggest 64gb these days. course, low latency storage ssd nvme must. 600gb it.- setup mira, memory hungry, have, effective be. 16gb might go don’t try without fast nvme. 400gb itself simple script, postgresql backend, things needs. pretty much everything, long space fit data, currently 300gb. faster better performance.# zero heroreference hardware configuration:```intel(r) xeon(r) e-2274g cpu 4.00ghz64gb ecc, 2666mt/s2x 960gb (samsung pm983)```when starting scratch, best get recent `block_log`i’m https://gtg.openhive.network/get/blockchain/how depends network server. average downloading speed around 30mb/s, should able less 3 hours.![replay-speed.png](https://images.hive.blog/dqmrtxhalwd8nszhg7cykqu4tqhcloteymk7usdf2xthbah/replay-speed.png)![replay-times.png](https://images.hive.blog/dqmeyssaz9ptyt6wamqu76z6mz7gjgce8ahxmj78q58dluo/replay-times.png)|node type|replay time||---------|-------||ah |15 hours 42 minutes||fat |48 53 minutes||hivemind |85 50 minutes|roughly 4 days 9 synced block.![4days9hours.jpg](https://images.hive.blog/dqmtqxoqyyfenmlrvlrzzuhzqdz6wstc394jktngf8bya1s/4days9hours.jpg)a improved working that. developer-friendly, improve available calls, finally rid deprecated ones `get_state`, away wrapper `condenser_api`. that's story occasion.![hive_queen](https://images.hive.blog/dqmsjuo4g9amovfoabs6gzmw6covuruqkg7urtbsfkej5oj/hive_free-file.png) see: pressure 2: questions? @gtg"
    } ,
  
    
    
    
    
    
    {
      "author"    : "good-karma",
      "title"    : "Interactive Hive API moved to Hivesigner",
      "category" : "news, swagger, api",
      "url"      : "/news/swagger/api/2020/04/29/interactive-hive-api-moved-to-hivesigner.html",
      "date"     : "2020-04-29 05:59:54 -0700",
      "desc"     : "Thank you everyone for your...",
      "content"  : "thank you everyone for your [support on hivesigner proposal](https://esteem.app/hive/@good-karma/hivesigner-ongoing-development-and-improvement). we are almost in range of approved proposals. if haven't voted, please consider approving proposal to help us make better. https://img.esteem.app/kbgnol.png ## recent updatessome updates have missed developments related hivesigner: * [hivesigner python client](https://esteem.app/hive-139531/@emrebeyler/powering-up-2) released thanks @emrebeyler his awesome job and contribution. voting witness!* wiki updated](https://github.com/ledgerconnect/hivesigner/wiki), process unifying all documentation via github so that website can mirror guide developers. integrating oauth is quite simple but with proper it even new developers start developing blockchain/hive.* earlier today, pushed release changes some links fixes few bugs dhive. chrome/brave extension update submitted review, should be available soon. effort onboarding more apps hive, introducing [interactive hive api explorer](https://hive.hivesigner.com)* visit https://hive.hivesigner.com try out directly browser.* [opensource](https://github.com/ledgerconnect/hiveapi), find or want contribute, feel free create pull request [report issues github](https://github.com/ledgerconnect/hiveapi/issues)it has search field relevant apis quickly, queries default values results fetched single click, i believe very convenient get started. check out!simply studying + api, building decentralized matter hours.## buidl on!# support proposal- [vote proposal](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b88%5d&amp;approve=true)- hivedao: https://hivedao.com/proposal/88- peakd: https://peakd.com/proposals/88- hiveblog wallet: https://wallet.hive.blog/proposals- discord: https://discord.gg/pnjn7wh- [github roadmap thread](https://github.com/ledgerconnect/hivesigner/issues/2) see: interactive moved by @good-karma"
    } ,
  
    
    
    
    
    
    {
      "author"    : "someguy123",
      "title"    : "How to set up a Hive Witness or Seed node (non-MIRA) / Upgrade from Steem-Docker to Hive-Docker",
      "category" : "howto, witness, docker, node",
      "url"      : "/howto/witness/docker/node/2020/04/27/how-to-set-up-a-hive-witness-or-seed-node-non-mira-upgrade-from-steem-docker-to-hive-docker.html",
      "date"     : "2020-04-27 12:30:21 -0700",
      "desc"     : "In this post you'll learn how to setup a Hive witness, or upgrade from Steem-docker",
      "content"  : "![hive-in-a-box logo](https://cdn.privex.io/img/posts/hive-in-a-box.png)# fresh installto become a witness without using mira, you'll require server with at least 64gb of ram, 500gb disk (preferably ssd / nvme), and fast, reliable network. if you do not have which meets these requirements, can order one from [privex](privex.io) (you even pay hive/hbd!)i personally use @privex for my own as top 20. while i am the ceo privex, there are many other customers, including witnesses who our servers their nodes, seed rpc nodes and/or projects.you're free to any provider. don't recommend trying run on your home internet, it's likely enough witness.be aware that certain providers poor networks or hardware, may cause missed blocks, so be hopping around few until find that's suitable node.if want learn more about what they do, check out article: [here](https://peakd.com/witness-category/@someguy123/seriously-what-is-a-witness-why-should-i-care-how-do-i-become-one-answer)### shared memory noteright now, minimum ram requirement non-mira is due memory. this because hive stores information in file called shared_memory.bin used similar ram. 58gb hf23, will continue grow overtime. continues grow, need increase amount server. it better some room. ### install hive-docker dependenciesfirst, we basic dependencies (assuming you're ubuntu/debian).```sudo apt updatesudo git curl wget```next, (a line starting # comment, paste them)```bashgit clone https://github.com/someguy123/hive-docker.gitcd hive-docker# already docker installation, you./run.sh install_docker```after install_docker command has finished, recommended log back again (e.g. close ssh client re-connect) ensure shell correctly detects docker.then, download latest witness/seed image```# downloads/updates low-memory image hive./run.sh install```if witness, adjust configuration needed e.g. name, private key, logging config, turn off p2p-endpoint etc.if running seed, then worry just work skip signing key/config section### generating keyfor witnesses, generate key first. remote wallet this.open public following command:```./run.sh remote_wallet```**note: receive an error such timeout invalid http status. normal, usually privex load balancer having temporary problems.****just times connects (you'll see new&gt;&gt;&gt; locked&gt;&gt;&gt;)**create pair witness. ```suggest_brain_key```![screenshot cli_wallet suggest_brain_key command](https://cdn.privex.io/img/posts/hive-suggest-brainkey.png)you should get something this:```{ brain_priv_key: gocart vincent photic iron outhit unglobe sicca lop taskit booster winded spry sackbut unice well rubelle, wif_priv_key: 5j1wn41bbss4l83n9n7p5nmmsvg9uawfvysnd363tvyhwpzu2e9, pub_key: stm7icekcr261f7cebcsmpe1rcw8hnr5pzykcfbuvqe5hsj41yewe}```**put keys notepad moment lose them.**press ctrl-d exit wallet.### setting up confignow, set name key. `nano` simple text editor linux) this.```nano data/witness_node_data_dir/config.ini```if change first lines disable seed.```# endpoint p2p node listen onp2p-endpoint = 0.0.0.0:2001```simply place (hash sign) start line. seed. example:```# on#p2p-endpoint 0.0.0.0:2001```now add settings. scroll down (use up/down arrows, page up/down) like this:```# percent (0-99) must participating produce blocksrequired-participation 33# controlled by initwitness )# =# miner its [account,wif key] number threads proof mining# mining-threads wif miners# private-key =```![screenshot config.ini](https://cdn.privex.io/img/posts/hive-witness-config.png)you'll uncomment (remove start) `witness =` line, `private-key line.grab public/private saved earlier into (or app).then, below, witness' quotes, someguy123 front =`, (without quotes) save time future, useful comment above (see example)example:```# )witness someguy123# key: stm7icekcr261f7cebcsmpe1rcw8hnr5pzykcfbuvqe5hsj41yeweprivate-key 5j1wn41bbss4l83n9n7p5nmmsvg9uawfvysnd363tvyhwpzu2e9```now nano) press ctrl-x, y when asks would save.### environment settingsif comfortable linux, play settings consider .env file, [readme information](https://github.com/someguy123/hive-docker) otherwise, let's continue. defaults generally fine most people.### memory, swap settings, downloading blockchainat point have: - installed hive-in-a-box (through run.sh command) downloaded container configurationyour almost ready. small things.you'll size sudo logged root). 64 gigabytes (64g). please changes constantly.```sudo ./run.sh shm_size 64g```you'll also swappiness. tells linux how much (virtual disk. very slow). 1, means unless absolutely necessary. helps prevent blocks excessive swapping despite plenty ram.```# persist reboot, 'vm.swappiness=1' /etc/sysctl.confsudo sysctl -w vm.swappiness=1```now you've configured server, block log, replays faster than download.```./run.sh dlblocks```![screenshot dlblocks command](https://cdn.privex.io/img/posts/hive-dlblocks.png)### ready!once done, ready `replay` `steemd` (the binary still hive) docker, begin replaying blockchain was create index, shared_memory file. ```./run.sh replay```you status `logs` command.```./run.sh logs```assuming did everything correctly, this:```------------------------------------------------------ network------------------------------------------------------initminer stm8gc13uczbp44hzmlv6zpzgwvq8nt4kji8papspinq1bk153xtxchain id: 0000000000000000000000000000000000000000000000000000000000000000blockchain version: 0.23.0------------------------------------------------------2393837ms main.cpp:121 main ] backtrace segfault enabled.2393837ms chain_plugin.cpp:405 plugin_startup chain shared_file_size: 53687091200 bytes2393837ms chain_plugin.cpp:483 user request.2393837ms database.cpp:185 reindex reindexing blockchain2396435ms block_log.cpp:142 open nonempty2396435ms block_log.cpp:151 index database.cpp:193 blocks...```please take hours depending speed cpu. cases 24 hours.you ctrl-c logs, leave watch replay.### after replayedonce looks this, now go:```1299055ms th_a application.cpp:507 handle_block got 14 transactions 12928269 pharesim -- latency: 55 ms1302427ms 18 12928270 xeldal 426 ms1305291ms 26 12928271 arhag 291 ms1308045ms 20 12928272 pfunk 45 ms1311092ms 23 12928273 bhuz 92 ms```go profile: https://wallet.hive.blog/@yourusername/permissions https://peakd.com/@yourusername/permissions (for links, edit @yourusername part)click wallet, permissions. next active reveal. click button in. show reveal it. make sure begins 5.copy key.now with:```./run.sh wallet```![screenshot page](https://cdn.privex.io/img/posts/hive-wallet-activekey.png)set password, unlock same import wallet.hive.blog peakd (not notepad):```set_password hunter2unlock hunter2import_key 5somethingprivatekey```finally, update/create replace stmxxxx wrote config there), yourname hive.```update_witness https://hive.blog/witness-category/@yourname/my-witness-thread stmxxxxxxx {account_creation_fee:3.000 hive,maximum_block_size:65536,sbd_interest_rate:0} true```# congratulations, working, getting votes producing blocks### informationyou /dev/shm (shared memory) across reboots. `/etc/fstab`, careful, mistakes system unbootable. (**if try break server**).simply bottom new damage 64g whatever be.```tmpfs tmpfs nodev,nosuid,size=64g 0 0```see [the readme](https://github.com/someguy123/hive-docker) advanced options.# upgrading steem-docker hive-dockerif existing `steem-docker` convert `hive-docker` installation below steps.## updating repositoryuse `git set-url` track repository. fetch` updates, checkout master, pull` update `hive-docker`.```~/steem-docker $ set-url origin https://github.com/someguy123/hive-docker.git~/steem-docker fetch~/steem-docker master~/steem-docker pull```to always uses network, `network=hive` `.env` file```shellecho network=hive &gt;&gt; .env```download hf23 install```## were previously steem, state filesdelete files `clean` clean```![screenshot clean command](https://cdn.privex.io/img/posts/hive-clean.png)download block_log:```./run.sh slow part replayingwhen steem hive, replay.to replay (this shutdown remove software, mode)```./run.sh stop./run.sh logs command```./run.sh logs```note: automatically updates realtime. ctrl-cif all well, v0.23.0 version read this):```------------------------------------------------------ blocks...```once replayed (may 3 hours), standard x y.```1668107ms p2p_plugin.cpp:210 54 25299003 cervantes 107 ms1671090ms 36 25299004 blocktrades 90 ms1674098ms 28 25299005 roelandp 98 ms```if re-enable :)you're successfully upgraded 0.23.0 higher).for future releases, `./run.sh &amp;&amp; restart`, but always, assume needed. test backup, before attempting update. i've released haven't made post yet, hub: https://hub.docker.com/r/someguy123/hive/tags/---![](https://i.giphy.com/media/l378lvuerndt84hii/giphy.gif)gif avatar @stellabelle---### i'm doing hive?[vote me witness](https://wallet.hive.blog/~witnesses) every vote counts. forget follow this.---are looking provider? company offers highly-reliable affordable dedicated virtual hbd, eos, monero, doge, ltc, btc! website https://www.privex.iojoin discord at: https://invite.gg/privex--- see: (non-mira) upgrade @someguy123"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "Core Development on Hive",
      "category" : "news, core, development",
      "url"      : "/news/core/development/2020/04/20/core-development-on-hive.html",
      "date"     : "2020-04-20 10:05:57 -0700",
      "desc"     : "Reference post explaining Hive core code, core development meetings and how to explore and take part",
      "content"  : "![#hivedevelopers ... a delightful digital asset, provided by community member @psos / @doze](https://files.peakd.com/file/peakd-hive/hiveio/kph1uf0q-hive1.gif)### hive powers crypto, people, and projects. the ecosystem being built on blockchain is growing but biggest opportunities are still ahead of us! at heart hive, core code what makes everything possible.decentralized contributions to base big challenge that also creates greatest for ecosystem. there lot questions around this, so here handy reference things like, what's development? how can i get involved? where does all this happen?## not development development.*developers* be catch-all term any people who write code. developers work front end interfaces, back structures databases, mobile app specialists, website designers, software engineers, even learning about run nodes scripts... everywhere! #### when it comes blockchain, consists layer code, main libraries services which then used build projects based data capabilities ledger. example:- itself, witness, rpc, seed run- hivemind, database social features helps make more easily usable- jussi, caching calls faster easier- public image hosting infrastructure ends use- libraries, help interact with using different programming languages - python like hive-python beem, or js hive-js dhive gitlab pipelines, manage workflow facilitate deployment changes, fixes, new between contributers- testnet management tools tinmanthis far from complete list it's an example kinds up hive's development. solid foundation building other things. third party dapps, games, etc. their top they're doing separate yes, developing... another important branch go hand in hand: was made power web 3.0! needs inspired available. ## find this? involved?the repository open source, means anyone use contribute it! allows many problems most interested best suited to. bringing together brains world discuss, collaborate, contribute, has ability iterate improve decentralized way. you might coder wants code; could developer wanting create project hive; user follow join discussion issues. there's chance you're super behind-the-scenes stuff only want check infrequent updates now again case @hiveio will have covered! don't involved if be.### located https://gitlab.syncad.com/hive.if bug reports, requests, would take look discussion, browse search see issue looking already exists. left menu, these topics whatever part at. picture below, issues (the code) shown. breadcrumb trail page remember repository.![where issues](https://files.peakd.com/file/peakd-hive/hiveio/2mje8qn0-image.png)the thing do first, read through sure duplicating your request report. keep quick neat! exists, add comment emoji show support feature. doesn’t, feel free issue! ***please remember:*** as elements report/idea/feature request. good rule thumb should need contact begin working, try include pertinent concise, accurate disposal: pictures, snippets, blog post examples. finally, label issue. **one** describes it: bug, enhancement, documentation, suggestion.## coordinating work. end, bi-weekly meetings. ***do participate:*** they way heavy lifting same talk some out via voice. meetings usable functional, working attend. won't comment/public text during **these public, live streamed watch youtube channel available here:** https://www.youtube.com/channel/ucwm89v7nzvihizgwt3gxhwayou subscribe you'd notifications streams listen in. can't meetings, recordings saved come them. account posting notes summarizing each along next future meeting date.#### terribly dry (it's okay do!) no obligation.this understand navigate intimidating parts blockchain. we forward, focused topic blog. choose interest them yours! 🐝 see:"
    } ,
  
    
    
    
    
    
    {
      "author"    : "engrave",
      "title"    : "Improvements for Condenser repository, Continuous Integration and Deployments",
      "category" : "howto, devops, docker",
      "url"      : "/howto/devops/docker/2020/04/19/improvements-for-condenser-repository-continuous-integration-and-deployments.html",
      "date"     : "2020-04-19 13:38:27 -0700",
      "desc"     : "![](https://i.imgur.com/yCI...",
      "content"  : "![](https://i.imgur.com/yciuiaf.png)**i want to elaborate not only on introduced features but also my thought and reasoning so everyone can benefit introduce changes in their projects. this post will be long i believe it might useful for the entire hivedevs community.**the workflow is built top of gitlab ci/cd easily modified any other tool (i.e. circleci or jenkins).# dockeri've started work by reviewing `dockerfile`. i've `condenser` image was a bit shocked:```$ docker lscondenser latest 6d57c0c8a904 19 seconds ago 1.54gb```1.54 gb simple frontend application? boy, it's just too much. let's do something with it.## leaner imagelet's start recognizing reason why big. you look into your `dockerfile` `package.json` search some common mistakes: * using full-sized images rather than `alpine` versions installing dev dependencies production putting list copying useless files final imageyep, check every point here. make new dockerfile:```dockerfilefrom node:12.16.2 as developmentworkdir /var/appcopy package.json yarn.lock ./run yarn install --non-interactive --frozen-lockfile --ignore-optionalcopy . .run mkdir tmp &amp;&amp; buildcmd [ yarn, run, ]### remove ##from development dependenciesrun --ignore-optional --production### build minified node:12.16.2-alpine productionworkdir /var/apparg source_commitenv source_commit ${source_commit}arg docker_tagenv docker_tag ${docker_tag}copy --from=dependencies /var/app/package.json /var/app/package.jsoncopy /var/app/config /var/app/configcopy /var/app/dist /var/app/distcopy /var/app/lib /var/app/libcopy /var/app/src /var/app/srccopy /var/app/tmp /var/app/tmpcopy /var/app/webpack /var/app/webpackcopy /var/app/node_modules /var/app/node_modulescopy /var/app/healthcheck.js /var/app/healthcheck.jshealthcheck --interval=30s --timeout=5s --start-period=30s --retries=5 cmd node /var/app/healthcheck.jscmd ]```what has been improved: node.js version upgraded from `8.7` `12.16.2` which lts at moment. always try framework versions, may include security fixes performance upgrades. good habit use specific up `patch` number. multistage used an optimal deployment. first, we `development` stage dependency able compile react application. next, we're removing `--production` switch during `dependencies` stage. after all, creating minimal smallest base available, necessary directories. healthcheck introduced, daemon manage containers automatic restarts if zero-downtime deployments explained later post. dynamic scaling capabilities `docker swarm`.also, file modified, worth its content here: like `webpack`, `babel` `eslint` moved proper called `devdependencies` `yarn` could deps image. strict were sure produces exactly same semantic versioning popular, there no way package author does breaking increased. need update package, manually. have enough test coverage, run everything works fine.after all that done, condenser size massively reduced:```$ 58406d338e67 8 226mb```![](https://i.imgur.com/xgtpxcq.png)![](https://i.imgur.com/accocud.png)the compressed registry even smaller. much better, right? shame you, steemit!## healthchecksimply speaking, running trying keep alive possible. system needs determine container `actually alive`. seem alive, app responding requests example? fortunately, integrated health mechanism `docker-compose.yml`. usually, create endpoint liveness checks. already one utilize easily.there lot examples `curl` check, go. should cross-platform implementation differs windows unix. write technology projects are written, node.js.```javascriptconst http = require(http);const options { host: localhost, port: 8080, path: '/.well-known/healthcheck.json', timeout: 5000};const request http.request(options, (res) =&gt; console.log(`status: ${res.statuscode}`); (res.statuscode == 200) process.exit(0); } else console.error(`error: process.exit(1); }});request.on('error', (err) console.error('error', err); process.exit(1);});request.end();```when ready, instruct mechanism. add following line `dockefile`:`healthcheck /var/app/healthcheck.js`make `/var/app/healthcheck.js` exists inside working, inspect it:```$ lscontainer id command created status ports names060166cf52ee hiveio/condenser:development docker-entrypoint.s… 5 minutes (healthy) 0.0.0.0:8080-&gt;8080/tcp mystifying_dhawan```there `(healthy)` indicator `status` column. is. please note startup process, indicate slightly different (`starting`), wait before making first check. because giving time our startup. `start-period` parameter.depending traffic/load, those parameters vary.## pushing hubwe improved (smaller) image, push repository. doing manually waste cause human mistakes. best runner us bullet-proof manner.here `job` definition `.gitlab-ci.yml` additional code breakdown:```yamlvariables: docker_image: hiveio/condenser.docker-job: &amp;docker-job image: docker:stable services: - docker:dind before_script: echo $hub_token | login -u $hub_username --password-stdinbuild-development: &lt;&lt;: *docker-job stage: variables: docker_tag: $docker_image:$ci_commit_short_sha docker_tag_main: $docker_image:development source_commit: $ci_commit_sha only: develop script: -t $docker_tag $docker_tag_main --build-arg $docker_tag_main```first, global variable `docker_image` reuse many places. case would change name, single place.hence multiple `jobs` defined file, advanced yaml syntax, includes **hidden keys** **anchors**. decrease duplicated easier read maintain. job name starting dot considered hidden key **won't directly executed**. btw, quick temporarily disable without commenting it. `.docker-job: &amp;docker-job` anchor extend job. `&lt;&lt;: *docker-job`, populate `image`, `services` `before_script` properties automatically. move jobs similar things.later on, local (job scoped) `docker_tag_main` evaluated `hiveio/condenser:development` `docker_tag` `hiveio/condenser:344e55ef` `source_commit` `344e55efefd56e00b15eea6ccf8560a1107b9ff6` (or commit sha)it's idea double tag `latest` track process. describe how specific, `sha`-tagged rollback them anytime click.finally, building arguments `--build-arg`:`docker .`if scroll dockerfile section, notice `arg source_commit` `env ${source_commit}` means these injected environment variables containers. easy pass additional, build-level images. returned endpoint. instance source.```shell$ curl https://staging.condenser.engrave.dev/.well-known/healthcheck.json{status:ok,docker_tag:hiveio/condenser:344e55ef,source_commit:344e55efefd56e00b15eea6ccf8560a1107b9ff6}```***an important thing mention `hub_token` `hub_username` configured settings. prevent unauthorized users malicious official registry, `protected` `masked`, they branches moderated logs, leak internal bad actor elevated permissions.![](https://i.imgur.com/o3faaqb.png)# merge requeststo improve process adding codebase, got brand jobs:![](https://i.imgur.com/3kv2zpi.png)the pipeline fired required merged. fails failing unit tests), main branch. enforce quality regression.## eslintcode standardization important, especially open-source project maintained totally developers around world. statically analyzes quickly find potential problems organized specified rules. analysis when developing javascript applications. really stupid mistakes.eslint branch pushed repository:```yamlrun-eslint: merge_requests ci:eslint allow_failure: true # changed false linter errors removed```because codebase neglected, `run-eslint` allowed fail moment (`allow_failure: true`), indicated orange exclamation mark mr view pipelines list. warnings right now cleaned soon, require eslint merging proposed changes:``` ✖ 1208 (1187 errors, 21 warnings) 831 0 potentially fixable `--fix` option. error failed exit 1.```## testsextensive testing produce stable `run-eslint`, `run-unit-tests` request.```yamlrun-unit-tests: ci:test coverage: /all files[^|]*|[^|]*s+([d.]+)/```testing suit (`jest`) coverage report:![](https://i.imgur.com/43jrdbe.png) report parsed gitlab, `coverage: files[^|]*|[^|]*s+([d.]+)/` configuration. display percentage view, allowing reviewers increasing not.![](https://i.imgur.com/yn6lbe8.png)i advise declining covered tests. omitted fixes, worse.also, repository settings `pipelines must succeed` setting checked default. more broken develop/production branches.## review apps`review apps` huge very feature. feature inspected visually reviewer click. special expose reviewers:![](https://i.imgur.com/foehz6d.png)review requires three request:```yamlbuild-review-app: $ci_registry_image:$ci_commit_short_sha $ci_job_token $ci_registry_user $ci_registry --password-stdin $docker_tagdeploy-review-app: *docker-remote-host-review deploy service_name: review_$ci_environment_slug docker_cert_path=$certs -h $review_host --tlsverify pull service rm $service_name || previous exist --with-registry-auth --network infrastructure --name deployed environment: name: review/$ci_commit_ref_name url: https://$ci_environment_slug$app_review_subdomain on_stop: stop-review-app auto_stop_in: 1 week stop-review-app: when: manual stopped action: stop```the familiar parts difference overwriting `before_script`. you're **anchors**, overwrite template freely what did here.because opened well known community (vel. actors), issue this, provided itself. private, apps won't accessible anyone else.`echo --password-stdin`we `ci_job_token`, `ci_registry_user` `ci_registry` [environment automatically gitlab](https://docs.gitlab.com/ee/ci/variables/predefined_variables.html), configure them. also, `--password-stdin` secure log password being exposed logs.by default, connect unsecured, port. yet possible validate tls certificates external world way, services runners machine. parameters: `-h` remote address `--tlsverify` makes identify itself `--with-registry-auth` send authentication swarm agents `--network` network reverse proxy `docker_cert_path` demon where certificates`docker_cert_path=$certs $docker_tag`this service` under url `ci_environment_slug`, gitlab. guaranteed valid docker/kubernetes name.review instances removed closed opened. achieved `stop-review-app` triggered (`when: manual`).# tracking deployments![](https://i.imgur.com/8ncgre9.png)by images, redeploy moment, emergency, maintainers (docker specific)# stagingdeploying staging quite deploying app. uses on-demand, updated image.with swarm` mode, ensure application highly available. agent take care restart spin (this important). built-in, native mode using.```yamldeploy-staging: *docker-remote-host-staging staging_condenser $staging_host --image --update-failure-action --update-order start-first https://$staging_domain```job protected pushing/deploying code. `develop` disabled.## zero downtime deploymentsupdating swarm`:`docker_cert_path=$certs $service_name`there provided: `--image $docker_tag` existing case, sha-tagged `--update-failure-action rollback` nothing fails. passing parameter, instructing roll back state, `--update-order start-first` kill current ones don't want. `start-first`, first. healtcheck result becomes positive. gone wrong (healtcheck reason), end working old touched all.## resources controlwith full control over example configuration environment. tweaks, also:```yamlversion: 3.7services: condenser: hiveio/condenser:latest deploy: mode: replicated replicas: 2 resources: limits: cpus: 0.85 memory: 2024m restart_policy: condition: delay: 5s update_config: parallelism: 10s failure_action: order: rollback_config: networks: reverse-proxynetworks: reverse-proxy: external: reverse-proxy```# productionit finished yet, advice (ci/cd ready). designed serve condenser. (based documentation): **cluster management engine**: know container, ready swarm. software **decentralized design**: worker manager command. machines **scaling**: each service, declare number tasks run. scale down, adapts maintain desired state.* **multi-host networking**: specify overlay services. assigns addresses initializes updates application.* **load balancing**: load balancer. internally, lets distribute between nodes.* **secure default**: enforces mutual encryption communications nodes. option self-signed root custom ca.* **rolling updates**: rollout apply nodes incrementally. delay deployment sets anything goes wrong, service.and `swarm`, can't coincidence! ;)i'm most within engrave (dblog.org) managing set 23 microservices almost 30 moment.![](https://i.imgur.com/jms3d48.png)# tips (and only) tests covering improving fewer bugs. visible damn see regression. quality. exact file. `^`, two builds. changing `major` hub [multi-stage builds](https://docs.docker.com/develop/develop-images/multistage-build/) checks applications clean `husky` happens automatically.# vote @engrave witness valuable[![vote witness](https://i.imgur.com/lawfvzf.png)](https://hivesigner.com/sign/account-witness-vote?witness=engrave&amp;approve=1) see: improvements hive.blog, continuous integration"
    } ,
  
    
    
    
    
    
    {
      "author"    : "gtg",
      "title"    : "Hive Pressure #1: A New Hope",
      "category" : "news, devops, nodes",
      "url"      : "/news/devops/nodes/2020/04/19/hive-pressure-1-a-new-hope.html",
      "date"     : "2020-04-19 10:28:03 -0700",
      "desc"     : "A long time ago, in a block...",
      "content"  : "a long time ago, in block far, far away…no, wait, this is not the story you are looking for ;-)this part was going to be filled with retrospectives, origins of ~~steem~~ pressure series, stories about events that caused us fork from but would just waste time, and resource we can’t afford waste.tl;dr: no longer what knew it be.&gt; _“no ned worry.”_&gt; - anonymousour future our hands.we hive now.# paint hivetime update promo materials.https://www.youtube.com/watch?v=vlw9lde3dui# new net, nodessince many have upgraded their toys hive, at hf23, most used now compatible.## seed nodes```seed.openhive.network:2001 # gtgseed.roelandp.nl:2001 roelandphiveseed-se.privex.io:2001 privex (se)steemseed-fin.privex.io:2001 (fi)seed.liondani.com:2016 liondanihived.splinterlands.com:2001 aggroedseed.hivekings.com:2001 drakosnode.mahdiyari.info:2001 mahdiyarianyx.io:2001 anyxseed.buildteam.io:2001 thecryptodrivehive-seed.lukestokes.info:2001 lukestokes.mhthhive-seed.arcange.eu:2001 arcangeseed.chitty.me:2001 chitty```## api nodeshttps://api.openhive.networkhttps://api.hive.bloghttps://anyx.iohttps://api.hivekings.comhttps://api.pharesim.mehttps://hived.hive-engine.comhttps://rpc.esteem.apphttps://hived.privex.iohttps://techcoderx.com# diyif want run your own node, here some quick tips can useful:## nodeconfigure build with:```cmake -dcmake_build_type=release -dlow_memory_node=on -dclear_votes=on -dskip_by_tx_id=off -dbuild_steem_testnet=off -denable_mira=off -dsteem_static_build=on ../hive```depending on needs resources, might use either`enable_mira=off` or `enable_mira=on`.`config.ini` node as simple that:```plugin = witnessp2p-endpoint 0.0.0.0:2001```this intended easily extend more useful by enabling webserver endpoint apis such `block_api` `network_broadcast_api`. however, if choose add plugin `account_by_key` `market_history` will replay.## nodeif you’ve read my series know i monolithic node. instead, `jussi` route specific methods specialized endpoints.- account history (non-mira)- fat (mira)- hivemindplease note setup itself *not enough* feed hivemind instance because lack market_history plugin. an issue environment, i’m running both nodes, prefer plugins low memory where possible.### reference configurationconfigure ../hive```we mira here, pre-mira implementation plugin: `account_history_rocksdb`.here’s `config.ini` file:```log-appender {appender:stderr,stream:std_error}log-logger {name:default,level:info,appender:stderr}backtrace yesplugin p2p json_rpcplugin database_api condenser_apiplugin witnessplugin rcplugin market_historyplugin market_history_apiplugin account_history_rocksdbplugin account_history_apiplugin transaction_statusplugin transaction_status_apiplugin account_by_keyplugin account_by_key_apiplugin block_api network_broadcast_api rc_apip2p-endpoint 0.0.0.0:2001p2p-seed-node gtg.openhive.network:2001transaction-status-block-depth 64000transaction-status-track-after-block 42000000webserver-http-endpoint 127.0.0.1:8091webserver-ws-endpoint 127.0.0.1:8090webserver-thread-pool-size 256```### -dlow_memory_node=off -dclear_votes=off -dskip_by_tx_id=on -denable_mira=on ../hive```for buildhere’s reputationplugin reputation_apiplugin block_apip2p-endpoint 0.0.0.0:32001p2p-seed-node gtg.openhive.network:2001webserver-http-endpoint 256```## storage needs:as always, make sure very fast storage.|node type|storage||---------|-------||ah |600 gb||fat |400 gb||hivemind |300 gb|in next episode, write required hardware how takes nowadays scratch.![hive_queen](https://images.hive.blog/dqmsjuo4g9amovfoabs6gzmw6covuruqkg7urtbsfkej5oj/hive_free-file.png) see: #1: hope @gtg"
    } ,
  
    
    
    
    
    
    {
      "author"    : "yabapmatt",
      "title"    : "Hive Keychain Now Available on Chrome &amp; Brave!",
      "category" : "news, nodejs, hive-keychain",
      "url"      : "/news/nodejs/hive-keychain/2020/04/17/hive-keychain-now-available-on-chrome-and-brave.html",
      "date"     : "2020-04-17 08:50:54 -0700",
      "desc"     : "![](https://files.peakd.com...",
      "content"  : "![](https://files.peakd.com/file/peakd-hive/stoodkev/amswoznk-keychain_title.png)i am extremely happy to report that the hive keychain browser extension has finally been approved by google and is now available for everyone install on chrome brave browsers!you can use following link find in web store:https://chrome.google.com/webstore/detail/hive-keychain/jcacnejopjdphbnjgfaaobbfafkihpep**we encourage add a positive review store** as will help ensure it remains listed future updates get timely fashion.it also firefox while here: https://addons.mozilla.org/en-us/firefox/addon/hive-keychain/@stoodkev did vast majority of development work with contributions from @arcange @quochuy, @nateaguila took care design graphics always.to see detailed update being done please @stoodkev's recent post https://peakd.com/hive-139531/@stoodkev/hive-keychain-1-8-3## hdf proposal updatethe existing funding end approximately one month at which time we expect launch new continue fund ongoing project. do not intend submit another steem plan extension, so going forward only come hive.we greatly appreciate support who backed proposal, hope community vote when initial expires.---*note: all rewards this go @steem.dao (the account) platform* see: &amp; brave! @yabapmatt"
    } ,
  
    
    
    
    
    
    {
      "author"    : "emrebeyler",
      "title"    : "Hivesigner Python Client",
      "category" : "howto, hivesigner, python, wallet",
      "url"      : "/howto/hivesigner/python/wallet/2020/04/14/powering-up-2.html",
      "date"     : "2020-04-14 14:28:15 -0700",
      "desc"     : "***hivesigner-python-client...",
      "content"  : "***hivesigner-python-client is a simple yet powerful library to interact with [hivesigner](https://hivesigner.com). hivesigner single sign-on solution for hive based applications and it implements `oauth2` the authorization logic.with this client;- implementing authorization/authentication flow w/ oauth- broadcasting supported operations blockchain user of your appare possible through hivesigner.***| repository | documentation ||--------------------------------------------------|---------------||[github.com/emre/hivesigner-python-client](https://github.com/emre/hivesigner-python-client )| [hivesigner-python-client.readthedocs.io](https://hivesigner-python-client.readthedocs.io/en/latest/) |***#### installation***```$ (sudo) pip install hivesigner```#### migrating from steemconnect-python-client***if you use `steemconnect-python-client` want switch version, only change need do updating imports.old way:`from steemconnect.client import client`new hivesigner.client client`.also, `resteem` class changed as `reblog`. examples more details can be found at website.*****note**: being maintained by @good-karma since switch. there an ongoing proposal it's maintenance while. if didn't see yet, [check out](https://hivedao.com/proposal/88). see: python client @emrebeyler"
    } ,
  
    
    
    
    
    
    {
      "author"    : "lonelywolf",
      "title"    : "[Hive Patched] Upvoting By Payment In 4 Easy Steps - Basic Bot",
      "category" : "howto, nodejs, bot",
      "url"      : "/howto/nodejs/bot/2020/04/14/hive-patched-upvoting-by-payment-in-4-easy-steps-basic-bot.html",
      "date"     : "2020-04-14 13:14:21 -0700",
      "desc"     : "![upvote.png](https://files...",
      "content"  : "![upvote.png](https://files.peakd.com/file/peakd-hive/lonelywolf/mwkfr7ni-upvote.png)(want to use the **logo** yourself? no problem, check out post i made about [my art design - hive logo](https://peakd.com/hive-174578/@lonelywolf/art-design-hive-logo-by-lonelywolf-stav-art-inside-free-usage))---#### repository: https://www.npmjs.com/package/steem-js-patched- ## helpful tutorials:[[hive patched] steemjs full tutorial all functions abilities](https://hive.blog/hive-139531/@lonelywolf/hive-patched-steemjs-full-tutorial-all-the-functions-all-the-abilities)[[hive patched tutorial] vote, comment and follow in one](https://hive.blog/hive-139531/@lonelywolf/hive-patched-tutorial-steemjs-vote-comment-and-follow-functions-all-in-one)# of this is for hive, so it works steem **hive**!#### examples results from old but still same hive!hello!today you're going learn how create an upvoting bot with that calculate simply voting power by payment, `note` calculation a really simple calculation.load steem/hive package:```const = require('steem-js-patched')```to install package `npm steem-js-patched --save` repository above---first we will add user guest123 (or your account) code, this(guest123) global account developers```const acc_name 'guest123', // name acc_key '5jraypasxmx1l97zux7yuc5psb5eabf821kkagtbj7xcjfqcblg'; private wif key```you want api work **hive** blockchain```steem.api.setoptions({ url: 'https://api.hive.blog' });```so, first things first, get easiest hardest, firstly we're transactions blockchain```steem.api.streamtransactions('head', function(err, result) { let type result.operations[0][0]; getting transaction data result.operations[0][1]; transaction}```this function gets newest go through blockchain, such as new blogs, transfers etc.as already explained (new blogs/new transfer etc.) transaction, blog be author, permlink, content etc. transfer, memo, sender, receiver etc.now need if is, our account.```if(type == 'transfer' &amp;&amp; data.to acc_name) checking reciever account}```simple enough, type(transaction type) `transfer` account.if memo url send it's not normal transfers.```var data.memo.split('/');if(memo[0] https:){ console.log(incoming request vote from: + data.from +, value: data.amount nn); sending console telling us come. streamvote(data.memo, data.amount);}else{ , requst.); console.log(memo: data.memo);}```everything above!### now, streamvote &amp; calcvoteweightfirstly, streamvote, called variables url, amount```function streamvote(url, amount) {}```now weight author``` const url.split('/'); spliting array author memo[4].split('@')[1]; calcvoteweight(amount); value amount```memo urlauthor got example: ~~https://steemit.com/utopian-io~~/**@lonelywolf**/~~steem-bots---auto-follower-bot-steemjs--nodejs----begginer-tutorial~~weight calculated after.now just stream blockchain```steem.broadcast.vote(acc_key, acc_name, memo[5], weight, starting process if(!!err) throw err; close program error details there console.log('voted succesfully, permalink: ' memo[5] ', author: weight: / 1000 '%.', err); //if succesfully sent information console});```so have broadcast. function, says sends uses wif(private key), name, permlink(memo[5]) weight.if crash applicationif everything has done successfully info console.- functioncreate variable `amountpaid````//this paid upvote can befunction calcvoteweight(amountpaid){}```now token value``` amountpaid.split(' '), tokentype token.pop(), //taking token(coin) [hive/hbd] tokenvalue token.shift(); taking only value```as easy be, splitting string spaces valuenow `weight` values set it``` weight; (tokenvalue &gt;= 0.6){ higher than 0.6 (example: &gt;0.6$ hbd/ &gt;0.6 hive) 100; } else 0.25) 40; 0.1) 20; }else{ like lower 0.1 10; }```first, or equal `0.6` voteif amount `0.25` 40% `0.1` 20% `0.1`(else) 10% votenow ratio between hbd, because doing manually``` hbdhiveratio 0.5; hbd 0.8 1.2, around 0.5 you 1.5 1 ```this hbd``` if( 'hive') return (weight * hbdhiveratio) regular }```now coin calculating `hbd hive` ratio,if we'll vote.### conclusionsimply, done, run script it, 0.01 (the on script) vote.if are any problems down below i'll help you!**if suggestions next tutorials appreciate suggestions, thanks!**### great day! see: [hive payment 4 steps basic @lonelywolf"
    } ,
  
    
    
    
    
    
    {
      "author"    : "good-karma",
      "title"    : "Devportal Hivesigner updates",
      "category" : "news, nodejs, hivesigner",
      "url"      : "/news/nodejs/hivesigner/2020/04/14/devportal-hivesigner-updates.html",
      "date"     : "2020-04-14 02:07:45 -0700",
      "desc"     : "![kbgnol.png](https://img.e...",
      "content"  : "![kbgnol.png](https://img.esteem.app/kbgnol.png)# devportal updatesearlier today, have made pull request to change and improve hivesigner related dev documentation javascript tutorial which has been merged into master already alive at [hive devportal](https://developers.hive.io).- information about http://developers.hive.io/services/#services-hivesigner- js on how integrate your hive applications:http://developers.hive.io/tutorials-javascript/hivesigner.htmldocumentation is important part of any service tool, without it devs would hassle a lot, know use provided resources. i remember in 2016 when chain was launched, we had hard time developing apps, go through blockchain code find proper api calls parameters, secure way sign transactions etc. come long since then our documentations are better easier follow.we yet document implement lot pieces make easy understand for developers as well users. support proposal help us deliver those quicker!# proposal- [vote using hivesigner](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b88%5d&amp;approve=true)- hivedao: https://hivedao.com/proposal/88- peakd: https://peakd.com/proposals/88- hiveblog wallet: https://wallet.hive.blog/proposals- discord: https://discord.gg/pnjn7wh- [github roadmap thread](https://github.com/ledgerconnect/hivesigner/issues/2) see: updates by @good-karma"
    } ,
  
    
    
    
    
    
    {
      "author"    : "thecrazygm",
      "title"    : "Simple Transaction Monitor",
      "category" : "howto, beem, python, stream",
      "url"      : "/howto/beem/python/stream/2020/04/11/simple-transaction-monitor.html",
      "date"     : "2020-04-11 16:58:21 -0700",
      "desc"     : "# Pretty straight forward m...",
      "content"  : "# pretty straight forward monitori'm back again with another simple python snippet of code to use in future projects. a lot projects begin as needing something monitor the chain and react accordingly. i thought about this decided best example show how it is teaching tool myself was transaction ops insert them into database if they were or from me.![monitor_output.png](https://files.peakd.com/file/peakd-hive/thecrazygm/tr5vesva-monitor_output.png)this basis listening for memos response sorts. (in case, put sqlite3 db) popular option listen `comments` op check mentioned (that may be project/lesson future)![monitor_db_output.png](https://files.peakd.com/file/peakd-hive/thecrazygm/fg2rgesy-monitor_db_output.png)this requires both [beem](https://beem.readthedocs.io/en/latest/index.html) [dataset](https://dataset.readthedocs.io/en/latest/index.html) will watch whatever account you set `watch` variable.```python#!/usr/bin/env python3import datasetfrom beem import steemfrom beem.blockchain blockchainwatch = thecrazygmhive steem(node='https://anyx.io')db dataset.connect('sqlite:///mydatabase.db')# system variablesblockchain blockchain(steem_instance=hive)stream blockchain.stream(opnames=['transfer'], raw_ops=false, threading=true, thread_num=4)table db[watch]# parse json data sql insertdef update_db(post): try: table.insert(dict(post)) db.commit() except exception e: print(f'[error: {e} moving on]') db.rollback()def monitor(): print([starting up...]) db.begin() read live stream filter out only transfers post stream: post[to] == post[from] watch: print(f[transaction found {post['from']} {post['to']}]) update_db(post)if __name__ __main__: monitor()```the can always up date at my [github gist area](https://gist.github.com/thecrazygm) file: [monitor.py](https://gist.github.com/thecrazygm/9b2882a4adcea826815489b5a00ed089)if like what i'm doing consider following me, either here on [github](https://github.com/thecrazygm) buy me coffee.again, stay safe there people,michael garcia a.k.a. @thecrazygm![](https://files.peakd.com/file/peakd-hive/thecrazygm/ljwzdewc-signature_fancy.png) see: by @thecrazygm"
    } ,
  
    
    
    
    
    
    {
      "author"    : "lonelywolf",
      "title"    : "Quick Tip: Hive Scripting - In 3 easy steps",
      "category" : "howto, nodejs",
      "url"      : "/howto/nodejs/2020/04/10/quick-tip-hive-scripting-in-3-easy-steps.html",
      "date"     : "2020-04-10 16:38:45 -0700",
      "desc"     : "![Untitled-1.png](https://i...",
      "content"  : "![untitled-1.png](https://images.hive.blog/dqmtr8epbyqa6tksoqajmmmyzcj1fz7cd5stnw5cxl86lgf/untitled-1.png)---hello, devs!my name is stav aka lonelywolf,i'm a web developer, i worked with utopian-io for good amount of time back in the days, made lot useful tutorials mainly about steemjswhich what we're going to talk today.so i'm not really familiar hive scripting, don't have any idea how transfer some projects mine hivebut found out that one command can my steemjs projects.## so, step 1install if you haven't```npm install steem --save```## 2create your script, example:```const = require('steem');steem.api.getaccounts(['lonelywolf'], function(err, res){ console.log(res, err)})```this will give me all profile configuration and informationso now we want it api, right?# 3now, just need change api url,```steem.api.setoptions({ url: 'https://api.hive.blog' })```you use other node there hive.so i'll get but as information(results at end post)# hope useful, please leave an upvote comment down below are scripting blockchain```[ { id: 495898, name: 'lonelywolf', owner: weight_threshold: 1, account_auths: [], key_auths: [array] }, active: posting: [array], memo_key: 'stm7rnp4djl3ztumsxsejuy7grc3aoh1ptvgfv4cuhfvsthwat4iw', json_metadata: '{profile:{name:therealwolf,about:realityhubs moderator -- fs developer,website:https://steemit.com/@lonelywolf,cover_image:https://cdn.steemitimages.com/dqmuxqc72fjzerakezlju7wfj89eju4ftugoxrnersc3gtc/steembanner.png,profile_image:https://cdn.steemitimages.com/dqmvsxtvsoeugvn9sjvcfmbqucpcvzcgor9gouu8nwg8quq/therealwolf_logo.png}}', posting_json_metadata: proxy: '', last_owner_update: '2018-10-13t14:13:21', last_account_update: '2019-08-08t11:40:00', created: '2017-12-14t15:13:15', mined: false, recovery_account: 'steem', last_account_recovery: '1970-01-01t00:00:00', reset_account: 'null', comment_count: 0, lifetime_vote_count: post_count: 865, can_vote: true, voting_manabar: current_mana: '161750492879', last_update_time: 1586559381 downvote_manabar: '43566594492', voting_power: 9281, balance: '0.001 hive', savings_balance: '0.000 sbd_balance: hbd', sbd_seconds: '52214760', sbd_seconds_last_update: '2020-04-07t23:19:45', sbd_last_interest_payment: '2020-03-23t20:43:36', savings_sbd_balance: savings_sbd_seconds: '0', savings_sbd_seconds_last_update: '2020-04-10t04:08:21', savings_sbd_last_interest_payment: savings_withdraw_requests: reward_sbd_balance: reward_steem_balance: reward_vesting_balance: '0.000000 vests', reward_vesting_steem: vesting_shares: '2984.805714 delegated_vesting_shares: '2982.828925 received_vesting_shares: '174264.401181 vesting_withdraw_rate: next_vesting_withdrawal: '1969-12-31t23:59:59', withdrawn: '60272175916', to_withdraw: withdraw_routes: curation_rewards: 6910, posting_rewards: 1207947, proxied_vsf_votes: [ 0 ], witnesses_voted_for: 3, last_post: '2020-04-10t23:12:00', last_root_post: '2020-04-10t19:32:24', last_vote_time: '2020-04-10t22:56:21', post_bandwidth: pending_claimed_accounts: vesting_balance: reputation: '16422564795330', transfer_history: market_history: post_history: vote_history: other_history: witness_votes: 'actifit', 'bdcommunity', 'emrebeyler' tags_usage: guest_bloggers: [] }] null``` see: quick tip: - 3 easy steps by @lonelywolf"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "Update for beem: beempy installer for windows and beempy as shell",
      "category" : "howto, beem, python, wallet",
      "url"      : "/howto/beem/python/wallet/2020/04/08/update-for-beem-beempy-installer-for-windows-and-beempy-as-shell.html",
      "date"     : "2020-04-08 07:26:15 -0700",
      "desc"     : "## Repositoryhttps://github...",
      "content"  : "## repositoryhttps://github.com/holgern/beem![beem-logo](https://cdn.steemitimages.com/dqmcrrwlpsywsymierfp6um6mejemngjn9rxw7audjqtdgb/beem-logo)[beem](https://github.com/holgern/beem) is a python library for steem and hive. the current version 0.22.14.there also discord channel beem: https://discord.gg/4hm592vthe newest beem can be installed by:```pip install -u beem```check that you are using hive nodes. following command ```beempy updatenodes --hive```updates nodelist uses only after setting as default_chain, `beempy updatenodes` used without switching to steem.the list of nodes checked with```beempy config```and```beempy currentnode```shows currently connected node.## upcoming changesthe next release will 0.23.0 blockchain then set new default. i rework countless steem_instance parameters replace them with more fitting name. create class which steem() conterpart.## changelog versions 0.22.14* add click_shell turn beempy into shell utility autocompletion* added requirements* installer on windows* get_hive_nodes get_steem_nodes functions nodelist* resteem renamed reblog* when in mode, walletinfo --unlock unlock wallet --lock it again* get_blockchain_name steem, returns either or hive* switch_blockchain switch between steem* storage has now config updatenode --hive switches use nodes* --steem nodes## upload imagesthe url imageupload been fixed hive:```beempy uploadimage -a holger80 .beempy_screencast.gif```results in:```![](https://images.hive.blog/dqmx39y3dpzxurvvxrggmzsnxympekmcdce3xoutbafpodo/image)```## mode beempybeempy activated started any parameter:```beempy```you an see here action:![](https://images.hive.blog/dqmx39y3dpzxurvvxrggmzsnxympekmcdce3xoutbafpodo/image)## windows beempya automatically pushed section: https://github.com/holgern/beem/releases/tag/0.22.14![image.png](https://files.peakd.com/file/peakd-hive/holger80/njjoul4k-image.png)after downloading installing beempysetup, icon shown start menu:![image.png](https://files.peakd.com/file/peakd-hive/holger80/cjq9ssyz-image.png)when clicking it, terminal started.## unlocking modewhen unlocked with```walletinfo --unlock```and locked again --lock```closing program locks wallet.## nodelists steemthe two functions:```from beem.nodelist import nodelistnodelist = nodelist()print(nodelist.get_hive_nodes())print(nodelist.get_steem_nodes())```this helps, sure always correct `default_chain` parameterthe chain stored `default_chain`. hive.```beempy config```returns now:```+-----------------+---------------------------------------------+| key | value |+-----------------+---------------------------------------------+| default_account || default_chain [ https://anyx.io, http://anyx.io, https://api.hivekings.com, https://api.hive.blog, https://api.openhive.network, https://techcoderx.com, https://rpc.esteem.app, https://hived.privex.io ] data_dir ...beembeem |+-----------------+---------------------------------------------+``````beempy updatenodes```will return nodes, `hive` `steem`.## pythonthe object `switch_blockchain` function booth blockchains.```from steemstm steem()stm.switch_blockchain(steem)print(stm)stm.switch_blockchain(hive)print(stm)```returns```&lt;steem node=https://steemd.minnowsupportproject.org, nobroadcast=false&gt;&lt;steem node=https://anyx.io, nobroadcast=false&gt;```## beempy```beempy --steem```switches blockchainand```beempy --hive```will blockchain.****if like what do, consider casting vote me witness [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) [peakd](https://peakd.com/witnesses)*. see: update by @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "Community Discussion and Updates: Hive Airdrop Exclusion List and Code Corrections, Core Developer Meetings",
      "category" : "news",
      "url"      : "/news/2020/04/06/community-discussion-updates-hive-airdrop-exclusion-core-developer-meetings.html",
      "date"     : "2020-04-06 14:48:21 -0700",
      "desc"     : "Read more about corrected airdrop code, appeal groups, and Hive core development meetings!",
      "content"  : "![#aroundthehive ... a very shiny asset provided by community member @midlet](https://files.peakd.com/file/peakd-hive/hiveio/clj4bsla-2923mn3pnd7pfocxi33kmqbgrmvc3lupsdqaxkc4vtc4w3dcqvma77rgfhb5tnbupfw9kna31g2eydqokbkxkgart6gcwika9tzgmfaportph8.png)## the buzz this week has been busy, busy. update will cover two important topics: airdrop corrections and appeals, hive core developer meetings.&nbsp;[in last update](https://peakd.com/hiveblockchain/@hiveio/buzz-from-around-the-hive-first-week-recap-tips-and-info), we discussed initial exclusion list, feedback proposals, that an error had found in distribution code. over course of week, script reviewed depth number developers corrected, so before anything else: updated list compiled user accounts who be correctly dropped tokens via next upcoming hardfork. we're including all public links to code post should you wish take closer look.**the incorrectly excluded are as follows:**these corrected automatically does not need make any vote.```[ akiroq, balticbadger, dailychina, dailystats, dftba, double-u, edgarare1, electrodo, fadetoblack, freedompoint, friendlystranger, john371911, juancar347, kdtkaren, lichtblick, lifeskills-tv, lotusfleur, ricko66, rynow, scottcbusiness, seo-boss, sgbonus, spoke, steemchiller, steemflower, stimp1024, travelnepal, truce, tuckerjtruman, yanirauseche]``` original was edge case arose from proxies were switched or cleared, where revoted way wasn't accounted for. new results [are available here](https://gist.github.com/drov0/545f1bad3e5a6c6a047ba2ce82ebe164/revisions).### what did these scripts do? criteria? groups left for vote on?&nbsp; reading understanding can tricky if it isn't your forte. used pull is based on set criteria produces transparent reproducible data steem blockchain. included first block hardfork when distributed. was:- voting 2 more sockpuppet witness accounts, proxied someone accounts- unvote unproxy [hardfork announcement](https://steemd.com/communityfork/@hiveio/announcing-the-launch-of-hive-blockchain)- 1000 sp &nbsp;the remaining accurately still able use they see fit: ***they blocked locked using chain interfaces***, many already doing so. however, passionate across range opinions whether appeal distribution. there main airdrop: - those voter sockpuppets matched above criteria- voted sock puppets themselves criteria&nbsp;these have proposals made @hiveio account coming weeks leading up opportunity support secondary drop one, both, neither fit. encourage discussion among groups, ask consider carefully communicate openly respectfully each other, even may share same opinions! ## one most difficult things about moving towards decentralization deciding do what! today began looking at ways help stay organized get done.&nbsp;to end, morning marked developers' meeting hive. live streaming approved time inaugural meeting, but recorded ([you listen here](https://www.youtube.com/watch?v=v4cfy6wxgdg)- like subscribe channel future notifications). meetings streamed [youtube](https://www.youtube.com/channel/ucwm89v7nzvihizgwt3gxhwa) other platforms forwards.**these open anyone working development participate in, would listen.** cases, likely technical probably won't interesting everyone ecosystem (sorry, devs!) sure people abilities date, creating *what's buzzing around repo* posts following day with summarize what's covered easier understand. expect tomorrow!#### finish today's post, here few handy remind lot source work happening. involved, look might good fit!- public, gitlab: https://gitlab.syncad.com/hive- developer's portal: https://developers.hive.io/- website: https://hive.io/ (links useful here, under continual development)- project sites browse projects ecosystem: https://hiveprojects.io/- explorers: https://hiveblocks.com/ https://hive-db.com/### thanks another solid week! please spread info 🐝 see: updates: corrections,"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "Update for beem: huge performance improvements and bridge API support",
      "category" : "howto, beem, python, communities",
      "url"      : "/howto/beem/python/communities/2020/04/06/update-for-beem-huge-performance-improvements-and-bridge-api-support.html",
      "date"     : "2020-04-06 05:04:18 -0700",
      "desc"     : "## Repositoryhttps://github...",
      "content"  : "## repositoryhttps://github.com/holgern/beem![beem-logo](https://cdn.steemitimages.com/dqmcrrwlpsywsymierfp6um6mejemngjn9rxw7audjqtdgb/beem-logo)[beem](https://github.com/holgern/beem) is a python library for steem and hive. the current version 0.22.13.there also discord channel beem: https://discord.gg/4hm592vthe newest beem can be installed by:```pip install -u beem```check that you are using hive nodes. following command ```beempy updatenodes --hive```updates nodelist uses only list of nodes checked with```beempy config```and```beempy currentnode```shows currently connected node.## changelog versions 0.22.13* hivesigner support added* api link to steemconnect has been fixed* change recovery account added beempy* node add get_notifications mark_notifications_as_read* beempy notifications bridge config storage improved get_default_config_storage, get_default_key_storage get_default_token_storage* list_all_subscriptions get_account_posts reduce number performed calls on object creation## performance boost beemall integration tests finishing now in```========== 469 passed, 27 skipped, 11 warnings in 1040.19s (0:17:20) ===========```which an improvement 49% (version 0.22.12 needed 1551 seconds).this huge could accomplished by reducing when creating object. importing objects from beem, `configstorage` no longer created during import. read creation with `get_default_config_storage`. this speeds up modules stored parameter needed.these changes improves speed all commands.## apibeem supports parts api. more functions missing will follow.### notifications```beempy holger80```prints table unread notifications.```+---------------------+------+-------------------------------------------+| date | type message |+---------------------+------+-------------------------------------------+| 2020-04-06 10:15:57 vote @uwelang voted your post ($0.23) || 12:52:00 @steemcleaners ($2.45) |+---------------------+------+-------------------------------------------+```they marked as `-m````beempy -m holger80```which broadcasts notify custom_json. ### subscribtionsthe `list_all_subscriptions` which returns cummunities subscript.### get_account_poststhe `get_account_posts` function, used fetch posts shown feed account.### get_ranked_postsa new class `rankedposts` was `beem.comment` receive ranked posts.## beempyit possible beempy```beempy changerecovery -a holge80 recovery.account```## addedthe example shows how create login link:```from beem.hivesigner import hivesignerhivesigner = hivesigner(client_id=rewarding.app, scope=login, get_refresh_token=false)hivesigner.get_login_url('https://rewarding.app/welcome')```returns```'https://hivesigner.com/oauth2/authorize?client_id=rewarding.app&amp;redirect_uri=https%3a%2f%2frewarding.app%2fwelcome&amp;scope=login'```the received token then check if user successfully entering its posting key script:```try: hivesigner.set_access_token(access_token) name hivesigner.me()[name]except: print(wrong token)```****if like what i do, consider casting me witness [hivesigner](https://hivesigner.com/sign/account-witness-vote?witness=holger80&amp;approve=1) or [peakd](https://peakd.com/witnesses)*. see: update improvements @holger80"
    } ,
  
    
    
    
    
    
    {
      "author"    : "beggars",
      "title"    : "Tutorial: Building A Dice Game Contract With Hive Stream (Part 2)",
      "category" : "howto, dapps, nodejs",
      "url"      : "/howto/dapps/nodejs/2020/04/06/tutorial-building-a-dice-game-contract-with-hive-stream-part-2.html",
      "date"     : "2020-04-06 04:00:21 -0700",
      "desc"     : "Elaborating on part one of our dice contract tutorial and beefing it up",
      "content"  : "if you missed [part one here](https://peakd.com/hive-139531/@beggars/tutorial-building-a-dice-game-contract-with-hive-stream), we built a basic dice game contract which allows people to bet on an outcome and either win or lose. the tutorial left out some things that might want do in real deployment.## install mongodbfor this tutorial, are going use mongodb as database behind it. we'll be storing transactions outcomes database, so can ensure transfers not processed multiple times.while streamer keeps track of last block number json file sqlite what happens your node goes down gets edited deleted? it would result pain manually process.download community version installer from official [mongodb](https://www.mongodb.com/download-center/community) website. choose appropriate for operating system follow instructions. should require very little input, just keep clicking next basically everything default.## build adapternow, need write adapter will allow hive stream work with instead databases is configured out-of-the-box use. provided have installed (version 2+) new adapter's functionality.an standard cases consists two mandatory methods `loadstate` `savestate` method called when starts start at finished. updates latest block.there however other lifecycle our more functional adapters. `create` initialisation, setup instances connections here. `destroy` stopped, naturally close here.the `processoperation` number, transaction id forth. it's metadata used identify specific their data. `processtransfer` `processcustomjson` matching transfer custom operation matched contract. also information well payload helpful info.**save following `mongo.adapter.js`**```import { adapterbase } 'hive-stream';import mongoclient, db 'mongodb';export class mongodbadapter extends client; db; mongo = uri: '', database: options: {} }; blocknumber; lastblocknumber; blockid; prevblockid; transactionid; constructor(uri, databasw, options usenewurlparser: true, useunifiedtopology: true }) super(); this.mongo.uri uri; this.mongo.database database; this.mongo.options options; async create() try this.client await mongoclient.connect(this.mongo.uri, this.mongo.options); this.db this.client.db(this.mongo.database); return true; catch (e) throw e; loadstate() const collection this.db.collection('params'); params collection.findone({}); (params) params; savestate(data) collection.replaceone({}, data, upsert: true}); processoperation(op, blocknumber, blockid, prevblockid, trxid, blocktime) this.blocknumber this.blockid this.prevblockid this.transactionid trxid; processtransfer(operation, payload, metadata) this.db.collection('transfers'); data id: this.transactionid, blockid: this.blockid, blocknumber: this.blocknumber, sender: metadata.sender, amount: metadata.amount, contractname: payload.name, contractaction: payload.action, contractpayload: payload.payload collection.insertone(data); processcustomjson(operation, this.db.collection('transactions'); issignedwithactivekey: metadata.issignedwithactivekey, destroy() this.client.close(); }}```## expanding contractnow support added via adapter, let's modify code flag whether was (winnings sent loss memo sent). us replay worry about paying users who already received winnings times.above `if (verify)` line code, access client connection.```const this._instance['adapter']['db'];const db.collection('transfers');```because contracts get instance, means `db` property. downside here any doesn't property, fail. case, know slightly tighter coupling fine.inside balance check refunds account than maximum bet, add sets status `refund`put inside statement: ``if (balance &lt; max_bet) {`` underneath `transferhivetokens` call.```await collection.findoneandupdate({ }, $set: status: 'refund' });```what doing querying based its id, then using `$set` property only add/update `transfers` collection.next, statement (parsefloat(tokenswon) &gt; balance) same beneath call:```await });```underneath ``await this._instance.transferhivetokens(account, sender, tokenswon, token_symbol, winningmemo);`` following:```await 'win' });```and now else '0.001', losingmemo);`````await 'loss' });```finally, another amounttrim[0], amounttrim[1], `[refund] invalid params.`);`` user amount higher max, roll too high low.```await });```**the final ends up looking like this:**```import utils seedrandom 'seedrandom';import bignumber 'bignumber.js';const contract_name 'hivedice';const 'beggars';const token_symbol 'hive';const house_edge 0.05;const min_bet 1;const max_bet 10;// random generatorconst rng (previousblockid, transactionid) =&gt; seedrandom(`${previousblockid}${blockid}${transactionid}`).double(); randomroll math.floor(random * 100) + 1; randomroll;};// valid betting currenciesconst valid_currencies ['hive'];class dicecontract _instancs; previousblockid; // runs every time register logic (creating etc) unregister run connections, state, etc current automatically exists updateblockinfo(blocknumber, previousblockid, info this.previousblockid /** helper getting balance. case make sure has enough money pay bets @returns */ getbalance() this._instance['client'].database.getaccounts([account]); (account?.[0]) (account[0].balance string).split(' '); balance[0]; parsefloat(amount); null; action matches @param param1 - sender roll(payload, destructure values payload; formatted 100 value first part, currency symbol second amounttrim amount.split(' parse numeric amountparsed parsefloat(amounttrim[0]); format 3 decimal places amountformatted parsefloat(amounttrim[0]).tofixed(3); trim space amountcurrency amounttrim[1].trim(); console.log(`roll: ${roll} parsed: ${amountparsed} formatted: ${amountformatted} currency: ${amountcurrency}`); blockchain this._instance.gettransaction(this.blocknumber, this.transactionid); call verifytransfer confirm happened verify this._instance.verifytransfer(transaction, 'beggars', amount); this.getbalance(); this._instance['adapter']['db']; db.collection('transfers'); (verify) server less max cancel refund send back sent, broke could fufill bet.`); }); return; (amountparsed &gt;= &amp;&amp; &lt;= validate ((roll 2 96) valid_currencies.includes(amountcurrency)) rng(this.previousblockid, calculate multiplier percentage bignumber(1).minus(house_edge).multipliedby(100).dividedby(roll); tokens won tokenswon bignumber(amountparsed).multipliedby(multiplier).tofixed(3, bignumber.round_down); shows they winningmemo `you ${tokenswon} ${token_symbol}. roll: ${random}, guess: ${roll}`; lose losingmemo lost afford, (random roll) winningmemo); losingmemo); parameters, params.`); amount.`); console.log(e); }}export default dicecontract();```## itwe take bootstrapped app part remains largely untouched, except pass configuration constructor.```import './dice.contract';import './mongo.adapter';const streamer({ active_key: needed json_id: 'testdice' identifier payloads});streamer.registeradapter(new mongodbadapter('mongodb://127.0.0.1:27017', 'hivestream'));// contractstreamer.registercontract('hivedice', dicecontract);// watching blockchainstreamer.start();```![screen shot 20200406 8.14.42 pm.png](https://files.peakd.com/file/peakd-hive/beggars/upzgh9fl-screen20shot202020-04-0620at208.14.4220pm.png)here screenshot modified refunded updated show all works intended.## conclusionwhat did learn? learned how interfacing instance interact look by within actions them (in setting property).ps. ships package, don't yourself, i process tutorial. enjoy. see: tutorial: building (part 2) @beggars"
    } ,
  
    
    
    
    
    
    {
      "author"    : "good-karma",
      "title"    : "SteemConnect notice",
      "category" : "news, hivesigner",
      "url"      : "/news/hivesigner/2020/04/05/steemconnect-notice.html",
      "date"     : "2020-04-05 12:07:21 -0700",
      "desc"     : "In this post we would like ...",
      "content"  : "in this post we would like to update everyone about discontinuation of [steemconnect](https://steemconnect.com).it has been incredible few years serving all users and dapps on steem, but now that have migrated [hive](https://hive.io) as [hivesigner](https://hivesigner.com). it is time focus our effort making [hivesigner](https://hivesigner.com) the best authentication service, can be [hive](https://hive.io).# sunset datewe are setting a date **stop [steemconnect](https://steemconnect.com) services 1st june, 2020**. kindly request dapp developers plan inform their changes.# migration optionswe will actively improving encourage build [hive](https://hive.io). if for some reason you want stay [steem](https://steem.io), please migrate other fork - example [steemlogin](https://steemlogin.com). ***we not any way connected with forks, always do your own research, audit security new forks.***# hivesigner developmentfor developers, visitors, redirecting homepage help them get started development adding faq more detailed documentation how integrate website, authenticate [hivesigner extension](https://chrome.google.com/webstore/detail/hivesigner/ophihnhnfgcmhpbcennhppicomdeabip), sign transactions securely, etc. published roadmap proposal support continuous project. read [about here effort](https://esteem.app/hive/@good-karma/hivesigner-ongoing-development-and-improvement) bringing secure social masses.---* [vote proposal](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5b88%5d&amp;approve=true)* github: [ledgerconnect/hivesigner](https://github.com/ledgerconnect/hivesigner)* discord support: https://discord.gg/pnjn7wh* email: `hello@hivesigner.com` see: steemconnect notice by @good-karma"
    } ,
  
    
    
    
    
    
    {
      "author"    : "beggars",
      "title"    : "Tutorial: Building A Dice Game Contract With Hive Stream",
      "category" : "howto, dapps, nodejs",
      "url"      : "/howto/dapps/nodejs/2020/04/04/tutorial-building-a-dice-game-contract-with-hive-stream.html",
      "date"     : "2020-04-04 03:59:09 -0700",
      "desc"     : "Hot off the heels of announ...",
      "content"  : "hot off the heels of announcing [some huge updates](https://peakd.com/hive-139531/@beggars/hive-stream-update-support-for-writing-custom-contracts-on-the-hive-blockchain) to hive stream which features ability write smart contracts, i promised a tutorial would be coming showing you how one and what could more fitting than writing contract for dice game?basing this that engine ships with as an example, i've created accepts roll value needs above server roll. by end tutorial, you'll have understanding contracts are written (they're just classes) can create your own dapps using them.if you're kind person who wants see code, covered. code found [here](https://github.com/vheissu/hive-stream/blob/master/src/contracts/dice.contract.ts). it is in typescript but resembles javascript basically if not familiar. based engine, except they're both fundamentally different pieced together.## install packagein application, `hive-stream` package running `npm hive-stream` it's published on npm. we also want seedrandom bignumber.js well since those used our code.```npm bignumber.js```## contractsave following `dice.contract.js` application.```javascriptimport { streamer, utils } from 'hive-stream';import 'seedrandom';import bignumber 'bignumber.js';const contract_name = 'hivedice';const account ''; // replace accountconst token_symbol 'hive';const house_edge 0.05;const min_bet 1;const max_bet 10;// random number generatorconst rng (previousblockid, blockid, transactionid) =&gt; const seedrandom(`${previousblockid}${blockid}${transactionid}`).double(); randomroll math.floor(random * 100) + 1; return randomroll;};// valid betting currenciesconst valid_currencies ['hive'];class dicecontract client; config; blocknumber; blockid; previousblockid; transactionid; create() runs every time register called do setup logic here (creating database, etc) destroy() unregister run close database connections, state, etc updates information about current block method automatically exists updateblockinfo(blocknumber, previousblockid, lifecycle sets info this.blocknumber this.blockid this.previousblockid this.transactionid /** get balance helper getting balance. case make sure has enough money pay out any bets @returns */ async getbalance() await this._client.database.getaccounts([account]); (account?.[0]) (account[0].balance string).split(' '); amount balance[0]; parsefloat(amount); when custom json action matches @param payload param1 - sender roll(payload, sender, }) destructure values payload; formatted like 100 first part, currency symbol second amounttrim amount.split(' parse numeric real amountparsed parsefloat(amounttrim[0]); format 3 decimal places amountformatted parsefloat(amounttrim[0]).tofixed(3); trim space amountcurrency amounttrim[1].trim(); console.log(`roll: ${roll} parsed: ${amountparsed} formatted: ${amountformatted} currency: ${amountcurrency}`); transaction blockchain utils.gettransaction(this._client, this.blocknumber, this.transactionid); call verifytransfer confirm transfer happened verify utils.verifytransfer(transaction, 'beggars', amount); this.getbalance(); (verify) less max bet, cancel refund (balance &lt; max_bet) send back was sent, broke utils.transferhivetokens(this._client, this._config, account, amounttrim[0], amounttrim[1], `[refund] fufill bet.`); return; bet (amountparsed &gt;= &amp;&amp; &lt;= validate ((roll 2 96) (direction === 'lesserthan' || direction 'greaterthan') valid_currencies.includes(amountcurrency)) rng(this.previousblockid, this.blockid, calculate multiplier percentage new bignumber(1).minus(house_edge).multipliedby(100).dividedby(roll); tokens won tokenswon bignumber(amountparsed).multipliedby(multiplier).tofixed(3, bignumber.round_down); memo shows users they win winningmemo `you ${tokenswon} ${token_symbol}. roll: ${random}, guess: ${roll}`; lose losingmemo lost user afford, (parsefloat(tokenswon) &gt; balance) (random roll) tokenswon, token_symbol, winningmemo); else '0.001', losingmemo); invalid parameters, their params.`); try need sent amount.`); console.log(transfer); catch (e) console.log(e); }}export default dicecontract();```## adding applicationcreate file `app.js` add following.```javascriptimport streamer './dice.contract';const streamer({ active_key: '', needed transfers json_id: 'testdice' identifier payloads});// contractstreamer.registercontract('hivedice', dicecontract);// starts watching blockchainstreamer.start();```## test outin put username then some (to you). supply active key constructor (between single quotes).in field, enter stringified this: ``{hivecontract:{id:testdice, name:hivedice,action:roll,payload:{roll:10 }}}``the id must match provided config property `json_id` uses transactions. case, `testdice` id. `name` `registercontract` method's argument `hivedice` example. `action` function name finally `payload` object data call.i took liberty testing my show process works.![transfer.png](https://files.peakd.com/file/peakd-hive/beggars/am5znzea-transfer.png)as two transactions winning losing, works (which verified checking wallet or explorer):![transactions.png](https://files.peakd.com/file/peakd-hive/beggars/hnyj7w4d-transactions.png)## conclusionthis rudimentary example basic contract. improvements might include support odds, supporting more. but, hopefully build now. see: tutorial: building game @beggarsmore node.js"
    } ,
  
    
    
    
    
    
    {
      "author"    : "blocktrades",
      "title"    : "Hive workflow proposal",
      "category" : "howto, contribute, development",
      "url"      : "/howto/contribute/development/2020/04/03/hive-workflow-proposal.html",
      "date"     : "2020-04-03 14:20:39 -0700",
      "desc"     : "*Note: this post is primari...",
      "content"  : "*note: this post is primarily intended for hive developers, but it may be of interest to other readers who are interested in the details software development process. i’ll make another later with ideas about how general community members can become involved process and go submitting bug reports.*i propose we adopt a common workflow most if not all hive-related projects. will easier developers collaborate on multiple projects minimum amount friction.i believe primary goals (in no particular order) our should be:* create an easily findable list tasks* prevent duplication work effort* allow easy collaboration between developers* establish determining task priority* setup testing standards tasks each project* review ensure existence code functional/compilable state where test their new against potential interactions code* production which safe deployed publicbelow some my initial proposals achieve above goals.# creating issues taskswhen comes up, issue appropriate project inside group. ### selecting (issue)if clear what belongs to, or existing project, called *issues without yet*. assigned specific corresponding correct close yet*.### describing labelschoose labels describe nature issue, such as “bug”, “enhancement”, “documentation”. currently only have group-level labels. generally preferred, unless you need that really sense group.### optional assignment person taskthe at creation time developer, self-assigning assigning someone confident want take latter case, probably also contact them directly issue).# using boards monitor issuesusing gitlab, individual group has “board” shows states project’s issues: * **open:** exists, decision yet been made it* **to do:** do awaiting it, blocked by precursor task* **doing:** one more working issue* **review:** done, independent after completed, changed either do, doing, closed* **closed:** completed passed reviewwhen first created show up “open” list. setting label moves from review. closing closed list.# board workflowin addition project-level boards, there aggregates status group: https://gitlab.syncad.com/hive/hive/-/boards # statusthe likely vary across example, web site hosted entity, entity determine worked on, works them, they reviewed. core blockchain rigorous criterion selection those reviewed, because ripple effects sensitive, features impacts memory, disk, cpu utilization could increase cost operating node. similarly, changes commonly used libraries hive-js financial-related wallet apps malicious injected.# reference when committing associated source repositoryit’s very useful link possible. commit related place tag your comment to. forget code, manually update afterward adding url commit.# requirements### unit tests image testsone included change, verify properly, able detect future regressions (future break functionality). backend usually too difficult required process.for user interface (ui) changes, it’s often tests, cases, attach “before” “after” set images reviewer understand was done.### continuous integration (ci) projectsanother important component proper compiles developer still others. due environment differences, properly developer’s machine, then fails problems, ci gitlab automatically recompile run regression pushed repository. enable rapid detection problems avoid wasting developers.# branch management repositoriesthe master serves deployment production. tags indicate recent version approved use environment. tagged versions environments!the head represent believed compilable functional.note flow require cleanup *steemd* (now renamed *hive*) repo.## public testnet codepreferably, always testnets available apps, requiring main network. witnesses encouraged operate consensus api nodes support testnet(s).a any deemed potentially impact third party apps. whatever being testnet. see: proposal @blocktrades"
    } ,
  
    
    
    
    
    
    {
      "author"    : "therealwolf",
      "title"    : "dhive: RPC Failover Support",
      "category" : "howto, dhive, nodejs, rpc",
      "url"      : "/howto/dhive/nodejs/rpc/2020/04/03/dhive-rpc-failover-support.html",
      "date"     : "2020-04-03 05:00:03 -0700",
      "desc"     : "![dhive.png](https://files....",
      "content"  : "![dhive.png](https://files.peakd.com/file/peakd-hive/therealwolf/nkbeivhb-dhive.png)---greetings #hivers &amp; fellow developers,i've just pushed a new version, 0.13.3, to [dhive](https://www.npmjs.com/package/@hivechain/dhive) (js library) that enables native rpc node failover-support. this feature is optional and only active if an array of nodes given as the first argument in `client.````import {client} from '@hivechain/dhive'// failoverconst client = client(['https://api.hive.blog', 'https://api.hivekings.com', 'https://anyx.io'], { failoverthreshold: 3 /* default */})// no simpleclient client('https://api.hive.blog')```#### relevant options parameters`new client(url, options)````- failoverthreshold (default: 3): specifies number times urls (rpc nodes) should be iterated retried case timeout errors. requires url parameter array! it can set 0 iterate retry forever.- 60 * 1000ms): send timeout, how long wait milliseconds before giving up on call. forever.```### gitlab pull request (code)https://gitlab.syncad.com/hive/dhive/-/merge_requests/3### why relevant?normally, you have take care potential failovers your application yourself. produce redundant code. having solution far cleaner.another wrapper around dhive failover. there [dsteem-pool](https://www.npmjs.com/package/dsteem-pool), but didn't work for me.### infocode has been tested everything *should* working fine: https://gitlab.syncad.com/hive/dhive/-/blob/master/test/client.ts#l15-20however, very sensitive operations, please still careful rather double-check.---with said:if are any problems/questions, create issue https://gitlab.syncad.com/hive/dhive/issues#hiveonwolf*[therealwolf.me](https://therealwolf.me)* see: dhive: failover support by @therealwolfmore about node.js"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "How to review account permissions and change your recovery account",
      "category" : "howto, beem, python, account",
      "url"      : "/howto/beem/python/account/2020/04/02/how-to-review-account-permissions-and-change-your-recovery-account.html",
      "date"     : "2020-04-02 15:04:27 -0700",
      "desc"     : "![image.png](https://files....",
      "content"  : "![image.png](https://files.peakd.com/file/peakd-hive/holger80/uscdocpb-image.png)[source](https://pixabay.com/de/illustrations/schl%c3%bcssel-schlo%c3%9f-sicherheit-metall-3348307/)all accounts on the hive blockchain that existed also before fork may have posting permissions granted to apps do not exists blockchain. it is a good idea remove them for now.you can use beempy your account. at first,all account posting/active should be printed with```beempy holger80``````+------------+-----------+-----------------------------------------------------------+| permission | threshold key/account |+------------+-----------+-----------------------------------------------------------+| owner 1 stm5xdyn3netqimd1wczzjf9spijqy2uqw9hrwt6lr6rqytaxwnfz (1) || active stm7ta7mh81wjv1j8ew8nyglc3xcsyxndfnhah8f8byyd8yacy6ew actifit.app dpoll.xyz esteemapp nc-client nextcolony peakd.app rewarding stm6t5exkhztql1pdkrrzjcgzbadnb3yuyczgrywdxvdnu5bp57jl |+------------+-----------+-----------------------------------------------------------+```## permissionnow, needed removed by```beempy disallow -a holger80 busy.app```where name set with `-a`.this command broadcasts `account_update` operation and removes given from `account_auths` field.![image.png](https://files.peakd.com/file/peakd-hive/holger80/nnzpfyos-image.png)this done https://hivesigner.com/revoke/ followed by name, e.g. https://hivesigner.com/revoke/busy.appchanging reviewing possible peakd:https://peakd.com/@holger80/permissions## recovery accountthe check https://hiveblocks.com/@holger80![image.png](https://files.peakd.com/file/peakd-hive/holger80/n5l0jcin-image.png)it @steem my as most unlikely will ever sign `request_account_recovery` hive, i'm unable account, when i would accidentally leak key someone change using leaked key.this unlikely, but could happen.### how does work?assuming, was changed within 30 days, previous recover signing, account:1. need create new key2. public signed its key3. then broadcast `recover_account` old private key.4. now all keys an key.currently this work me, hive.## changing accounti created @recovery.account account.it hivesigner this:https://hivesigner.com/sign/change_recovery_account?account_to_recover=holger80&amp;new_recovery_account=recovery.account&amp;extensions=%5b%5dor peakd: https://peakd.com/@holger80/permissionsbut like own script:```from beem.account import accountfrom beem.nodelist nodelistfrom beem steemfrom beem.transactionbuilder transactionbuilderfrom beemgraphenebase.account privatekeyimport beembaseimport getpassif __name__ == __main__: nodes = nodelist() nodes.update_nodes() getpass.getpass(prompt='owner key: ') owner_key privatekey(wif=key) print(pub: %s % str(owner_key.pubkey)) account_name input(account name: ) new_recovery_account input(new recovery_account: steem(node=nodes.get_nodes(hive=true)) assert hive.is_hive account(account_name, steem_instance=hive) new_rec_acc account(new_recovery_account, op beembase.operations.change_recovery_account(**{ 'account_to_recover': account['name'], 'new_recovery_account': new_rec_acc['name'], 'extensions': [] }) print(op) prompt input(broadcast operation? [y/n]) if prompt[0] y: tb transactionbuilder(steem_instance=hive) tb.appendops([op]) tb.appendwif(str(owner_key)) #tb.appendsigner(account['name'], 'owner') tb.sign() trx tb.broadcast() print(trx) ```results in![image.png](https://files.peakd.com/file/peakd-hive/holger80/n8fwv7bm-image.png)this means in days changed.i keep of safe place them.## there provider?do you want account? work? let me know. see: review @holger80more about python"
    } ,
  
    
    
    
    
    
    {
      "author"    : "deathwing",
      "title"    : "How to set up your Witness server with MIRA?",
      "category" : "howto, witness",
      "url"      : "/howto/witness/2020/04/01/how-to-set-up-your-witness-server-with-mira.html",
      "date"     : "2020-04-01 17:30:33 -0700",
      "desc"     : "***Hello there, as you may ...",
      "content"  : "***hello there, as you may or not know the server requirements for hosting a witness is growing very fast. to combat this, with recent hardforks blockchain mira was introduced.mira caches data on rocksdb files rather than random acces memory, ram. which means will require higher storage fast r/w speeds like ssds example. instead of 64 gb ram.right now, today (**02.04.2020**) **absolute minimum** node 8 gigabytes ram, 400gb ssd storage, 4 cores, 100 mbps dl/ul speed.the **recommended** specifications witness/seed 32 500gb 1 gbps speed.block logs currently take about **258 gb** space while takes **37 gb**.![](https://i.imgur.com/5ktmbrv.png)witnesses are course, crucial longevity, stability and decentralization chain. if wan create become witness, good thank volunteering! managing servers keeping tabs them no easy feat. lets forget mention, cheap.### start setting up your fresh install [diy]so have decided using mira. ready, freshly installed. preferably ubuntu debian, but that's just my taste. setup, we be steem-docker made by someguy123 provided [privex.io](privex.io)let's get started. throughout this tutorial, i assuming `root`.first, git so can use `git clone` necessary from github.`apt -y`now, clone repository github.`git https://github.com/someguy123/steem-docker.git`now that `git` has downloaded server, `cd` into folder.`cd steem-docker`next, going custom-made script `docker` us.`./run.sh install_docker`this probably minute.next, installing docker package.`./run.sh someguy123/hive:latest-mira`next, .env docker.`nano .env````docker_name=witnessports=```paste these in file save it pressing ctrl+x then y.next step download block_log.```mkdir root/data/witness_node_data_dir/blockchaincd root/data/witness_node_data_dir/blockchaincurl -fssl http://files.privex.io/hive/block_log.lz4 -o - | lz4 -d block_log```as block_log quite big, anywhere 20 minutes several hours depending internet connection server. after been installed, privex.iofor hive,`rsync -av --progress --delete rsync://files.privex.io/hive/rocksdb/ /root/steem-docker/data/rocksdb/`now our downloaded, must generate brain key security. ```cd root/steem-docker./run.sh remote_walletsuggest_brain_key```![](https://i.imgur.com/op0tcay.png)this pair witness. copy output it.after generating keys edit `config.ini` main configuration server.`nano root/steem-docker/data/witness_node_data_dir/config.ini`on first line, see `p2p-endpoint` should comment out goal make looking host seed keep on.you putting pound (#) front line. look this,`#p2p-endpoint = 0.0.0.0:2001`next, few lines below see,`shared-file-size 64g`please change 16 16g on.next, scroll down until `witness` `private-key` lines.for part, put username this,`witness deathwing`next, private previously saved without any quotation marks.`private-key 5thisisyourpreviosulygeneratedprivatekey`![](https://i.imgur.com/z8ddst1.png)again, press y exit.you almost done!our next replay chain, long time process single-threaded can't advantage multi-core cpus, processors' single-thread performance, amount vary. likely an hour more.`./run.sh replay`after complete, let sync network.`./run.sh start`you `./run.sh logs` view log output. normal errors appearing here time. check every 20-30 something this:![](https://i.imgur.com/scsvd8y.png)when seeing messages, ctrl+c leave logs.now synced ready go, update account broadcast network. do that, need run wallet.`./run.sh wallet`the wallet prompt set password. ```set_password hunter2 (set own password)unlock hunter2import_key 5yourwitnessaccountsactiveprivatekey```you find peakd https://peakd.com/@yourusername/permissions![](https://i.imgur.com/lcrgkoc.png)remember `import_key` witnessing chain **not** one generated tutorial.now, journey supporting stability, longevity blockchain.```update_witness witnessname witnessurl stmxxxxxxx {account_creation_fee:3.000 hive,maximum_block_size:65536,sbd_interest_rate:0} true````witnessname` account.`witnessurl` preferably, announcement post.`stmxxxxxxx`= paste generated.you **hiveblocks.com/@yourusername** everything worked transaction this;![](https://i.imgur.com/1jol29x.png)congratulations! now you!### want don't thing servers!best way situation purchasing pre-replayed [privex.io](privex.io) who both scripts used tutorial. option best users knowledge excellent customer support during their becoming witness.after order vps-hive from, receive mail containing information connect login server.after in, what first, switch user `ubuntu` `root`, type,`su`then, ```./run.sh remote_walletsuggest_brain_key```then, `nano data/witness_node_data_dir/config.ini` ![](https://i.imgur.com/6ej7jfu.png)then start` wait sync, wallet` shown previously.let me questions!_____post scriptum![image.png](https://files.peakd.com/file/peakd-hive/deathwing/y9kdqlv8-image.png)remember voting witnesses important. would appreciate could vote me.use peakd's page clicking [here](https://peakd.com/witnesses).use hivesigner [here](https://deathwing.me/witness).thank you! see: how mira? @deathwing"
    } ,
  
    
    
    
    
    
    {
      "author"    : "inertia",
      "title"    : "Jekyll::Hive",
      "category" : "tools, ruby, jekyll",
      "url"      : "/tools/ruby/jekyll/2020/04/01/jekyll-hive.html",
      "date"     : "2020-04-01 16:43:15 -0700",
      "desc"     : "Liquid tag for displaying Hive content in Jekyll sites: `{% hive %}`.",
      "content"  : "# [jekyll::hive](https://github.com/inertia186/jekyll-hive)liquid tag for displaying hive content in jekyll sites: `{% %}`.## installationadd this line to your application's gemfile:```bashgem 'jekyll-hive'```and then execute:```bashbundle```or install it yourself as:```bashgem jekyll-hive```then add the following site's `_config.yml`:```ymlplugins: - jekyll-hive```💡 if you are using a version less than 3.5.0, use `gems` key instead of `plugins`.## usageuse as follows pages, posts and collections:```liquid{% author/permlink %}```this will place associated on page.## buildwhen building site with jekyll, can continue default command:```bashjekyll build```if would like provide an alternate node:```bashnode_url=https://anyx.io build```## contributing1. fork ( https://github.com/inertia186/jekyll-hive/fork )2. create feature branch (`git checkout -b my-new-feature`)3. commit changes -am 'add some feature'`)4. push origin my-new-feature`)5. new pull request---## get touch!if you're jekyll::hive, i'd love hear from you. drop me tell what think! i'm [@inertia](https://hive.blog/@inertia) hive. ## licensei don't believe intellectual property. do, consider jekyll::hive licensed under creative commons [![cc0](http://i.creativecommons.org/p/zero/1.0/80x15.png)](http://creativecommons.org/publicdomain/zero/1.0/) license. see: by @inertia"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "Update for beem: fixing author/curation reward calculation and more",
      "category" : "howto, beem, python, curation",
      "url"      : "/howto/beem/python/curation/2020/04/01/update-for-beem-fixing-author-curation-reward-calculation-and-more.html",
      "date"     : "2020-04-01 15:10:03 -0700",
      "desc"     : "## Repositoryhttps://github...",
      "content"  : "## repositoryhttps://github.com/holgern/beem![beem-logo](https://cdn.steemitimages.com/dqmcrrwlpsywsymierfp6um6mejemngjn9rxw7audjqtdgb/beem-logo)[beem](https://github.com/holgern/beem) is a python library for steem and hive. the current version 0.22.12.there also discord channel beem: https://discord.gg/4hm592vthe newest beem can be installed by:```pip install -u beem```check that you are using hive nodes. following command ```beempy updatenodes --hive```updates nodelist uses only list of nodes checked with```beempy config```and```beempy currentnode```shows currently connected node.## changelog versions 0.22.12this update fixed vote classes, curation/author reward calculation, discussions classes get_feed get_account_votes accounts.* add node* now discussion_by_feed* has been fixed* activevotes raw_data parameter added to all discussions* beempy curation, votes pending table improved* fix curation author calculation## fixing integration testsafter remaining problems in vote, comment account, 462 tests have finally passed.```========== passed, 27 skipped, 13 warnings 1551.63s (0:25:51) ===========the ci may fail from time due node outs.``` view outgoing incoming with beempyoutgoing -o -d 1 holger80``````+----------+------------------+---------+--------------+---------------+---------+--------+| voter | votee sbd/hbd rshares percent weight |+----------+------------------+---------+--------------+---------------+---------+--------+| holger80 pibara 1.0 $ 0 days 23:9 2348837832917 7500 911136 || pennsif 1.34 21:17 3123742413620 9955 390108 nonameslefttouse 1.08 18:45 2517726726913 8000 323940 gtg 1.4 12:17 3279925264141 10000 281332 quochuy 1.39 10:42 3259050022456 216722 steemcleaners 0.68 10:30 1599714528677 5000 358546 dsound 1.03 9:30 2396854864854 238509 abitcoinskeptic 1.35 8:49 3167311773888 847601 jga 6:6 1590352821718 151064 creary 0.34 5:50 789079645344 2500 317630 muelli 4:50 1584677025773 364432 emrebeyler 1.01 4:28 2360837888866 649503 denmarkguy 0.57 3:20 1331770685831 4251 377530 inertia 1.02 0:40 2386404162091 256582 stellabelle 0.94 0:34 2195712375512 7000 524304 |+----------+------------------+---------+--------------+---------------+---------+--------+```where d limit shown days.incoming seen -i holger80``````+---------------+----------+---------+--------------+---------------+---------+--------+| |+---------------+----------+---------+--------------+---------------+---------+--------+| kaymay 0.0 23:54 138492921 7 barton26 0.01 23:4 18413631854 936 dhimmel 2.0 18:59 4675461211716 235183 joey-fancy 17:3 5993194991 298 cubapl 12:52 3051877392 152 1.13 10:0 2646991658036 130928 saboin 0.16 8:36 367812173322 4500 18068 netuoso 0.33 2:39 765623609156 38036 memehub 1.15 2:5 2685197932823 132357 crokkon 0.02 1:57 40344164439 1977 dustsweeper 0.04 1:36 89501844457 2000 4393 |+---------------+----------+---------+--------------+---------------+---------+--------+```## rewardsthis used calculating rewards posts, comments votes. conversion usd done by latest internal market price hive/hbd day median hive/usd.pending posts by```beempy --post holger80``````+----------+-----------+-----------+------------+--------------+| cashout hbd hp liquid invested |+----------+-----------+-----------+------------+--------------+| 4.0 16.389 84.044 14.06 16.39 0.9 16.347 83.830 14.02 16.35 sum 32.74 167.87 28.08 |+----------+-----------+-----------+------------+--------------+````--author`, `--permlink` or `--title` set show more information.the `--days` limits duration `--from` sets start point days. before 6 viewed (this call takes while):``` --curation --author --from --days holger80``````showing @holger80+-----------------+----------+----------+----------+------------+--------------+| |+-----------------+----------+----------+----------+------------+--------------+| anthonyadavisii 0.000 3.953 0.00 0.77 arcange 2.708 0.53 4.148 0.81 anomadsoul 0.8 5.438 1.06 exhaust 0.7 1.819 0.35 bluerobo 3.372 0.66 therealwolf 9.194 1.79 markkujantunen 0.6 2.717 4.727 0.92 moon32walker 2.043 0.40 stateofthedapps 0.5 1.780 nateaguila 4.630 0.90 jrvacation 3.617 0.71 eonwarped 0.3 2.591 0.51 steemillu 0.1 1.760 hiq 5.430 fullnodeupdate 1.585 0.31 yabapmatt 3.789 0.74 1.144 0.22 - 66.44 12.96 |+-----------------+----------+----------+----------+------------+--------------+```the given values estimate, e.g. `@therealwolf/dhive` was estimated, but received 0.927 hp.![image.png](https://files.peakd.com/file/peakd-hive/holger80/mcnvkk31-image.png)the last 24 h by``` holger80````--comment` on comments.## performance permlinkthe calculated already paid-out posts.the shows `holger80` `@therealwolf/dhive`.```beempy -a @therealwolf/dhive``````+------------+-------------+------------+-----------------+-----------+-------------+| voting early loss |+------------+-------------+------------+-----------------+-----------+-------------+| 27.4 min 0.328 0.926 55.0 % high. 688.7 10.198 21.750 41.6 cur. 4.3 0.104 0.014 0.909 170.1 36.675 0.514 86.581 45.97 |+------------+-------------+------------+-----------------+-----------+-------------+````the percentage dividing power through value higher than 0.2 --min-vote @therealwolf/dhive``````+-----------------+-------------+------------+-----------------+-----------+-------------+| |+-----------------+-------------+------------+-----------------+-----------+-------------+| karja 3.9 0.223 0.051 1.875 164.2 oflyhigh 4.5 1.969 0.217 11.331 112.2 deanliu 1.077 0.108 5.063 91.7 helene 0.518 0.052 2.140 80.6 xiaohui 0.394 0.035 1.535 76.0 russia-btc 17.1 0.241 0.938 75.9 17.9 2.006 6.731 65.4 lunaticpandora 58.0 0.391 0.985 49.2 solarwarrior 58.1 0.634 1.509 46.4 diggndeeper.com 64.1 0.473 0.990 40.9 fredrikaa 80.0 0.739 1.445 38.1 braaiboy 0.259 0.482 36.3 asgarth 149.3 0.825 1.415 33.4 good-karma 375.8 0.702 1.110 30.8 nextcolony 763.6 0.209 0.361 33.7 steemik 1247.0 0.737 1.248 33.0 smartsteem 6575.2 7.220 10.606 28.6 tombstone 6575.3 3.967 4.824 23.7 epicdice 0.246 0.319 25.3 |+-----------------+-------------+------------+-----------------+-----------+-------------+```this works posts. `--min-vote` influences highest curation. this useful, as low high performance, which cannot archived i see optimum around 4.2 minutes 0.4 hbd.```beempy @emrebeyler/dpoll-beneficiary-update``````curation @emrebeyler/dpoll-beneficiary-update+------------+-------------+------------+-----------------+-----------+-------------+| 5.1 1.008 4.497 87.0 201.6 12.492 22.977 35.9 0.507 0.081 2.760 106.2 16.314 0.159 38.316 45.76 |+------------+-------------+------------+-----------------+-----------+-------------+```****if like what do, consider casting me witness [hivesigner](https://hivesigner.com.com/sign/account-witness-vote?witness=holger80&amp;approve=1) [peakd](https://peakd.com/witnesses)*. see: author/curation calculation @holger80more about"
    } ,
  
    
    
    
    
    
    {
      "author"    : "holger80",
      "title"    : "Use beempy to access the internal HIVE/HBD market",
      "category" : "howto, beem, python, market, hbd",
      "url"      : "/howto/beem/python/market/hbd/2020/03/24/use-beempy-to-access-the-internal-hive-hbd-market.html",
      "date"     : "2020-03-24 13:57:21 -0700",
      "desc"     : "![image.png](https://files....",
      "content"  : "![image.png](https://files.peakd.com/file/peakd-hive/holger80/vun5k1ut-image.png)[source](https://pixabay.com/de/photos/%c3%a4pfel-bauernmarkt-gesch%c3%a4ft-kaufen-1841132/)although not visible, the internal market is already working and hbd can be exchanged for hive.## prepare beempyyou need to have an up date [beem](https://github.com/holgern/beem) version 0.22.8```beempy updatenodes --hivebeempy currentnode```should return now```+----------+-----------------------+| key | value |+----------+-----------------------+| node-url https://api.hive.blog || 0.23.0 hive true |+----------+-----------------------+```## check orderbook```beempy orderbook --chart`````` 1701.93 $ ┼ 1595.59 ┼╮ 1489.25 ┤╰─╮ ┊ 1382.90 ┤ ╰─╮ ╭─────── 1276.56 ╰╮ ╭────╯ 1170.22 ╰───╮ ╭╯ 1063.87 │ 957.53 851.19 ╭─╯ 744.84 638.50 532.16 425.81 ╰─────╮ 319.47 ╰────╮ 213.12 106.78 ╰╮┊ 0.44 ╰────╯```and ``` beempy tradehistory```returns last trades as plot``` trade history 2020-03-17t20:26:22 - 2020-03-24t20:26:22hive/hbd 0.32 0.31 ╭╮ 0.30 │╰╮ 0.29 0.28 0.27 ╭─ 0.26 ╭╮╭╯ │╭──╮ ╭╯│ │││ ││ ╰─╯ 0.25 ╭╯╰╯ ╰╯ 0.24 0.23 ││╭╯ 0.22 │╰╯ 0.21 0.20 0.19 0.18 0.17 ┼───────╯```a short info obtained by```beempy ticker``````+----------------+-------------------+| |+----------------+-------------------+| highest_bid 0.253913 hive/hbd latest 0.300000 lowest_ask 0.253994 percent_change 0.00 % sbd_volume 199.189 steem_volume 765.713 |+----------------+-------------------+```## let's some hivefirst we should our balance:```beempy balance holger80```and then start sell 1 hbd```beempy -a holger80 hbd```i'm now asked if price ok:```is following ok: hbd/hive [y/n]:```and enter my active wif:```password unlock wallet or posting/active wif:```i see broadcasted op:```wif accepted!{ expiration: 2020-03-24t20:34:03, ref_block_num: 63124, ref_block_prefix: 2805668693, operations: [ limit_order_create, { owner: holger80, orderid: 3815817900, amount_to_sell: 1.000 hbd, min_to_receive: 3.938 hive, fill_or_kill: false, 2020-03-31t20:33:33 } ] ], extensions: [], signatures: 206b30dd79130814b9f14468c573fd9154020148e43481f810343964b93bcf8c1865927d49d1e3b521ff9a2af12bd5461c2edee220b64f59108c04413c3b88cbb0 ]}```and open orders:```beempy openorders ``````+------------+---------------------+------------------------------------------+----------+| orderid created order account |+------------+---------------------+------------------------------------------+----------+| 3815817900 2020-03-24t20:33:33 @ 0.253936 |+------------+---------------------+------------------------------------------+----------+```## cancel ordersi ```instead of selling i also buy hive```after checking entering wif, placed.## using fulfill orderslet's first 5 -l 5``````+--------------+----------------------------------------------+--------------+-------------------------------------------+| asks sum orders bids |+--------------+----------------------------------------------+--------------+-------------------------------------------+| 66.15 260.432 66.148 0.253993 1.725 0.438 240.43 637.769 174.284 0.273271 0.70 1.032 0.262 0.253876 267.93 100.000 27.500 0.275000 0.91 0.842 0.211 0.250594 283.93 53.344 16.002 0.299978 0.004 0.001 0.250000 296.29 41.191 12.357 0.299993 6.64 23.778 5.731 0.241021 |+--------------+----------------------------------------------+--------------+-------------------------------------------+```i shown in column fulfilled without waiting. try:``` 0.253993```this time, wif asking price. empty this time:```beempy ``````+---------+---------+-------+---------+| |+---------+---------+-------+---------++---------+---------+-------+---------+```the blockexplorer shows that was fulfilled:![image.png](https://files.peakd.com/file/peakd-hive/holger80/fpiilfla-image.png)i hope help long has no interface. see: use access by @holger80more about python"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "The Hive Blockchain Has Launched Successfully! Recap and Helpful Information",
      "category" : "news",
      "url"      : "/news/2020/03/21/the-hive-blockchain-has-launched-successfully-recap-and-helpful-information.html",
      "date"     : "2020-03-21 10:05:33 -0700",
      "desc"     : "# Hello there, Hive. What a...",
      "content"  : "# hello there, hive. what a day we've had!***welcome to the new hive blockchain.*** been up and running for more than 24 hours now, so this is good time take quick look at launch what's coming immediate future.![#hivehasarrived ... cool asset provided by community member @derangedvisions](https://files.peakd.com/file/peakd-hive/hiveio/e9gxfkax-hivehasarrived.gif)## blockchain went incredibly smoothly given pressure effort involved in getting hardfork ready such tight window.the passionate team of developers who above beyond produce changes needed did an amazing job (and got very, very little sleep.) hardforks always have chance finding edge case when they go live, being prepared anything necessary. came alive, slowly worked through operations that done, produced first blocks transactions, has moving steadily ever since. ***no stalls or crashes, fast blocktimes, all good.*** it huge win whole start us off!#### short post with few important points information. weeks, there are number things need be addressed we'll posting about here:- will future upgrade hive, make some fixes, bring features online- those were skipped airdrop discussing script exclusions letting decide if tokens held reserve should distributed. we also talk dhf (decentralised funding), hivedao, how can used situation others help collect feedback- code repo open source public at: https://github.com/openhive-network/hive/releases . condenser (for front ends) on actively finish https://hive.blog/ mvp higher standard previous iterations, then public. as well.- ecosystem alive! it's still early, but many apps projects online, making sure spread word useful services your transition https://hiveprojects.io/ place submit own project, learn going around ### remember goal move towards ***true*** decentralized development, anyone contribute whatever like! play work, you want see. #### ***a final notes:***- hive.blog wallets 🔜™️, wanting secure ways wallet [peakd.com](https://peakd.com/) wallet, well [hive vessel](https://github.com/netuoso/vessel/releases) available. familiar sites ported right you're okay waiting, options. started powerdown steem, hive! don't forget stop to.- **if already account waiting here hive!** [read depth our info post](https://peakd.com/communityfork/@hiveio/announcing-the-launch-of-hive-blockchain) refresher. new, onboard someone check signup options https://signup.hive.io/. available future- only start!- **key safety matters!** please consider using keychain (still under review app stores, here's [great tutorial](https://peakd.com/hive/@themarkymark/how-to-install-hive-keychain)) [hivesigner](https://peakd.com/hive/@good-karma/hivesigner-released-and-ready) (the version steemconnect). both supported integrated them, alongside their peaklock. most frontends begun work *do* key management solution like one these.- **remember witness votes from steem carry over hive.** whichever use, part governance, excellent fresh discover dedicated witnesses ecosystems. people hard life, witnesses. often feel like, vote according see support. amount witnesses, consensus (top twenty) backup, **all** considerations believe fit.- **exchanges working running.** ionomy full, limited fee free trading enabled. other exchanges listing pairs online. 6 airdrops, them listing. however, these do done safely, lot behind scenes tech support, note **this process while.**## buzzing, that's thanks you. spirit energy chain invigorating.... wings.🐝 ***edit:*** fumble fingered worker bee refresh while was excited forgot decline rewards. powered no longer needs delegation, continue rewards future. sorry!&lt;/div&gt; see: launched successfully! recap helpful information @hiveio"
    } ,
  
    
    
    
    
    
    {
      "author"    : "penguinpablo",
      "title"    : "HiveBlockExplorer.com is now online",
      "category" : "news, projects",
      "url"      : "/news/projects/2020/03/21/hiveblockexplorer-com-is-now-online.html",
      "date"     : "2020-03-21 01:34:24 -0700",
      "desc"     : "![image.png](https://cdn.st...",
      "content"  : "![image.png](https://cdn.steemitimages.com/dqmcvuvytzzez5qglvgnti5gejynex7t8wdwp4cfj33kaju/image.png)here you go!i've finished migrating steemblockexplorer.com to hiveblockexplorer.com. the website is now online :-)## https://www.hiveblockexplorer.comhttps://www.hiveblockexplorer.com/@penguinpablo# hive on :-)---visit my websites:[hiveblockexplorer.com](https://hiveblockexplorer.com) - [steemnow.com](https://www.steemnow.com) [coinmarkets.today](https://coinmarkets.today)¯___(ツ)____/¯ *follow me @penguinpablo* see: hiveblockexplorer.com by @penguinpablo"
    } ,
  
    
    
    
    
    
    {
      "author"    : "arcange",
      "title"    : "HiveSQL is ready with all the Hive blockchain data",
      "category" : "news, sql, database",
      "url"      : "/news/sql/database/2020/03/20/hivesql-is-ready-with-all-the-hive-blockchain-data.html",
      "date"     : "2020-03-20 16:25:36 -0700",
      "desc"     : "![](https://files.peakd.com...",
      "content"  : "![](https://files.peakd.com/file/peakd-hive/arcange/4wgpuhop-hivesql_banner.png)the hive blockchain is alive! congratulations to all the hard workers who lately have been working night and day make our beloved decentralized again.i am happy announce that hivesql, a publicly available sql database with data, now available, in synch ready support many (d)apps analysts rely on it.### better performances for futureicing cake, hivesql benefits from whole new infrastructure even more efficient. memory storage capacity **doubled** computing has also increased.hivesql face future most demanding users!### what about steemsql?steemsql will continue run at least until end of month, longer if active subscriptions cover costs its infrastructure. this allow those wish see going old steem world.### subscriptionsthe existing steemsql **not** carried over hive. it was too much hassle handle addition creating migrating everything however, they are only steemsql.to you get started as quickly possible set up your applications processes, users had an subscription receive **one free subscription**. check wallet **new** credentials.the creation renewal process same before use **hbd** token.### information coming soona website created https://hivesql.io but still raw state. i update soon concerning be published there.you can subscribe want [hivesql community](/c/hive-146513) stay updatedthat’s today. last few days tough need some sleep now. **enjoy tools**hive alive!---### me my work community.### [vote witness ](https://hivesigner.com/sign/account-witness-vote?witness=arcange&amp;approve=1) see: data by @arcange"
    } ,
  
    
    
    
    
    
    {
      "author"    : "hiveio",
      "title"    : "Announcing the Launch of Hive Blockchain",
      "category" : "news",
      "url"      : "/news/2020/03/17/announcing-the-launch-of-hive-blockchain.html",
      "date"     : "2020-03-17 16:30:54 -0700",
      "desc"     : "After weeks of hard teamwork, we're announcing the launch of the new Hive blockchain.",
      "content"  : "![](https://files.steempeak.com/file/steempeak/hiveio/4waixf2y-opengraph3x.png)# the buzz is real! **after weeks of hard teamwork, we're announcing launch new hive blockchain.**this an exciting time, and opportunity to channel love power a resilient tenacious community into collaborative development for future social blockchain.hive passionate effort, created by large group steem members who have long looked move towards true decentralization help develop code base. years distribution issues reliance on central entity infrastructure has been at heart revolution sorts, blockchain culmination stepping up meet challenge returning shared values protecting celebrating vibrant that grown around our ecosystem.# check out faq below info hive.## what why was it created?**hive dpos governance implementing fork existing code.**the intention this community-driven support build strong made ecosystem so diverse exciting. direction steps away from burden steemit inc. ninja-mined stake, which impacted term ability work further years.hive begun with talented committed team developers are already paving way implement much awaited improvements robust developments blockchain. see – devs business owners end users forward embrace contribute potential hive. renewed spirit, combined codebase focus working more closely entire ecosystem, key success possibilities blockchain.## difference between steem?hive runs completely independently chain. all valid accounts will receive airdrop *(more details below)*while chain code, take responsibility something even better. initial be direct copy few small upgrades, allow us get back discussion development, needed changes, most wanted chain-level features. spirit goal always single point authority, capitalize encourage gathered in community. drawing huge range talent accelerate improve communication, return ease use, onboarding, marketing. desire better connect people via never lost, it's makes now.## happens when launches?when launches, appear network as well. you two accounts: current one steem, account, pre-populated your content information. history these same, but snapshot onward, independent another. actions not reflected other. means transactions belong whichever account use. #### if post hive, ***it show up*** vice versa. chains another after launch. ## launch?**the 10am est/14:00 utc, friday, march 20th.** (*countdown https://hive.io/*) magic happen week! place time where can i find hive's code?here public open source repo hive:### https://github.com/openhive-network/hive/releases## holder, do airdrop?all stakeholders perfectly mirrored balance their holdings coin. include matching amounts liquid power, sbd. other state data, such claimed accounts, delegations, etc. onto hive.for example: 10 5 sbd, 1000 sp, hbd, hp.**you need claim anything.** simply log coins wallet able start using blockchain.#### *only* performed version (as date post). any emergency hardforks prior eligible. further, exchange participates hardfork null void participate its off-chain holding customers.## how access my send coins?you logging keys. first frontend available https://hive.blog. currently pointed blockchain, switched time. popular interfaces completing switch over or finishing products, they ready use!## behind hive?there 30 experienced contributing alongside many multiple aspects individuals may announce participation through own future. therefore all. ***hive remain source, everyone wants blockchain.*** testnet published, feel free comment here would like we'll reach out. full thursday, 19th, *updates account.*## added?the important decisions chance proper feedback successfully launch, there some addressed immediately, including prevention exchanges participating attacks we witnessed blockchain).to prevent (or funding) attacks, day delay added crediting vests witness sps votes. changes developed community.this “powers up” stakes funds, before those used voting (witnesses) sps. actions, no immediately available.this mitigate risk while continuing system whole, without deciding collection wider input. included airdrop?the continue moving decentralization, showcased same goals. only containing inc actively contributed (and publicly declared for) centralization still choose part exist, intial airdrop.## ***important notes cryptocurrency list steem***#### plan taking customer’s credit them similar amount (yes/no)?**yes**) want airdrop, please notify distribute pro-rata basis customers (no fixed timeline required), corresponds hive.**no**) notification steem-holding forewarn participating, temporarily withdraw date, wish airdrop.if possible, let know **thursday, 19** airdrop.you leaving message official contact liaisons:- **gandalf (located europe)***telegram*: @gandalf_the_grey*email*: gandalf@hive.expert - **david jefferys us)***telegram*: @djefferysdirect follow-ups made, affirmative response days assume doesn’t customer balances.# looking hive!there's lot come during extremely busy week, updated reflect information becomes available.### thank community, being buzz. what's ahead involved... #hiveisalive! # https://hive.io/ see: @hiveio"
    } 
  
]
