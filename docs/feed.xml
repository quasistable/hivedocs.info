<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://hivedocs.info/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hivedocs.info/" rel="alternate" type="text/html" /><updated>2020-04-05T20:37:00-07:00</updated><id>https://hivedocs.info/feed.xml</id><title type="html">Hive Chain Documentation</title><subtitle>Your resource for various levels of Hive Documentation.</subtitle><author><name>site curated by: @inertia</name></author><entry><title type="html">SteemConnect notice</title><link href="https://hivedocs.info/news/hivesigner/2020/04/05/steemconnect-notice.html" rel="alternate" type="text/html" title="SteemConnect notice" /><published>2020-04-05T12:07:21-07:00</published><updated>2020-04-05T12:07:21-07:00</updated><id>https://hivedocs.info/news/hivesigner/2020/04/05/steemconnect-notice</id><content type="html" xml:base="https://hivedocs.info/news/hivesigner/2020/04/05/steemconnect-notice.html">&lt;p&gt;In this post we would like to update everyone about discontinuation of &lt;a href=&quot;https://steemconnect.com&quot;&gt;SteemConnect&lt;/a&gt;.
It has been incredible few years serving all users and dapps on Steem, but now that we have migrated to &lt;a href=&quot;https://hive.io&quot;&gt;Hive&lt;/a&gt; as &lt;a href=&quot;https://hivesigner.com&quot;&gt;Hivesigner&lt;/a&gt;. It is time to focus our time and effort making &lt;a href=&quot;https://hivesigner.com&quot;&gt;Hivesigner&lt;/a&gt; the best authentication service, it can be on &lt;a href=&quot;https://hive.io&quot;&gt;Hive&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;sunset-date&quot;&gt;Sunset date&lt;/h1&gt;

&lt;p&gt;We are setting a date to &lt;strong&gt;stop &lt;a href=&quot;https://steemconnect.com&quot;&gt;SteemConnect&lt;/a&gt; services on 1st June, 2020&lt;/strong&gt;. 
We kindly request all Dapp developers to plan and inform their users about changes.&lt;/p&gt;

&lt;h1 id=&quot;migration-options&quot;&gt;Migration options&lt;/h1&gt;

&lt;p&gt;We will actively be improving &lt;a href=&quot;https://hivesigner.com&quot;&gt;Hivesigner&lt;/a&gt; and encourage developers to build on &lt;a href=&quot;https://hive.io&quot;&gt;Hive&lt;/a&gt;. But if for some reason you want to stay on &lt;a href=&quot;https://steem.io&quot;&gt;Steem&lt;/a&gt;, please migrate to some other fork of &lt;a href=&quot;https://steemconnect.com&quot;&gt;SteemConnect&lt;/a&gt; - for example &lt;a href=&quot;https://steemlogin.com&quot;&gt;SteemLogin&lt;/a&gt;. &lt;strong&gt;&lt;em&gt;We are not in any way connected with any forks, as always do your own research, audit and security of new forks.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;hivesigner-development&quot;&gt;Hivesigner development&lt;/h1&gt;

&lt;p&gt;For all new developers, visitors, &lt;a href=&quot;https://steemconnect.com&quot;&gt;SteemConnect&lt;/a&gt; will be redirecting everyone to &lt;a href=&quot;https://hivesigner.com&quot;&gt;Hivesigner&lt;/a&gt; homepage and help them get started with development on &lt;a href=&quot;https://hive.io&quot;&gt;Hive&lt;/a&gt;. We will be adding FAQ and more detailed documentation on How to integrate &lt;a href=&quot;https://hivesigner.com&quot;&gt;Hivesigner&lt;/a&gt; to your website, How to authenticate with &lt;a href=&quot;https://chrome.google.com/webstore/detail/hivesigner/ophihnhnfgcmhpbcennhppicomdeabip&quot;&gt;Hivesigner extension&lt;/a&gt;, How to sign transactions securely, etc. We have published roadmap and proposal to support continuous development of the project. Please read more &lt;a href=&quot;https://esteem.app/hive/@good-karma/hivesigner-ongoing-development-and-improvement&quot;&gt;about it here and support our effort&lt;/a&gt; bringing secure and social authentication to the masses.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5B88%5D&amp;amp;approve=true&quot;&gt;Vote for Hivesigner Proposal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Github: &lt;a href=&quot;https://github.com/ledgerconnect/hivesigner&quot;&gt;ledgerconnect/hivesigner&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Discord support: https://discord.gg/pNJn7wh&lt;/li&gt;
  &lt;li&gt;Email: &lt;code class=&quot;highlighter-rouge&quot;&gt;hello@hivesigner.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/@good-karma/steemconnect-notice&quot;&gt;SteemConnect notice&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@good-karma&quot;&gt;@good-karma&lt;/a&gt;
&lt;/p&gt;</content><author><name>good-karma</name></author><summary type="html">In this post we would like to update everyone about discontinuation of SteemConnect. It has been incredible few years serving all users and dapps on Steem, but now that we have migrated to Hive as Hivesigner. It is time to focus our time and effort making Hivesigner the best authentication service, it can be on Hive. Sunset date We are setting a date to stop SteemConnect services on 1st June, 2020. We kindly request all Dapp developers to plan and inform their users about changes. Migration options We will actively be improving Hivesigner and encourage developers to build on Hive. But if for some reason you want to stay on Steem, please migrate to some other fork of SteemConnect - for example SteemLogin. We are not in any way connected with any forks, as always do your own research, audit and security of new forks. Hivesigner development For all new developers, visitors, SteemConnect will be redirecting everyone to Hivesigner homepage and help them get started with development on Hive. We will be adding FAQ and more detailed documentation on How to integrate Hivesigner to your website, How to authenticate with Hivesigner extension, How to sign transactions securely, etc. We have published roadmap and proposal to support continuous development of the project. Please read more about it here and support our effort bringing secure and social authentication to the masses. Vote for Hivesigner Proposal Github: ledgerconnect/hivesigner Discord support: https://discord.gg/pNJn7wh Email: hello@hivesigner.com See: SteemConnect notice by @good-karma</summary></entry><entry><title type="html">Tutorial: Building A Dice Game Contract With Hive Stream</title><link href="https://hivedocs.info/howto/dapps/nodejs/2020/04/04/tutorial-building-a-dice-game-contract-with-hive-stream.html" rel="alternate" type="text/html" title="Tutorial: Building A Dice Game Contract With Hive Stream" /><published>2020-04-04T03:59:09-07:00</published><updated>2020-04-04T03:59:09-07:00</updated><id>https://hivedocs.info/howto/dapps/nodejs/2020/04/04/tutorial-building-a-dice-game-contract-with-hive-stream</id><content type="html" xml:base="https://hivedocs.info/howto/dapps/nodejs/2020/04/04/tutorial-building-a-dice-game-contract-with-hive-stream.html">&lt;p&gt;Hot off the heels of announcing &lt;a href=&quot;https://peakd.com/hive-139531/@beggars/hive-stream-update-support-for-writing-custom-contracts-on-the-hive-blockchain&quot;&gt;some huge updates&lt;/a&gt; to Hive Stream which features the ability to write “smart” contracts, I promised a tutorial would be coming showing you how to write one and what could be more fitting than writing a contract for a dice game?&lt;/p&gt;

&lt;p&gt;Basing this off of the dice contract that Hive Engine ships with as an example, I’ve created a contract that accepts a roll value which needs to be above the server roll. By the end of this tutorial, you’ll have an understanding of how contracts are written (they’re just classes) and how you can create your own smart dApps using them.&lt;/p&gt;

&lt;p&gt;If you’re the kind of person who just wants to see the code, I have you covered. The code for the dice smart contract can be found &lt;a href=&quot;https://github.com/Vheissu/hive-stream/blob/master/src/contracts/dice.contract.ts&quot;&gt;here&lt;/a&gt;. It is written in TypeScript but resembles Javascript basically if you’re not familiar. This contract is based off of the dice contract in Hive Engine, except they’re both fundamentally different in how they’re pieced together.&lt;/p&gt;

&lt;h2 id=&quot;install-the-hive-stream-package&quot;&gt;Install the Hive Stream package&lt;/h2&gt;

&lt;p&gt;In your application, install the &lt;code class=&quot;highlighter-rouge&quot;&gt;hive-stream&lt;/code&gt; package by running &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install hive-stream&lt;/code&gt; it’s a published package on Npm. We also want to install seedrandom and bignumber.js as well since those are used in our contract code.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install seedrandom bignumber.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;writing-the-contract&quot;&gt;Writing the contract&lt;/h2&gt;

&lt;p&gt;Save the following as &lt;code class=&quot;highlighter-rouge&quot;&gt;dice.contract.js&lt;/code&gt; in your application.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Streamer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hive-stream&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;seedrandom&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;seedrandom&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BigNumber&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bignumber.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CONTRACT_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hivedice&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ACCOUNT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Replace with the account&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TOKEN_SYMBOL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;HIVE&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HOUSE_EDGE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MIN_BET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MAX_BET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Random Number Generator&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousBlockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;blockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transactionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;seedrandom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousBlockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transactionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomRoll&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomRoll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Valid betting currencies&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VALID_CURRENCIES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;HIVE&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DiceContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;blockNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;blockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;previousBlockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;transactionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Runs every time register is called on this contract&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Do setup logic and code in here (creating a database, etc)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Runs every time unregister is run for this contract&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Close database connections, write to a database with state, etc&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Updates the contract with information about the current block&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// This is a method automatically called if it exists&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;updateBlockInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blockNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;blockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previousBlockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transactionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Lifecycle method which sets block info &lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blockNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;blockNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blockId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;blockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousBlockId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previousBlockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transactionId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transactionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Get Balance
     * 
     * Helper method for getting the contract account balance. In the case of our dice contract
     * we want to make sure the account has enough money to pay out any bets
     * 
     * @returns number
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getBalance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAccounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ACCOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?.[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Roll
     * 
     * Automatically called when a custom JSON action matches the following method
     * 
     * @param payload 
     * @param param1 - sender and amount
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;roll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Destructure the values from the payload&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;roll&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// The amount is formatted like 100 HIVE&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// The value is the first part, the currency symbol is the second&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Parse the numeric value as a real value&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountParsed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Format the amount to 3 decimal places&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountFormatted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toFixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Trim any space from the currency symbol&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountCurrency&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`Roll: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; 
                     Amount parsed: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amountParsed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; 
                     Amount formatted: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amountFormatted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; 
                     Currency: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amountCurrency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Get the transaction from the blockchain&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transaction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTransaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blockNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transactionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Call the verifyTransfer method to confirm the transfer happened&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;verify&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;verifyTransfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;beggars&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Get the balance of our contract account&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBalance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Transfer is valid&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Server balance is less than the max bet, cancel and refund&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MAX_BET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Send back what was sent, the server is broke&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transferHiveTokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ACCOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`[Refund] The server could not fufill your bet.`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// Bet amount is valid&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amountParsed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MIN_BET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountParsed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MAX_BET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Validate roll is valid&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roll&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;roll&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lesserThan&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;greaterThan&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VALID_CURRENCIES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amountCurrency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// Roll a random value&lt;/span&gt;
                    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousBlockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blockId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transactionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                    &lt;span class=&quot;c1&quot;&gt;// Calculate the multiplier percentage&lt;/span&gt;
                    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;multiplier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BigNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;minus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HOUSE_EDGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;multipliedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dividedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                    &lt;span class=&quot;c1&quot;&gt;// Calculate the number of tokens won&lt;/span&gt;
                    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokensWon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BigNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amountParsed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;multipliedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toFixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BigNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ROUND_DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                    &lt;span class=&quot;c1&quot;&gt;// Memo that shows in users memo when they win&lt;/span&gt;
                    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;winningMemo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`You won &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tokensWon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TOKEN_SYMBOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. Roll: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, Your guess: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

                    &lt;span class=&quot;c1&quot;&gt;// Memo that shows in users memo when they lose&lt;/span&gt;
                    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;losingMemo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`You lost &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amountParsed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TOKEN_SYMBOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. Roll: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, Your guess: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

                    &lt;span class=&quot;c1&quot;&gt;// User won more than the server can afford, refund the bet amount&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tokensWon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transferHiveTokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ACCOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`[Refund] The server could not fufill your bet.`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                    &lt;span class=&quot;c1&quot;&gt;// If random value is less than roll&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;roll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;                            
                        &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transferHiveTokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ACCOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokensWon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TOKEN_SYMBOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;winningMemo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transferHiveTokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ACCOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;0.001&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TOKEN_SYMBOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;losingMemo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// Invalid bet parameters, refund the user their bet&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transferHiveTokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ACCOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`[Refund] Invalid bet params.`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// We need to refund the user&lt;/span&gt;
                    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transfer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transferHiveTokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ACCOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amountTrim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`[Refund] You sent an invalid bet amount.`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DiceContract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;adding-it-to-your-application&quot;&gt;Adding it to your application&lt;/h2&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;app.js&lt;/code&gt; and add in the following.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Streamer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hive-stream&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DiceContract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./dice.contract&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;streamer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Streamer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ACTIVE_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Needed for transfers&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;JSON_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;testdice&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Identifier in the custom JSON payloads&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Register the contract&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;streamer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerContract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hivedice&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DiceContract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Starts the streamer watching the blockchain&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;streamer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;test-it-out&quot;&gt;Test it out&lt;/h2&gt;

&lt;p&gt;In the contract code, put in your Hive username as the account and then transfer some Hive tokens to your own account (to you from you). Make sure you also supply your active key in the streamer constructor call in the above code (between the single quotes).&lt;/p&gt;

&lt;p&gt;In the memo field, enter stringified JSON like this:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;hiveContract&quot;:{&quot;id&quot;:&quot;testdice&quot;, &quot;name&quot;:&quot;hivedice&quot;,&quot;action&quot;:&quot;roll&quot;,&quot;payload&quot;:{&quot;roll&quot;:10 }}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The ID in the memo must match what is provided to the config property &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON_ID&lt;/code&gt; this is what it uses to match transactions. In this case, it is &lt;code class=&quot;highlighter-rouge&quot;&gt;testdice&lt;/code&gt; as the ID. The value &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; must match the value of the &lt;code class=&quot;highlighter-rouge&quot;&gt;registerContract&lt;/code&gt; method’s first argument value which is &lt;code class=&quot;highlighter-rouge&quot;&gt;hivedice&lt;/code&gt; in our example. The &lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt; property matches the function name in the contract and finally the &lt;code class=&quot;highlighter-rouge&quot;&gt;payload&lt;/code&gt; object is the data provided to the function call.&lt;/p&gt;

&lt;p&gt;I took the liberty of testing it out using my own account, to show you how the transfer for testing process works.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/beggars/am5ZNZEA-transfer.PNG&quot; alt=&quot;transfer.PNG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see from my two transactions showing the winning and losing, it works (which can be verified by checking my transactions on my wallet or blockchain explorer):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/beggars/HnyJ7w4d-transactions.PNG&quot; alt=&quot;transactions.PNG&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is just a rudimentary example of a basic dice contract. Some improvements might include support for direction as well as different odds, supporting different tokens and more. But, hopefully you can see what you can build with Hive Stream now.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/@beggars/tutorial-building-a-dice-game-contract-with-hive-stream&quot;&gt;Tutorial: Building A Dice Game Contract With Hive Stream&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@beggars&quot;&gt;@beggars&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/nodejs&quot;&gt;More About Node.js&lt;/a&gt;&lt;/p&gt;</content><author><name>beggars</name></author><summary type="html">Hot off the heels of announcing some huge updates to Hive Stream which features the ability to write “smart” contracts, I promised a tutorial would be coming showing you how to write one and what could be more fitting than writing a contract for a dice game? Basing this off of the dice contract that Hive Engine ships with as an example, I’ve created a contract that accepts a roll value which needs to be above the server roll. By the end of this tutorial, you’ll have an understanding of how contracts are written (they’re just classes) and how you can create your own smart dApps using them. If you’re the kind of person who just wants to see the code, I have you covered. The code for the dice smart contract can be found here. It is written in TypeScript but resembles Javascript basically if you’re not familiar. This contract is based off of the dice contract in Hive Engine, except they’re both fundamentally different in how they’re pieced together. Install the Hive Stream package In your application, install the hive-stream package by running npm install hive-stream it’s a published package on Npm. We also want to install seedrandom and bignumber.js as well since those are used in our contract code. npm install seedrandom bignumber.js Writing the contract Save the following as dice.contract.js in your application. import { Streamer, Utils } from 'hive-stream'; import seedrandom from 'seedrandom'; import BigNumber from 'bignumber.js'; const CONTRACT_NAME = 'hivedice'; const ACCOUNT = ''; // Replace with the account const TOKEN_SYMBOL = 'HIVE'; const HOUSE_EDGE = 0.05; const MIN_BET = 1; const MAX_BET = 10; // Random Number Generator const rng = (previousBlockId, blockId, transactionId) =&amp;gt; { const random = seedrandom(`${previousBlockId}${blockId}${transactionId}`).double(); const randomRoll = Math.floor(random * 100) + 1; return randomRoll; }; // Valid betting currencies const VALID_CURRENCIES = ['HIVE']; class DiceContract { client; config; blockNumber; blockId; previousBlockId; transactionId; create() { // Runs every time register is called on this contract // Do setup logic and code in here (creating a database, etc) } destroy() { // Runs every time unregister is run for this contract // Close database connections, write to a database with state, etc } // Updates the contract with information about the current block // This is a method automatically called if it exists updateBlockInfo(blockNumber, blockId, previousBlockId, transactionId) { // Lifecycle method which sets block info this.blockNumber = blockNumber; this.blockId = blockId; this.previousBlockId = previousBlockId; this.transactionId = transactionId; } /** * Get Balance * * Helper method for getting the contract account balance. In the case of our dice contract * we want to make sure the account has enough money to pay out any bets * * @returns number */ async getBalance() { const account = await this._client.database.getAccounts([ACCOUNT]); if (account?.[0]) { const balance = (account[0].balance as string).split(' '); const amount = balance[0]; return parseFloat(amount); } } /** * Roll * * Automatically called when a custom JSON action matches the following method * * @param payload * @param param1 - sender and amount */ async roll(payload, { sender, amount }) { // Destructure the values from the payload const { roll } = payload; // The amount is formatted like 100 HIVE // The value is the first part, the currency symbol is the second const amountTrim = amount.split(' '); // Parse the numeric value as a real value const amountParsed = parseFloat(amountTrim[0]); // Format the amount to 3 decimal places const amountFormatted = parseFloat(amountTrim[0]).toFixed(3); // Trim any space from the currency symbol const amountCurrency = amountTrim[1].trim(); console.log(`Roll: ${roll} Amount parsed: ${amountParsed} Amount formatted: ${amountFormatted} Currency: ${amountCurrency}`); // Get the transaction from the blockchain const transaction = await Utils.getTransaction(this._client, this.blockNumber, this.transactionId); // Call the verifyTransfer method to confirm the transfer happened const verify = await Utils.verifyTransfer(transaction, sender, 'beggars', amount); // Get the balance of our contract account const balance = await this.getBalance(); // Transfer is valid if (verify) { // Server balance is less than the max bet, cancel and refund if (balance &amp;lt; MAX_BET) { // Send back what was sent, the server is broke await Utils.transferHiveTokens(this._client, this._config, ACCOUNT, sender, amountTrim[0], amountTrim[1], `[Refund] The server could not fufill your bet.`); return; } // Bet amount is valid if (amountParsed &amp;gt;= MIN_BET &amp;amp;&amp;amp; amountParsed &amp;lt;= MAX_BET) { // Validate roll is valid if ((roll &amp;gt;= 2 &amp;amp;&amp;amp; roll &amp;lt;= 96) &amp;amp;&amp;amp; (direction === 'lesserThan' || direction === 'greaterThan') &amp;amp;&amp;amp; VALID_CURRENCIES.includes(amountCurrency)) { // Roll a random value const random = rng(this.previousBlockId, this.blockId, this.transactionId); // Calculate the multiplier percentage const multiplier = new BigNumber(1).minus(HOUSE_EDGE).multipliedBy(100).dividedBy(roll); // Calculate the number of tokens won const tokensWon = new BigNumber(amountParsed).multipliedBy(multiplier).toFixed(3, BigNumber.ROUND_DOWN); // Memo that shows in users memo when they win const winningMemo = `You won ${tokensWon} ${TOKEN_SYMBOL}. Roll: ${random}, Your guess: ${roll}`; // Memo that shows in users memo when they lose const losingMemo = `You lost ${amountParsed} ${TOKEN_SYMBOL}. Roll: ${random}, Your guess: ${roll}`; // User won more than the server can afford, refund the bet amount if (parseFloat(tokensWon) &amp;gt; balance) { await Utils.transferHiveTokens(this._client, this._config, ACCOUNT, sender, amountTrim[0], amountTrim[1], `[Refund] The server could not fufill your bet.`); return; } // If random value is less than roll if (random &amp;lt; roll) { await Utils.transferHiveTokens(this._client, this._config, ACCOUNT, sender, tokensWon, TOKEN_SYMBOL, winningMemo); } else { await Utils.transferHiveTokens(this._client, this._config, ACCOUNT, sender, '0.001', TOKEN_SYMBOL, losingMemo); } } else { // Invalid bet parameters, refund the user their bet await Utils.transferHiveTokens(this._client, this._config, ACCOUNT, sender, amountTrim[0], amountTrim[1], `[Refund] Invalid bet params.`); } } else { try { // We need to refund the user const transfer = await Utils.transferHiveTokens(this._client, this._config, ACCOUNT, sender, amountTrim[0], amountTrim[1], `[Refund] You sent an invalid bet amount.`); console.log(transfer); } catch (e) { console.log(e); } } } } } export default new DiceContract(); Adding it to your application Create a file called app.js and add in the following. import { Streamer } from 'hive-stream'; import DiceContract from './dice.contract'; const streamer = new Streamer({ ACTIVE_KEY: '', // Needed for transfers JSON_ID: 'testdice' // Identifier in the custom JSON payloads }); // Register the contract streamer.registerContract('hivedice', DiceContract); // Starts the streamer watching the blockchain streamer.start(); Test it out In the contract code, put in your Hive username as the account and then transfer some Hive tokens to your own account (to you from you). Make sure you also supply your active key in the streamer constructor call in the above code (between the single quotes). In the memo field, enter stringified JSON like this: {&quot;hiveContract&quot;:{&quot;id&quot;:&quot;testdice&quot;, &quot;name&quot;:&quot;hivedice&quot;,&quot;action&quot;:&quot;roll&quot;,&quot;payload&quot;:{&quot;roll&quot;:10 }}} The ID in the memo must match what is provided to the config property JSON_ID this is what it uses to match transactions. In this case, it is testdice as the ID. The value name must match the value of the registerContract method’s first argument value which is hivedice in our example. The action property matches the function name in the contract and finally the payload object is the data provided to the function call. I took the liberty of testing it out using my own account, to show you how the transfer for testing process works. As you can see from my two transactions showing the winning and losing, it works (which can be verified by checking my transactions on my wallet or blockchain explorer): Conclusion This is just a rudimentary example of a basic dice contract. Some improvements might include support for direction as well as different odds, supporting different tokens and more. But, hopefully you can see what you can build with Hive Stream now. See: Tutorial: Building A Dice Game Contract With Hive Stream by @beggars</summary></entry><entry><title type="html">Hive workflow proposal</title><link href="https://hivedocs.info/howto/contribute/development/2020/04/03/hive-workflow-proposal.html" rel="alternate" type="text/html" title="Hive workflow proposal" /><published>2020-04-03T14:20:39-07:00</published><updated>2020-04-03T14:20:39-07:00</updated><id>https://hivedocs.info/howto/contribute/development/2020/04/03/hive-workflow-proposal</id><content type="html" xml:base="https://hivedocs.info/howto/contribute/development/2020/04/03/hive-workflow-proposal.html">&lt;p&gt;&lt;em&gt;Note: this post is primarily intended for Hive developers, but it may be of interest to other readers who are interested in the details of the software development process. I’ll make another post later with ideas about how general community members can become involved in the development process and how to go about submitting bug reports.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I propose we adopt a common workflow for most if not all Hive-related projects. This will make it easier for developers to collaborate on multiple projects with a minimum amount of friction.&lt;/p&gt;

&lt;p&gt;I believe the primary goals (in no particular order) of our workflow should be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create an easily findable list of hive-related tasks&lt;/li&gt;
  &lt;li&gt;prevent duplication of work effort&lt;/li&gt;
  &lt;li&gt;allow easy collaboration between multiple developers&lt;/li&gt;
  &lt;li&gt;establish a process for determining task priority&lt;/li&gt;
  &lt;li&gt;setup testing standards for tasks in each project&lt;/li&gt;
  &lt;li&gt;setup review standards for tasks in each project&lt;/li&gt;
  &lt;li&gt;ensure existence of easily findable development code in a functional/compilable state where developers can test their new code against potential interactions with other new code&lt;/li&gt;
  &lt;li&gt;ensure existence of easily findable production code which is safe to be deployed to the public&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are some of my initial proposals for how to achieve some of the above goals.&lt;/p&gt;

&lt;h1 id=&quot;creating-issues-for-new-hive-tasks&quot;&gt;Creating issues for new Hive tasks&lt;/h1&gt;

&lt;p&gt;When a new task comes up, create an issue in the appropriate project inside the Hive group.&lt;/p&gt;

&lt;h3 id=&quot;selecting-a-project-for-a-task-issue&quot;&gt;Selecting a project for a task (issue)&lt;/h3&gt;
&lt;p&gt;If it is not clear what project a task belongs to, or if the task belongs to no existing project, create an issue for it in the project called &lt;em&gt;Issues without projects yet&lt;/em&gt;. If this issue is later assigned to a specific project, create a corresponding new issue in the correct project and close the issue in &lt;em&gt;Issues without projects yet&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;describing-an-issue-with-labels&quot;&gt;Describing an issue with labels&lt;/h3&gt;

&lt;p&gt;Choose existing labels to describe the nature of the issue, such as “bug”, “enhancement”, “documentation”.  Currently we only have group-level labels. Generally group-level labels are preferred, unless you need labels that really only make sense for a specific project in the group.&lt;/p&gt;

&lt;h3 id=&quot;optional-assignment-of-a-person-to-a-task&quot;&gt;Optional assignment of a person to a task&lt;/h3&gt;

&lt;p&gt;The issue can be assigned at creation time to a specific developer, if you are self-assigning or you are assigning to someone you are confident will want to take on the task (in the latter case, you should probably also contact them directly about the new issue).&lt;/p&gt;

&lt;h1 id=&quot;using-boards-to-monitor-project-issues&quot;&gt;Using boards to monitor project issues&lt;/h1&gt;

&lt;p&gt;Using gitlab, each individual project in the Hive group has a “board” that shows the states of the project’s issues:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;open:&lt;/strong&gt; an issue exists, but no decision has yet been made to work on it&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;To Do:&lt;/strong&gt; decision has been made to do the task and it is awaiting someone to work on it, or is blocked by some other precursor task&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Doing:&lt;/strong&gt; one or more developers are currently working on issue&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Review:&lt;/strong&gt; work is done, and is awaiting review by an independent developer, after review is completed, the state will be changed to either To Do,  Doing, or closed&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;closed:&lt;/strong&gt; work has been completed and passed review&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When an issue is first created it will show up on the “open” list. Setting the appropriate label on the issue moves it from To Do, Doing, and Review. Closing the issues moves it to the closed list.&lt;/p&gt;

&lt;h1 id=&quot;using-group-level-board-to-monitor-all-workflow&quot;&gt;Using Group-level board to monitor all workflow&lt;/h1&gt;

&lt;p&gt;In addition to the project-level boards, there is a group-level board that aggregates the status of issues from all projects in the group: https://gitlab.syncad.com/hive/hive/-/boards&lt;/p&gt;

&lt;h1 id=&quot;process-for-setting-to-do-doing-and-review-status&quot;&gt;Process for setting To Do, Doing, and Review status&lt;/h1&gt;

&lt;p&gt;The process for setting the status of an issue will likely vary across projects. For example, if the project is a web site hosted by a specific entity, that entity may want to determine which issues should be worked on, who works on them, and how they are reviewed.&lt;/p&gt;

&lt;p&gt;Some core projects such as the blockchain code should also have more rigorous criterion for selection of which issues to work on and how those issues are reviewed, because of the potential ripple effects on other projects.&lt;/p&gt;

&lt;p&gt;The blockchain code is particular sensitive, as new features can easily have impacts on memory, disk, and CPU utilization that could increase the cost of operating a node.&lt;/p&gt;

&lt;p&gt;Similarly, changes to the commonly used libraries such as hive-js and financial-related projects such as wallet apps need close review to ensure no malicious code is injected.&lt;/p&gt;

&lt;h1 id=&quot;reference-issues-when-committing-associated-source-code-to-a-repository&quot;&gt;Reference issues when committing associated source code to a repository&lt;/h1&gt;

&lt;p&gt;It’s very useful to link all code changes to an issue when possible. When you make a code commit related to an issue, you can place a tag in your code commit comment that will link the commit to the issue it is related to. If you forget to do this when you commit the code, you can also manually update the issue afterward by adding a comment with a URL link to the commit.&lt;/p&gt;

&lt;h1 id=&quot;testing-requirements&quot;&gt;Testing requirements&lt;/h1&gt;

&lt;h3 id=&quot;unit-tests-and-image-tests&quot;&gt;Unit tests and image “tests”&lt;/h3&gt;

&lt;p&gt;One or more tests should generally be included with each code change, to verify that the code works properly, and to be able to detect future regressions (future changes that break functionality).  For backend code, such tests are usually not too difficult to create and should be required for the review process.&lt;/p&gt;

&lt;p&gt;For user interface (UI) changes, it’s often difficult to create such tests, but in such cases, it’s useful to attach a “before” and “after” set of images to the issue, to make it easier for the reviewer to understand the work that was done.&lt;/p&gt;

&lt;h3 id=&quot;continuous-integration-ci-should-be-setup-for-projects&quot;&gt;Continuous integration (CI) should be setup for projects&lt;/h3&gt;

&lt;p&gt;Another important component of proper testing is to ensure that the code that compiles for one developer still compiles for others. Due to environment differences, it’s easy to commit code that compiles and works properly on one developer’s machine, but then fails on others.&lt;/p&gt;

&lt;p&gt;To detect such problems, a project should setup a CI task in Gitlab that will automatically recompile the project and run regression tests each time new code is pushed to a code repository. This will enable rapid detection of commit problems and avoid wasting the time of other developers.&lt;/p&gt;

&lt;h1 id=&quot;branch-management-in-repositories&quot;&gt;Branch management in repositories&lt;/h1&gt;
&lt;p&gt;The master branch serves as the branch for testing interactions between new code, and for deployment to production.&lt;/p&gt;

&lt;p&gt;Tags are used to indicate the most recent version of the code approved for use in a production environment. Only tagged versions should be deployed to production environments!&lt;/p&gt;

&lt;p&gt;The head of the master branch should represent the most recent version of development code that is believed to be compilable and functional.&lt;/p&gt;

&lt;p&gt;Note that the above flow will require some cleanup to the existing &lt;em&gt;steemd&lt;/em&gt; (now renamed &lt;em&gt;hive&lt;/em&gt;) repo.&lt;/p&gt;

&lt;h2 id=&quot;public-testnet-for-blockchain-code&quot;&gt;Public testnet for blockchain code&lt;/h2&gt;

&lt;p&gt;Preferably, we should always have one or more public testnets available for testing by apps, without requiring them to test on the main blockchain network. Witnesses are encouraged to operate consensus and API nodes to support the testnet(s).&lt;/p&gt;

&lt;p&gt;A new public testnet may be deployed at any time when it’s deemed that changes have been made that potentially impact third party apps.&lt;/p&gt;

&lt;p&gt;We should tag whatever version of the master branch that is being used for a public testnet.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/@blocktrades/hive-workflow-proposal&quot;&gt;Hive workflow proposal&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@blocktrades&quot;&gt;@blocktrades&lt;/a&gt;
&lt;/p&gt;</content><author><name>blocktrades</name></author><summary type="html">Note: this post is primarily intended for Hive developers, but it may be of interest to other readers who are interested in the details of the software development process. I’ll make another post later with ideas about how general community members can become involved in the development process and how to go about submitting bug reports. I propose we adopt a common workflow for most if not all Hive-related projects. This will make it easier for developers to collaborate on multiple projects with a minimum amount of friction. I believe the primary goals (in no particular order) of our workflow should be: create an easily findable list of hive-related tasks prevent duplication of work effort allow easy collaboration between multiple developers establish a process for determining task priority setup testing standards for tasks in each project setup review standards for tasks in each project ensure existence of easily findable development code in a functional/compilable state where developers can test their new code against potential interactions with other new code ensure existence of easily findable production code which is safe to be deployed to the public Below are some of my initial proposals for how to achieve some of the above goals. Creating issues for new Hive tasks When a new task comes up, create an issue in the appropriate project inside the Hive group. Selecting a project for a task (issue) If it is not clear what project a task belongs to, or if the task belongs to no existing project, create an issue for it in the project called Issues without projects yet. If this issue is later assigned to a specific project, create a corresponding new issue in the correct project and close the issue in Issues without projects yet. Describing an issue with labels Choose existing labels to describe the nature of the issue, such as “bug”, “enhancement”, “documentation”. Currently we only have group-level labels. Generally group-level labels are preferred, unless you need labels that really only make sense for a specific project in the group. Optional assignment of a person to a task The issue can be assigned at creation time to a specific developer, if you are self-assigning or you are assigning to someone you are confident will want to take on the task (in the latter case, you should probably also contact them directly about the new issue). Using boards to monitor project issues Using gitlab, each individual project in the Hive group has a “board” that shows the states of the project’s issues: open: an issue exists, but no decision has yet been made to work on it To Do: decision has been made to do the task and it is awaiting someone to work on it, or is blocked by some other precursor task Doing: one or more developers are currently working on issue Review: work is done, and is awaiting review by an independent developer, after review is completed, the state will be changed to either To Do, Doing, or closed closed: work has been completed and passed review When an issue is first created it will show up on the “open” list. Setting the appropriate label on the issue moves it from To Do, Doing, and Review. Closing the issues moves it to the closed list. Using Group-level board to monitor all workflow In addition to the project-level boards, there is a group-level board that aggregates the status of issues from all projects in the group: https://gitlab.syncad.com/hive/hive/-/boards Process for setting To Do, Doing, and Review status The process for setting the status of an issue will likely vary across projects. For example, if the project is a web site hosted by a specific entity, that entity may want to determine which issues should be worked on, who works on them, and how they are reviewed. Some core projects such as the blockchain code should also have more rigorous criterion for selection of which issues to work on and how those issues are reviewed, because of the potential ripple effects on other projects. The blockchain code is particular sensitive, as new features can easily have impacts on memory, disk, and CPU utilization that could increase the cost of operating a node. Similarly, changes to the commonly used libraries such as hive-js and financial-related projects such as wallet apps need close review to ensure no malicious code is injected. Reference issues when committing associated source code to a repository It’s very useful to link all code changes to an issue when possible. When you make a code commit related to an issue, you can place a tag in your code commit comment that will link the commit to the issue it is related to. If you forget to do this when you commit the code, you can also manually update the issue afterward by adding a comment with a URL link to the commit. Testing requirements Unit tests and image “tests” One or more tests should generally be included with each code change, to verify that the code works properly, and to be able to detect future regressions (future changes that break functionality). For backend code, such tests are usually not too difficult to create and should be required for the review process. For user interface (UI) changes, it’s often difficult to create such tests, but in such cases, it’s useful to attach a “before” and “after” set of images to the issue, to make it easier for the reviewer to understand the work that was done. Continuous integration (CI) should be setup for projects Another important component of proper testing is to ensure that the code that compiles for one developer still compiles for others. Due to environment differences, it’s easy to commit code that compiles and works properly on one developer’s machine, but then fails on others. To detect such problems, a project should setup a CI task in Gitlab that will automatically recompile the project and run regression tests each time new code is pushed to a code repository. This will enable rapid detection of commit problems and avoid wasting the time of other developers. Branch management in repositories The master branch serves as the branch for testing interactions between new code, and for deployment to production. Tags are used to indicate the most recent version of the code approved for use in a production environment. Only tagged versions should be deployed to production environments! The head of the master branch should represent the most recent version of development code that is believed to be compilable and functional. Note that the above flow will require some cleanup to the existing steemd (now renamed hive) repo. Public testnet for blockchain code Preferably, we should always have one or more public testnets available for testing by apps, without requiring them to test on the main blockchain network. Witnesses are encouraged to operate consensus and API nodes to support the testnet(s). A new public testnet may be deployed at any time when it’s deemed that changes have been made that potentially impact third party apps. We should tag whatever version of the master branch that is being used for a public testnet. See: Hive workflow proposal by @blocktrades</summary></entry><entry><title type="html">dhive: RPC Failover Support</title><link href="https://hivedocs.info/howto/rpc/nodejs/2020/04/03/dhive-rpc-failover-support.html" rel="alternate" type="text/html" title="dhive: RPC Failover Support" /><published>2020-04-03T05:00:03-07:00</published><updated>2020-04-03T05:00:03-07:00</updated><id>https://hivedocs.info/howto/rpc/nodejs/2020/04/03/dhive-rpc-failover-support</id><content type="html" xml:base="https://hivedocs.info/howto/rpc/nodejs/2020/04/03/dhive-rpc-failover-support.html">&lt;p&gt;&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/therealwolf/nKbEIVHB-dhive.png&quot; alt=&quot;dhive.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Greetings #Hivers &amp;amp; fellow developers,&lt;/p&gt;

&lt;p&gt;I’ve just pushed a new version, 0.13.3, to &lt;a href=&quot;https://www.npmjs.com/package/@hivechain/dhive&quot;&gt;dhive&lt;/a&gt; (JS library) that enables native RPC node failover-support. This feature is optional and is only active if an array of RPC nodes is given as the first argument in a &lt;code class=&quot;highlighter-rouge&quot;&gt;Client.&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import {Client} from '@hivechain/dhive'

// Failover
const client = new Client(['https://api.hive.blog', 'https://api.hivekings.com', 'https://anyx.io'], { failoverThreshold: 3 /* default */})

// No failover
const simpleClient = new Client('https://api.hive.blog')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;relevant-options-parameters&quot;&gt;Relevant Options Parameters&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;new Client(url, options)&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- failoverThreshold (default: 3): Specifies the number of times the URLs (RPC nodes) should be iterated and retried in case of timeout errors. Requires the first URL parameter to be an array! It can be set to 0 to iterate and retry forever.

- timeout (default: 60 * 1000ms): Send timeout, how long to wait in milliseconds before giving up on an RPC call. It can be set to 0 to retry forever.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;gitlab-pull-request-code&quot;&gt;GitLab Pull Request (Code)&lt;/h3&gt;

&lt;p&gt;https://gitlab.syncad.com/hive/dhive/-/merge_requests/3&lt;/p&gt;

&lt;h3 id=&quot;why-is-this-relevant&quot;&gt;Why is this relevant?&lt;/h3&gt;

&lt;p&gt;Normally, you have to take care of potential failovers in your application yourself. This can produce redundant code. Having a native solution is far cleaner.&lt;/p&gt;

&lt;p&gt;Another solution is a wrapper around dhive that enables failover. There is &lt;a href=&quot;https://www.npmjs.com/package/dsteem-pool&quot;&gt;dsteem-pool&lt;/a&gt;, but it didn’t work for me.&lt;/p&gt;

&lt;h3 id=&quot;info&quot;&gt;Info&lt;/h3&gt;

&lt;p&gt;Code has been tested and everything &lt;em&gt;should&lt;/em&gt; be working fine: https://gitlab.syncad.com/hive/dhive/-/blob/master/test/client.ts#L15-20&lt;/p&gt;

&lt;p&gt;However, for very sensitive operations, please still be careful and rather double-check.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;With this said:&lt;/p&gt;

&lt;p&gt;If there are any problems/questions, please create an issue https://gitlab.syncad.com/hive/dhive/issues&lt;/p&gt;

&lt;p&gt;#HiveOn&lt;/p&gt;

&lt;p&gt;Wolf
&lt;em&gt;&lt;a href=&quot;https://therealwolf.me&quot;&gt;therealwolf.me&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/@therealwolf/dhive-rpc-failover-support&quot;&gt;dhive: RPC Failover Support&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@therealwolf&quot;&gt;@therealwolf&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/nodejs&quot;&gt;More About Node.js&lt;/a&gt;&lt;/p&gt;</content><author><name>therealwolf</name></author><summary type="html">Greetings #Hivers &amp;amp; fellow developers, I’ve just pushed a new version, 0.13.3, to dhive (JS library) that enables native RPC node failover-support. This feature is optional and is only active if an array of RPC nodes is given as the first argument in a Client. import {Client} from '@hivechain/dhive' // Failover const client = new Client(['https://api.hive.blog', 'https://api.hivekings.com', 'https://anyx.io'], { failoverThreshold: 3 /* default */}) // No failover const simpleClient = new Client('https://api.hive.blog') Relevant Options Parameters new Client(url, options) - failoverThreshold (default: 3): Specifies the number of times the URLs (RPC nodes) should be iterated and retried in case of timeout errors. Requires the first URL parameter to be an array! It can be set to 0 to iterate and retry forever. - timeout (default: 60 * 1000ms): Send timeout, how long to wait in milliseconds before giving up on an RPC call. It can be set to 0 to retry forever. GitLab Pull Request (Code) https://gitlab.syncad.com/hive/dhive/-/merge_requests/3 Why is this relevant? Normally, you have to take care of potential failovers in your application yourself. This can produce redundant code. Having a native solution is far cleaner. Another solution is a wrapper around dhive that enables failover. There is dsteem-pool, but it didn’t work for me. Info Code has been tested and everything should be working fine: https://gitlab.syncad.com/hive/dhive/-/blob/master/test/client.ts#L15-20 However, for very sensitive operations, please still be careful and rather double-check. With this said: If there are any problems/questions, please create an issue https://gitlab.syncad.com/hive/dhive/issues #HiveOn Wolf therealwolf.me See: dhive: RPC Failover Support by @therealwolf</summary></entry><entry><title type="html">How to review account permissions and change your recovery account</title><link href="https://hivedocs.info/howto/beem/python/account/2020/04/02/how-to-review-account-permissions-and-change-your-recovery-account.html" rel="alternate" type="text/html" title="How to review account permissions and change your recovery account" /><published>2020-04-02T15:04:27-07:00</published><updated>2020-04-02T15:04:27-07:00</updated><id>https://hivedocs.info/howto/beem/python/account/2020/04/02/how-to-review-account-permissions-and-change-your-recovery-account</id><content type="html" xml:base="https://hivedocs.info/howto/beem/python/account/2020/04/02/how-to-review-account-permissions-and-change-your-recovery-account.html">&lt;p&gt;&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/holger80/UScDOcPB-image.png&quot; alt=&quot;image.png&quot; /&gt;
&lt;a href=&quot;https://pixabay.com/de/illustrations/schl%C3%BCssel-schlo%C3%9F-sicherheit-metall-3348307/&quot;&gt;source&lt;/a&gt;
All accounts on the HIVE blockchain that existed also before the fork may have posting permissions granted to apps that do not exists on the HIVE blockchain. It is a good idea to remove them for now.&lt;/p&gt;

&lt;p&gt;You can use beempy to remove posting permissions to your account. At first,
all account that have posting/active permissions should be printed with&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy permissions holger80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------------+-----------+-----------------------------------------------------------+
| Permission | Threshold |                                               Key/Account |
+------------+-----------+-----------------------------------------------------------+
|      owner |         1 | STM5XDYn3NeTqiMd1wczZjF9sPiJqY2uQw9HRwT6LR6rQytAxWNfz (1) |
|     active |         1 | STM7tA7Mh81wJV1J8eW8NyGLc3XCSyXNdFnhAh8F8bYYd8yAcy6Ew (1) |
|    posting |         1 |                                           actifit.app (1) |
|            |           |                                             dpoll.xyz (1) |
|            |           |                                             esteemapp (1) |
|            |           |                                             nc-client (1) |
|            |           |                                            nextcolony (1) |
|            |           |                                             peakd.app (1) |
|            |           |                                             rewarding (1) |
|            |           | STM6t5ExkHZtQL1pdkrRZjCgzbAdnB3YUYCZgrYWDXvdnU5bp57jL (1) |
+------------+-----------+-----------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;remove-posting-permission&quot;&gt;Remove posting permission&lt;/h2&gt;
&lt;p&gt;Now, not needed permissions can be removed by&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy disallow -a holger80 busy.app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;where the account name is set with &lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt;.
This command broadcasts a &lt;code class=&quot;highlighter-rouge&quot;&gt;account_update&lt;/code&gt; operation and removes the given account name from the &lt;code class=&quot;highlighter-rouge&quot;&gt;account_auths&lt;/code&gt; field.
&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/holger80/nNzpFYoS-image.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This can also be done with https://hivesigner.com/revoke/ followed by the account name, e.g. https://hivesigner.com/revoke/busy.app&lt;/p&gt;

&lt;p&gt;Changing and reviewing permissions is also possible with peakd:
https://peakd.com/@holger80/permissions&lt;/p&gt;

&lt;h2 id=&quot;recovery-account&quot;&gt;Recovery account&lt;/h2&gt;
&lt;p&gt;The recovery account can be check with https://hiveblocks.com/@holger80
&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/holger80/n5L0jCIN-image.png&quot; alt=&quot;image.png&quot; /&gt;
It is set to @steem for my account and as it is most unlikely that @steem will ever sign a &lt;code class=&quot;highlighter-rouge&quot;&gt;Request_account_recovery&lt;/code&gt; operation on HIVE, I’m unable to recovery my account, when I would accidentally leak my owner key and someone would change it using my leaked owner key.&lt;/p&gt;

&lt;p&gt;This is most unlikely, as I’m not using my owner key but it could happen.&lt;/p&gt;

&lt;h3 id=&quot;how-does-account-recovery-work&quot;&gt;How does account recovery work?&lt;/h3&gt;
&lt;p&gt;Assuming, my owner key was changed within 30 days, I have the previous owner key and the recover account is signing, I can recover my account:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;I need to create a new owner key&lt;/li&gt;
  &lt;li&gt;the recover account broadcasts a &lt;code class=&quot;highlighter-rouge&quot;&gt;Request_account_recovery&lt;/code&gt; operation with the new owner public key  signed with its active key&lt;/li&gt;
  &lt;li&gt;I need then to broadcast a &lt;code class=&quot;highlighter-rouge&quot;&gt;Recover_account&lt;/code&gt; operation with the old and the new owner public key and sign it with the old and the new owner private key.&lt;/li&gt;
  &lt;li&gt;I can change now all keys with an &lt;code class=&quot;highlighter-rouge&quot;&gt;Account_update&lt;/code&gt; operation signed with the new owner key.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Currently this will not work for me, as @steem will not broadcast a &lt;code class=&quot;highlighter-rouge&quot;&gt;Request_account_recovery&lt;/code&gt; operation on HIVE.&lt;/p&gt;

&lt;h2 id=&quot;changing-the-recover-account&quot;&gt;Changing the recover account&lt;/h2&gt;
&lt;p&gt;I created a new account @recovery.account on HIVE as my new recovery account.
It would be possible to use hivesigner for this:
https://hivesigner.com/sign/change_recovery_account?account_to_recover=holger80&amp;amp;new_recovery_account=recovery.account&amp;amp;extensions=%5B%5D
or peakd: https://peakd.com/@holger80/permissions&lt;/p&gt;

&lt;p&gt;But I do like to use my own script:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from beem.account import Account
from beem.nodelist import NodeList
from beem import Steem
from beem.transactionbuilder import TransactionBuilder
from beemgraphenebase.account import PrivateKey
import beembase
import getpass


if __name__ == &quot;__main__&quot;:
    nodes = NodeList()
    nodes.update_nodes()
    key = getpass.getpass(prompt='Owner key: ')
    owner_key = PrivateKey(wif=key)
    print(&quot;pub: %s&quot; % str(owner_key.pubkey))
    account_name = input(&quot;account name: &quot;)
    new_recovery_account = input(&quot;new recovery_account: &quot;)
    hive = Steem(node=nodes.get_nodes(hive=True))
    assert hive.is_hive
    
    account = Account(account_name, steem_instance=hive)
    new_rec_acc = Account(new_recovery_account, steem_instance=hive)
    
    op = beembase.operations.Change_recovery_account(**{
        'account_to_recover': account['name'],
        'new_recovery_account': new_rec_acc['name'],
        'extensions': []
    })
    print(op)
    prompt = input(&quot;Broadcast the operation? [y/n]&quot;)
    if prompt[0] == &quot;y&quot;:
        tb = TransactionBuilder(steem_instance=hive)
        tb.appendOps([op])
        tb.appendWif(str(owner_key))
        #tb.appendSigner(account['name'], 'owner')
        tb.sign()
        trx = tb.broadcast()
        print(trx)
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Results in&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/holger80/N8fWV7bM-image.png&quot; alt=&quot;image.png&quot; /&gt;
This means that in 30 days my recovery account will be changed.&lt;/p&gt;

&lt;p&gt;I will keep the keys of @recovery.account in a safe place and will not use them.&lt;/p&gt;

&lt;h2 id=&quot;is-there-a-need-for-a-recovery-account-provider&quot;&gt;Is there a need for a recovery account provider?&lt;/h2&gt;
&lt;p&gt;Do you want also to change your recovery account? How could this work? Let me know.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/@holger80/how-to-review-account-permissions-and-change-your-recovery-account&quot;&gt;How to review account permissions and change your recovery account&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@holger80&quot;&gt;@holger80&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/python&quot;&gt;More About Python&lt;/a&gt;&lt;/p&gt;</content><author><name>holger80</name></author><summary type="html">source All accounts on the HIVE blockchain that existed also before the fork may have posting permissions granted to apps that do not exists on the HIVE blockchain. It is a good idea to remove them for now. You can use beempy to remove posting permissions to your account. At first, all account that have posting/active permissions should be printed with beempy permissions holger80 +------------+-----------+-----------------------------------------------------------+ | Permission | Threshold | Key/Account | +------------+-----------+-----------------------------------------------------------+ | owner | 1 | STM5XDYn3NeTqiMd1wczZjF9sPiJqY2uQw9HRwT6LR6rQytAxWNfz (1) | | active | 1 | STM7tA7Mh81wJV1J8eW8NyGLc3XCSyXNdFnhAh8F8bYYd8yAcy6Ew (1) | | posting | 1 | actifit.app (1) | | | | dpoll.xyz (1) | | | | esteemapp (1) | | | | nc-client (1) | | | | nextcolony (1) | | | | peakd.app (1) | | | | rewarding (1) | | | | STM6t5ExkHZtQL1pdkrRZjCgzbAdnB3YUYCZgrYWDXvdnU5bp57jL (1) | +------------+-----------+-----------------------------------------------------------+ Remove posting permission Now, not needed permissions can be removed by beempy disallow -a holger80 busy.app where the account name is set with -a. This command broadcasts a account_update operation and removes the given account name from the account_auths field. This can also be done with https://hivesigner.com/revoke/ followed by the account name, e.g. https://hivesigner.com/revoke/busy.app Changing and reviewing permissions is also possible with peakd: https://peakd.com/@holger80/permissions Recovery account The recovery account can be check with https://hiveblocks.com/@holger80 It is set to @steem for my account and as it is most unlikely that @steem will ever sign a Request_account_recovery operation on HIVE, I’m unable to recovery my account, when I would accidentally leak my owner key and someone would change it using my leaked owner key. This is most unlikely, as I’m not using my owner key but it could happen. How does account recovery work? Assuming, my owner key was changed within 30 days, I have the previous owner key and the recover account is signing, I can recover my account: I need to create a new owner key the recover account broadcasts a Request_account_recovery operation with the new owner public key signed with its active key I need then to broadcast a Recover_account operation with the old and the new owner public key and sign it with the old and the new owner private key. I can change now all keys with an Account_update operation signed with the new owner key. Currently this will not work for me, as @steem will not broadcast a Request_account_recovery operation on HIVE. Changing the recover account I created a new account @recovery.account on HIVE as my new recovery account. It would be possible to use hivesigner for this: https://hivesigner.com/sign/change_recovery_account?account_to_recover=holger80&amp;amp;new_recovery_account=recovery.account&amp;amp;extensions=%5B%5D or peakd: https://peakd.com/@holger80/permissions But I do like to use my own script: from beem.account import Account from beem.nodelist import NodeList from beem import Steem from beem.transactionbuilder import TransactionBuilder from beemgraphenebase.account import PrivateKey import beembase import getpass if __name__ == &quot;__main__&quot;: nodes = NodeList() nodes.update_nodes() key = getpass.getpass(prompt='Owner key: ') owner_key = PrivateKey(wif=key) print(&quot;pub: %s&quot; % str(owner_key.pubkey)) account_name = input(&quot;account name: &quot;) new_recovery_account = input(&quot;new recovery_account: &quot;) hive = Steem(node=nodes.get_nodes(hive=True)) assert hive.is_hive account = Account(account_name, steem_instance=hive) new_rec_acc = Account(new_recovery_account, steem_instance=hive) op = beembase.operations.Change_recovery_account(**{ 'account_to_recover': account['name'], 'new_recovery_account': new_rec_acc['name'], 'extensions': [] }) print(op) prompt = input(&quot;Broadcast the operation? [y/n]&quot;) if prompt[0] == &quot;y&quot;: tb = TransactionBuilder(steem_instance=hive) tb.appendOps([op]) tb.appendWif(str(owner_key)) #tb.appendSigner(account['name'], 'owner') tb.sign() trx = tb.broadcast() print(trx) Results in This means that in 30 days my recovery account will be changed. I will keep the keys of @recovery.account in a safe place and will not use them. Is there a need for a recovery account provider? Do you want also to change your recovery account? How could this work? Let me know. See: How to review account permissions and change your recovery account by @holger80</summary></entry><entry><title type="html">How to set up your Witness server with MIRA?</title><link href="https://hivedocs.info/howto/witness/2020/04/01/how-to-set-up-your-witness-server-with-mira.html" rel="alternate" type="text/html" title="How to set up your Witness server with MIRA?" /><published>2020-04-01T17:30:33-07:00</published><updated>2020-04-01T17:30:33-07:00</updated><id>https://hivedocs.info/howto/witness/2020/04/01/how-to-set-up-your-witness-server-with-mira</id><content type="html" xml:base="https://hivedocs.info/howto/witness/2020/04/01/how-to-set-up-your-witness-server-with-mira.html">&lt;hr /&gt;

&lt;p&gt;Hello there, as you may or may not know the server requirements for hosting a witness server is growing very fast. To combat this, with the recent hardforks to the blockchain MIRA was introduced.&lt;/p&gt;

&lt;p&gt;MIRA caches the data on RocksDB files rather than the random acces memory, RAM. Which means you will require a higher storage with fast R/W speeds like SSDs for example. Instead of 64 GB of RAM.&lt;/p&gt;

&lt;p&gt;Right now, as of today (&lt;strong&gt;02.04.2020&lt;/strong&gt;) the &lt;strong&gt;absolute minimum&lt;/strong&gt; requirements for a MIRA node is 8 Gigabytes of RAM, 400GB SSD Storage, 4 cores, 100 Mbps DL/UL speed.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;recommended&lt;/strong&gt; specifications for a MIRA witness/seed node is 32 Gigabytes of RAM, 500GB SSD Storage, 4 cores, 1 Gbps DL/UL speed.&lt;/p&gt;

&lt;p&gt;Block logs currently take about &lt;strong&gt;258 GB&lt;/strong&gt; of space while RocksDB takes about &lt;strong&gt;37 GB&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/5KTmBrV.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Witnesses are of course, crucial to the longevity, stability and decentralization of the chain. If you wan to create a witness server and become a witness, good for you and thank you for volunteering! Managing servers and keeping tabs on them is no easy feat. Lets not forget to mention, cheap.&lt;/p&gt;

&lt;h3 id=&quot;start-setting-up-your-witness-on-a-fresh-install-diy&quot;&gt;Start Setting Up Your Witness On A Fresh Install [DIY]&lt;/h3&gt;

&lt;p&gt;So you have decided on setting up a witness server using MIRA. You have your server ready, freshly installed. Preferably Ubuntu or Debian, but that’s just my taste.&lt;/p&gt;

&lt;p&gt;For the setup, we will be using steem-docker made by someguy123 and RocksDB files provided by &lt;a href=&quot;privex.io&quot;&gt;Privex.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s get started. Throughout this tutorial, I will be assuming you are &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First, we have to install git so we can use &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone&lt;/code&gt; to get the necessary files from GitHub.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;apt install git -y&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, we clone the repository from GitHub.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/someguy123/steem-docker.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now that &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; has downloaded the repository to your server, we have to &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; into the folder.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd steem-docker&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next, we are going to use the custom-made script to install &lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt; for us.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./run.sh install_docker&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will probably take a minute.&lt;/p&gt;

&lt;p&gt;Next, we will be installing the necessary docker package.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./run.sh install someguy123/hive:latest-mira&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next, we will be setting up the .env for docker.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nano .env&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DOCKER_NAME=witness
PORTS=
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Paste these in the .env file and save it by pressing CTRL+X and then Y.&lt;/p&gt;

&lt;p&gt;Next step is to download the block_log.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir root/data/witness_node_data_dir/blockchain
cd root/data/witness_node_data_dir/blockchain
curl -fsSL http://files.privex.io/hive/block_log.lz4 -o - | lz4 -d - block_log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As the block_log is quite big, this is going to take anywhere from 20 minutes to several hours depending on the internet connection of your server.&lt;/p&gt;

&lt;p&gt;After the block_log has been installed, we have to download the RocksDB files from Privex.io&lt;/p&gt;

&lt;p&gt;For HIVE,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rsync -av --progress --delete rsync://files.privex.io/hive/rocksdb/ /root/steem-docker/data/rocksdb/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now that our RocksDB is downloaded, we must generate a brain key for security.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd root/steem-docker
./run.sh remote_wallet
suggest_brain_key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/oP0tCAy.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This will generate a key pair for your witness. Copy the output and save it.&lt;/p&gt;

&lt;p&gt;After generating your witness keys we must edit &lt;code class=&quot;highlighter-rouge&quot;&gt;config.ini&lt;/code&gt; which is the main configuration for the witness server.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nano root/steem-docker/data/witness_node_data_dir/config.ini&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On the first line, you will see &lt;code class=&quot;highlighter-rouge&quot;&gt;p2p-endpoint&lt;/code&gt; we should comment this out as our goal is to make a witness server, if you are looking to host a seed node rather than a witness server, you can keep this on.&lt;/p&gt;

&lt;p&gt;You can comment this out by putting a pound (#) in front of the line. So it should look like this,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#p2p-endpoint = 0.0.0.0:2001&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next, a few lines below that you will see,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shared-file-size = 64G&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Please change this to your server memory, if your server has 16 gigabytes of RAM, change this to 16G and so on.&lt;/p&gt;

&lt;p&gt;Next, scroll down until you see &lt;code class=&quot;highlighter-rouge&quot;&gt;witness&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;private-key&lt;/code&gt; lines.&lt;/p&gt;

&lt;p&gt;For the witness part, put in your username with “” it should look like this,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;witness = &quot;deathwing&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next, for the private key put in your previously saved private key without any quotation marks.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;private-key = 5thisisyourpreviosulygeneratedprivatekey&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/z8DDsT1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Again, press CTRL+X and then Y to save the file and exit.&lt;/p&gt;

&lt;p&gt;You are almost done!&lt;/p&gt;

&lt;p&gt;Our next step is to replay the chain, this is going to take quite a long time as this process is single-threaded and can’t take advantage of multi-core CPUs, so depending on your processors’ single-thread performance, the amount of time it takes will vary. Very likely for it to take an hour if not more.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./run.sh replay&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After the replay is complete, we can start our server and let it sync with the network.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./run.sh start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can then use &lt;code class=&quot;highlighter-rouge&quot;&gt;./run.sh logs&lt;/code&gt; to view the log output. It is very normal to see errors appearing here from time to time. You should check it every 20-30 minutes until you see something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/sCSVd8y.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When you start seeing these messages, you can press CTRL+C to leave the logs.&lt;/p&gt;

&lt;p&gt;Now that our witness server is synced up and ready to go, we can update our witness account and broadcast it to the network. To do that, we need to run wallet.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./run.sh wallet&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The wallet will prompt you to set a password.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set_password hunter2 (set your own password)
unlock hunter2
import_key 5yourwitnessaccountsactiveprivatekey
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can find your private key on PeakD - https://peakd.com/@yourusername/permissions&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/lCrGKoc.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Remember that for &lt;code class=&quot;highlighter-rouge&quot;&gt;import_key&lt;/code&gt; you need to put in the private key of the account that will be witnessing on the chain &lt;strong&gt;not&lt;/strong&gt; the one previously generated in this tutorial.&lt;/p&gt;

&lt;p&gt;Now, we can update our witness and start our journey on supporting the stability, longevity and decentralization of the blockchain.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;update_witness &quot;WITNESSNAME&quot; &quot;WITNESSURL&quot; &quot;STMxxxxxxx&quot; {&quot;account_creation_fee&quot;:&quot;3.000 HIVE&quot;,&quot;maximum_block_size&quot;:65536,&quot;sbd_interest_rate&quot;:0} true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WITNESSNAME&lt;/code&gt; = Your Witness account.
&lt;code class=&quot;highlighter-rouge&quot;&gt;WITNESSURL&lt;/code&gt; = Preferably, your witness announcement post.
&lt;code class=&quot;highlighter-rouge&quot;&gt;STMxxxxxxx&lt;/code&gt;= Paste the key that we previously generated.&lt;/p&gt;

&lt;p&gt;You can check &lt;strong&gt;hiveblocks.com/@yourusername&lt;/strong&gt; now, if everything worked you should see a transaction like this;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/1JoL29X.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! You are now a witness. Thank you!&lt;/p&gt;

&lt;h3 id=&quot;i-want-to-become-a-witness-but-i-dont-know-a-thing-about-servers&quot;&gt;I want to become a witness but I don’t know a thing about servers!&lt;/h3&gt;

&lt;p&gt;Best way to become a witness in a situation like this is probably purchasing a pre-replayed witness node from &lt;a href=&quot;privex.io&quot;&gt;privex.io&lt;/a&gt; who provided both the scripts and files used in this tutorial. This option is the best for users who do not have a good server knowledge and want excellent customer support and during their journey on becoming a witness.&lt;/p&gt;

&lt;p&gt;After you order your VPS-HIVE server from, you should receive a mail containing the information you need to connect and login to the server.&lt;/p&gt;

&lt;p&gt;After you log in, what you have to do is first, switch from the user &lt;code class=&quot;highlighter-rouge&quot;&gt;ubuntu&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;, to do this type,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;su&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, we will be generating a key pair using&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./run.sh remote_wallet
suggest_brain_key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then, edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;config.ini&lt;/code&gt; file with &lt;code class=&quot;highlighter-rouge&quot;&gt;nano data/witness_node_data_dir/config.ini&lt;/code&gt; &lt;img src=&quot;https://i.imgur.com/6eJ7jfU.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;then start the witness server with&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./run.sh start&lt;/code&gt; wait for it to sync,&lt;/p&gt;

&lt;p&gt;then run wallet with &lt;code class=&quot;highlighter-rouge&quot;&gt;./run.sh wallet&lt;/code&gt; and update your witness as shown previously.&lt;/p&gt;

&lt;p&gt;Let me know if you have any questions!&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;sub&gt;&amp;lt;p&amp;gt;post scriptum&amp;lt;/p&amp;gt;&lt;br /&gt;&lt;/sub&gt;&lt;/p&gt;
&lt;center&gt;&lt;p&gt;&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/deathwing/Y9KDqlV8-image.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;&lt;p&gt;Remember voting for witnesses is important. I would appreciate if you could vote for me.&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;&lt;p&gt;Use Peakd’s voting page by clicking &lt;a href=&quot;https://peakd.com/witnesses&quot;&gt;here&lt;/a&gt;.&lt;br /&gt;Use Hivesigner by clicking &lt;a href=&quot;https://deathwing.me/witness&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;&lt;p&gt;Thank you!&lt;/p&gt;&lt;br /&gt;&lt;/center&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/@deathwing/how-to-set-up-your-witness-server-with-mira&quot;&gt;How to set up your Witness server with MIRA?&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@deathwing&quot;&gt;@deathwing&lt;/a&gt;
&lt;/p&gt;</content><author><name>deathwing</name></author><summary type="html">Hello there, as you may or may not know the server requirements for hosting a witness server is growing very fast. To combat this, with the recent hardforks to the blockchain MIRA was introduced. MIRA caches the data on RocksDB files rather than the random acces memory, RAM. Which means you will require a higher storage with fast R/W speeds like SSDs for example. Instead of 64 GB of RAM. Right now, as of today (02.04.2020) the absolute minimum requirements for a MIRA node is 8 Gigabytes of RAM, 400GB SSD Storage, 4 cores, 100 Mbps DL/UL speed. The recommended specifications for a MIRA witness/seed node is 32 Gigabytes of RAM, 500GB SSD Storage, 4 cores, 1 Gbps DL/UL speed. Block logs currently take about 258 GB of space while RocksDB takes about 37 GB. Witnesses are of course, crucial to the longevity, stability and decentralization of the chain. If you wan to create a witness server and become a witness, good for you and thank you for volunteering! Managing servers and keeping tabs on them is no easy feat. Lets not forget to mention, cheap. Start Setting Up Your Witness On A Fresh Install [DIY] So you have decided on setting up a witness server using MIRA. You have your server ready, freshly installed. Preferably Ubuntu or Debian, but that’s just my taste. For the setup, we will be using steem-docker made by someguy123 and RocksDB files provided by Privex.io Let’s get started. Throughout this tutorial, I will be assuming you are root. First, we have to install git so we can use git clone to get the necessary files from GitHub. apt install git -y Now, we clone the repository from GitHub. git clone https://github.com/someguy123/steem-docker.git Now that git has downloaded the repository to your server, we have to cd into the folder. cd steem-docker Next, we are going to use the custom-made script to install docker for us. ./run.sh install_docker This will probably take a minute. Next, we will be installing the necessary docker package. ./run.sh install someguy123/hive:latest-mira Next, we will be setting up the .env for docker. nano .env DOCKER_NAME=witness PORTS= Paste these in the .env file and save it by pressing CTRL+X and then Y. Next step is to download the block_log. mkdir root/data/witness_node_data_dir/blockchain cd root/data/witness_node_data_dir/blockchain curl -fsSL http://files.privex.io/hive/block_log.lz4 -o - | lz4 -d - block_log As the block_log is quite big, this is going to take anywhere from 20 minutes to several hours depending on the internet connection of your server. After the block_log has been installed, we have to download the RocksDB files from Privex.io For HIVE, rsync -av --progress --delete rsync://files.privex.io/hive/rocksdb/ /root/steem-docker/data/rocksdb/ Now that our RocksDB is downloaded, we must generate a brain key for security. cd root/steem-docker ./run.sh remote_wallet suggest_brain_key This will generate a key pair for your witness. Copy the output and save it. After generating your witness keys we must edit config.ini which is the main configuration for the witness server. nano root/steem-docker/data/witness_node_data_dir/config.ini On the first line, you will see p2p-endpoint we should comment this out as our goal is to make a witness server, if you are looking to host a seed node rather than a witness server, you can keep this on. You can comment this out by putting a pound (#) in front of the line. So it should look like this, #p2p-endpoint = 0.0.0.0:2001 Next, a few lines below that you will see, shared-file-size = 64G Please change this to your server memory, if your server has 16 gigabytes of RAM, change this to 16G and so on. Next, scroll down until you see witness and private-key lines. For the witness part, put in your username with “” it should look like this, witness = &quot;deathwing&quot; Next, for the private key put in your previously saved private key without any quotation marks. private-key = 5thisisyourpreviosulygeneratedprivatekey Again, press CTRL+X and then Y to save the file and exit. You are almost done! Our next step is to replay the chain, this is going to take quite a long time as this process is single-threaded and can’t take advantage of multi-core CPUs, so depending on your processors’ single-thread performance, the amount of time it takes will vary. Very likely for it to take an hour if not more. ./run.sh replay After the replay is complete, we can start our server and let it sync with the network. ./run.sh start You can then use ./run.sh logs to view the log output. It is very normal to see errors appearing here from time to time. You should check it every 20-30 minutes until you see something like this: When you start seeing these messages, you can press CTRL+C to leave the logs. Now that our witness server is synced up and ready to go, we can update our witness account and broadcast it to the network. To do that, we need to run wallet. ./run.sh wallet The wallet will prompt you to set a password. set_password hunter2 (set your own password) unlock hunter2 import_key 5yourwitnessaccountsactiveprivatekey You can find your private key on PeakD - https://peakd.com/@yourusername/permissions Remember that for import_key you need to put in the private key of the account that will be witnessing on the chain not the one previously generated in this tutorial. Now, we can update our witness and start our journey on supporting the stability, longevity and decentralization of the blockchain. update_witness &quot;WITNESSNAME&quot; &quot;WITNESSURL&quot; &quot;STMxxxxxxx&quot; {&quot;account_creation_fee&quot;:&quot;3.000 HIVE&quot;,&quot;maximum_block_size&quot;:65536,&quot;sbd_interest_rate&quot;:0} true WITNESSNAME = Your Witness account. WITNESSURL = Preferably, your witness announcement post. STMxxxxxxx= Paste the key that we previously generated. You can check hiveblocks.com/@yourusername now, if everything worked you should see a transaction like this; Congratulations! You are now a witness. Thank you! I want to become a witness but I don’t know a thing about servers! Best way to become a witness in a situation like this is probably purchasing a pre-replayed witness node from privex.io who provided both the scripts and files used in this tutorial. This option is the best for users who do not have a good server knowledge and want excellent customer support and during their journey on becoming a witness. After you order your VPS-HIVE server from, you should receive a mail containing the information you need to connect and login to the server. After you log in, what you have to do is first, switch from the user ubuntu to root, to do this type, su Then, we will be generating a key pair using ./run.sh remote_wallet suggest_brain_key then, edit the config.ini file with nano data/witness_node_data_dir/config.ini then start the witness server with ./run.sh start wait for it to sync, then run wallet with ./run.sh wallet and update your witness as shown previously. Let me know if you have any questions! &amp;lt;p&amp;gt;post scriptum&amp;lt;/p&amp;gt; Remember voting for witnesses is important. I would appreciate if you could vote for me.Use Peakd’s voting page by clicking here.Use Hivesigner by clicking here.Thank you! See: How to set up your Witness server with MIRA? by @deathwing</summary></entry><entry><title type="html">Jekyll::Hive</title><link href="https://hivedocs.info/tools/ruby/jekyll/2020/04/01/jekyll-hive.html" rel="alternate" type="text/html" title="Jekyll::Hive" /><published>2020-04-01T16:43:15-07:00</published><updated>2020-04-01T16:43:15-07:00</updated><id>https://hivedocs.info/tools/ruby/jekyll/2020/04/01/jekyll-hive</id><content type="html" xml:base="https://hivedocs.info/tools/ruby/jekyll/2020/04/01/jekyll-hive.html">&lt;div class=&quot;pull-right&quot;&gt;
  &lt;img src=&quot;https://i.imgur.com/Yy47F6h.png&quot; /&gt;
&lt;/div&gt;

&lt;h1 id=&quot;jekyllhive&quot;&gt;&lt;a href=&quot;https://github.com/inertia186/jekyll-hive&quot;&gt;Jekyll::Hive&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Liquid tag for displaying Hive content in Jekyll sites: &lt;code class=&quot;highlighter-rouge&quot;&gt;{% hive %}&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Add this line to your application’s Gemfile:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &lt;span class=&quot;s1&quot;&gt;'jekyll-hive'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then execute:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or install it yourself as:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;jekyll-hive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then add the following to your site’s &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jekyll-hive&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;💡 If you are using a Jekyll version less than 3.5.0, use the &lt;code class=&quot;highlighter-rouge&quot;&gt;gems&lt;/code&gt; key instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;plugins&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;Use the tag as follows in your Jekyll pages, posts and collections:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;hive&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;author/permlink&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This will place the associated content on the page.&lt;/p&gt;

&lt;h2 id=&quot;jekyll-build&quot;&gt;Jekyll Build&lt;/h2&gt;

&lt;p&gt;When building your site with jekyll, you can continue to use the default command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you would like to provide an alternate node:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;NODE_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://anyx.io jekyll build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;contributing&quot;&gt;Contributing&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Fork it ( https://github.com/inertia186/jekyll-hive/fork )&lt;/li&gt;
  &lt;li&gt;Create your feature branch (&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Commit your changes (&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -am 'Add some feature'&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Push to the branch (&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Create a new Pull Request&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;get-in-touch&quot;&gt;Get in touch!&lt;/h2&gt;

&lt;p&gt;If you’re using Jekyll::Hive, I’d love to hear from you.  Drop me a line and tell me what you think!  I’m &lt;a href=&quot;https://hive.blog/@inertia&quot;&gt;@inertia&lt;/a&gt; on Hive.&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;p&gt;I don’t believe in intellectual “property”.  If you do, consider Jekyll::Hive as licensed under a Creative Commons &lt;a href=&quot;http://creativecommons.org/publicdomain/zero/1.0/&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/p/zero/1.0/80x15.png&quot; alt=&quot;CC0&quot; /&gt;&lt;/a&gt; License.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/@inertia/jekyll-hive&quot;&gt;Jekyll::Hive&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@inertia&quot;&gt;@inertia&lt;/a&gt;
&lt;/p&gt;</content><author><name>inertia</name></author><summary type="html">Jekyll::Hive Liquid tag for displaying Hive content in Jekyll sites: {% hive %}. Installation Add this line to your application’s Gemfile: gem 'jekyll-hive' And then execute: bundle Or install it yourself as: gem install jekyll-hive Then add the following to your site’s _config.yml: plugins: - jekyll-hive 💡 If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins. Usage Use the tag as follows in your Jekyll pages, posts and collections: {% hive author/permlink %} This will place the associated content on the page. Jekyll Build When building your site with jekyll, you can continue to use the default command: jekyll build If you would like to provide an alternate node: NODE_URL=https://anyx.io jekyll build Contributing Fork it ( https://github.com/inertia186/jekyll-hive/fork ) Create your feature branch (git checkout -b my-new-feature) Commit your changes (git commit -am 'Add some feature') Push to the branch (git push origin my-new-feature) Create a new Pull Request Get in touch! If you’re using Jekyll::Hive, I’d love to hear from you. Drop me a line and tell me what you think! I’m @inertia on Hive. License I don’t believe in intellectual “property”. If you do, consider Jekyll::Hive as licensed under a Creative Commons License. See: Jekyll::Hive by @inertia</summary></entry><entry><title type="html">Update for beem: fixing author/curation reward calculation and more</title><link href="https://hivedocs.info/howto/beem/python/curation/2020/04/01/update-for-beem-fixing-author-curation-reward-calculation-and-more.html" rel="alternate" type="text/html" title="Update for beem: fixing author/curation reward calculation and more" /><published>2020-04-01T15:10:03-07:00</published><updated>2020-04-01T15:10:03-07:00</updated><id>https://hivedocs.info/howto/beem/python/curation/2020/04/01/update-for-beem-fixing-author-curation-reward-calculation-and-more</id><content type="html" xml:base="https://hivedocs.info/howto/beem/python/curation/2020/04/01/update-for-beem-fixing-author-curation-reward-calculation-and-more.html">&lt;h2 id=&quot;repository&quot;&gt;Repository&lt;/h2&gt;
&lt;p&gt;https://github.com/holgern/beem&lt;center&gt;&lt;br /&gt;&amp;lt;p&amp;gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmcRrwLPSywSYMierfP6um6mejeMNGjN9Rxw7audJqTDgb/beem-logo&quot; alt=&quot;beem-logo&quot; /&gt;&amp;lt;/p&amp;gt;&lt;br /&gt;&lt;/center&gt;
&lt;a href=&quot;https://github.com/holgern/beem&quot;&gt;beem&lt;/a&gt; is a python library for STEEM and HIVE.  The current version is 0.22.12.&lt;/p&gt;

&lt;p&gt;There is also a discord channel for beem: https://discord.gg/4HM592V&lt;/p&gt;

&lt;p&gt;The newest beem version can be installed by:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install -U beem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check that you are using hive nodes. The following command&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy updatenodes --hive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;updates the nodelist and uses only hive nodes. The list of nodes can be checked with&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy currentnode
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;shows the currently connected node.&lt;/p&gt;

&lt;h2 id=&quot;changelog-for-versions-02212&quot;&gt;Changelog for versions 0.22.12&lt;/h2&gt;
&lt;p&gt;This update fixed the Vote classes, curation/author reward calculation, Discussions classes and get_feed and get_account_votes  for Accounts.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add hive node&lt;/li&gt;
  &lt;li&gt;get_feed uses now discussion_by_feed&lt;/li&gt;
  &lt;li&gt;get_account_votes has been fixed&lt;/li&gt;
  &lt;li&gt;ActiveVotes has been fixed&lt;/li&gt;
  &lt;li&gt;Discussions has been fixed&lt;/li&gt;
  &lt;li&gt;raw_data parameter added to all discussions&lt;/li&gt;
  &lt;li&gt;beempy curation, beempy votes and beempy pending has been fixed&lt;/li&gt;
  &lt;li&gt;Votes table improved&lt;/li&gt;
  &lt;li&gt;fix curation and author reward calculation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fixing-all-integration-tests&quot;&gt;Fixing all integration tests&lt;/h2&gt;
&lt;p&gt;After fixing the remaining problems in vote, comment and account, all 462 tests have finally passed.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;========== 462 passed, 27 skipped, 13 warnings in 1551.63s (0:25:51) ===========
The CI may fail from time to time due to node time outs.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;view-outgoing-and-incoming-votes-with-beempy&quot;&gt;View outgoing and incoming votes with beempy&lt;/h2&gt;
&lt;p&gt;Outgoing votes can be checked with&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy votes -o -d 1 holger80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+----------+------------------+---------+--------------+---------------+---------+--------+
| Voter    | Votee            | SBD/HBD | Time         | Rshares       | Percent | Weight |
+----------+------------------+---------+--------------+---------------+---------+--------+
| holger80 | pibara           | 1.0  $  | 0 days 23:9  | 2348837832917 | 7500    | 911136 |
| holger80 | pennsif          | 1.34 $  | 0 days 21:17 | 3123742413620 | 9955    | 390108 |
| holger80 | nonameslefttouse | 1.08 $  | 0 days 18:45 | 2517726726913 | 8000    | 323940 |
| holger80 | gtg              | 1.4  $  | 0 days 12:17 | 3279925264141 | 10000   | 281332 |
| holger80 | quochuy          | 1.39 $  | 0 days 10:42 | 3259050022456 | 10000   | 216722 |
| holger80 | steemcleaners    | 0.68 $  | 0 days 10:30 | 1599714528677 | 5000    | 358546 |
| holger80 | dsound           | 1.03 $  | 0 days 9:30  | 2396854864854 | 7500    | 238509 |
| holger80 | abitcoinskeptic  | 1.35 $  | 0 days 8:49  | 3167311773888 | 10000   | 847601 |
| holger80 | jga              | 0.68 $  | 0 days 6:6   | 1590352821718 | 5000    | 151064 |
| holger80 | creary           | 0.34 $  | 0 days 5:50  | 789079645344  | 2500    | 317630 |
| holger80 | muelli           | 0.68 $  | 0 days 4:50  | 1584677025773 | 5000    | 364432 |
| holger80 | emrebeyler       | 1.01 $  | 0 days 4:28  | 2360837888866 | 7500    | 649503 |
| holger80 | denmarkguy       | 0.57 $  | 0 days 3:20  | 1331770685831 | 4251    | 377530 |
| holger80 | inertia          | 1.02 $  | 0 days 0:40  | 2386404162091 | 7500    | 256582 |
| holger80 | stellabelle      | 0.94 $  | 0 days 0:34  | 2195712375512 | 7000    | 524304 |
+----------+------------------+---------+--------------+---------------+---------+--------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;where d limit the shown days.
Incoming votes can be seen with&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy votes -i -d 1 holger80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+---------------+----------+---------+--------------+---------------+---------+--------+
| Voter         | Votee    | SBD/HBD | Time         | Rshares       | Percent | Weight |
+---------------+----------+---------+--------------+---------------+---------+--------+
| kaymay        | holger80 | 0.0  $  | 0 days 23:54 | 138492921     | 10000   | 7      |
| barton26      | holger80 | 0.01 $  | 0 days 23:4  | 18413631854   | 10000   | 936    |
| dhimmel       | holger80 | 2.0  $  | 0 days 18:59 | 4675461211716 | 10000   | 235183 |
| joey-fancy    | holger80 | 0.0  $  | 0 days 17:3  | 5993194991    | 10000   | 298    |
| cubapl        | holger80 | 0.0  $  | 0 days 12:52 | 3051877392    | 10000   | 152    |
| steemcleaners | holger80 | 1.13 $  | 0 days 10:0  | 2646991658036 | 5000    | 130928 |
| saboin        | holger80 | 0.16 $  | 0 days 8:36  | 367812173322  | 4500    | 18068  |
| netuoso       | holger80 | 0.33 $  | 0 days 2:39  | 765623609156  | 10000   | 38036  |
| memehub       | holger80 | 1.15 $  | 0 days 2:5   | 2685197932823 | 10000   | 132357 |
| crokkon       | holger80 | 0.02 $  | 0 days 1:57  | 40344164439   | 10000   | 1977   |
| dustsweeper   | holger80 | 0.04 $  | 0 days 1:36  | 89501844457   | 2000    | 4393   |
+---------------+----------+---------+--------------+---------------+---------+--------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;pending-rewards&quot;&gt;Pending rewards&lt;/h2&gt;
&lt;p&gt;This command can be used for calculating pending rewards for posts, comments and votes. The conversion to USD is done by using the latest internal market price for HIVE/HBD and the 7 day median price for HIVE/USD.&lt;/p&gt;

&lt;p&gt;Pending rewards from posts can be shown by&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy pending --post holger80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+----------+-----------+-----------+------------+--------------+
| Cashout  | HBD       | HP        | Liquid USD | Invested USD |
+----------+-----------+-----------+------------+--------------+
| 4.0 days | 16.389    | 84.044    | 14.06 $    | 16.39 $      |
| 0.9 days | 16.347    | 83.830    | 14.02 $    | 16.35 $      |
|          |           |           |            |              |
| Sum      | 32.74 HBD | 167.87 HP | 28.08 $    | 32.74 $      |
+----------+-----------+-----------+------------+--------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--author&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;--permlink&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;--title&lt;/code&gt; can be set to show more information.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;--days&lt;/code&gt; parameter limits the shown duration in days and &lt;code class=&quot;highlighter-rouge&quot;&gt;--from&lt;/code&gt; sets the start point in days. The curation rewards from before 6 to 7 days can be viewed by (this call takes a while):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; beempy pending --curation --author --from 6 --days 1 holger80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Showing pending curation rewards for @holger80
+-----------------+----------+----------+----------+------------+--------------+
| Author          | Cashout  | HBD      | HP       | Liquid USD | Invested USD |
+-----------------+----------+----------+----------+------------+--------------+
| anthonyadavisii | 0.9 days | 0.000    | 3.953    | 0.00 $     | 0.77 $       |
| arcange         | 0.9 days | 0.000    | 2.708    | 0.00 $     | 0.53 $       |
| denmarkguy      | 0.9 days | 0.000    | 4.148    | 0.00 $     | 0.81 $       |
| anomadsoul      | 0.8 days | 0.000    | 5.438    | 0.00 $     | 1.06 $       |
| exhaust         | 0.7 days | 0.000    | 1.819    | 0.00 $     | 0.35 $       |
| bluerobo        | 0.7 days | 0.000    | 3.372    | 0.00 $     | 0.66 $       |
| therealwolf     | 0.7 days | 0.000    | 9.194    | 0.00 $     | 1.79 $       |
| markkujantunen  | 0.6 days | 0.000    | 2.717    | 0.00 $     | 0.53 $       |
| steemcleaners   | 0.6 days | 0.000    | 4.727    | 0.00 $     | 0.92 $       |
| moon32walker    | 0.6 days | 0.000    | 2.043    | 0.00 $     | 0.40 $       |
| stateofthedapps | 0.5 days | 0.000    | 1.780    | 0.00 $     | 0.35 $       |
| nateaguila      | 0.5 days | 0.000    | 4.630    | 0.00 $     | 0.90 $       |
| jrvacation      | 0.5 days | 0.000    | 3.617    | 0.00 $     | 0.71 $       |
| eonwarped       | 0.3 days | 0.000    | 2.591    | 0.00 $     | 0.51 $       |
| steemillu       | 0.1 days | 0.000    | 1.760    | 0.00 $     | 0.34 $       |
| hiq             | 0.1 days | 0.000    | 5.430    | 0.00 $     | 1.06 $       |
| fullnodeupdate  | 0.0 days | 0.000    | 1.585    | 0.00 $     | 0.31 $       |
| yabapmatt       | 0.0 days | 0.000    | 3.789    | 0.00 $     | 0.74 $       |
| therealwolf     | 0.0 days | 0.000    | 1.144    | 0.00 $     | 0.22 $       |
|                 |          |          |          |            |              |
| Sum             | -        | 0.00 HBD | 66.44 HP | 0.00 $     | 12.96 $      |
+-----------------+----------+----------+----------+------------+--------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The given values are only estimate, e.g. for &lt;code class=&quot;highlighter-rouge&quot;&gt;@therealwolf/dhive&lt;/code&gt; 1.144 HP was estimated, but received 0.927 HP.
&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/holger80/McNvkk31-image.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The pending curation rewards from the last 24 h can be viewed by&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; beempy pending --curation --author --from 0 --days 1 holger80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--comment&lt;/code&gt; can be used to view pending reward on comments.&lt;/p&gt;

&lt;h2 id=&quot;curation-performance-for-a-given-permlink&quot;&gt;Curation performance for a given permlink&lt;/h2&gt;
&lt;p&gt;The curation performance can be calculated by curation for pending and already paid-out posts.
The following command shows the curation performance of voter &lt;code class=&quot;highlighter-rouge&quot;&gt;holger80&lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;@therealwolf/dhive&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy curation -a holger80 @therealwolf/dhive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------------+-------------+------------+-----------------+-----------+-------------+
| Voter      | Voting time | Vote       | Early vote loss | Curation  | Performance |
+------------+-------------+------------+-----------------+-----------+-------------+
| holger80   | 27.4 min    | 0.328 HBD  | 0.000 HBD       | 0.926 HP  | 55.0 %      |
|            |             |            |                 |           |             |
| High. vote | 688.7 min   | 10.198 HBD | 0.000 HBD       | 21.750 HP | 41.6 %      |
| High. Cur. | 4.3 min     | 0.104 HBD  | 0.014 HBD       | 0.909 HP  | 170.1 %     |
| Sum        | -           | 36.675 HBD | 0.514 HBD       | 86.581 HP | 45.97 %     |
+------------+-------------+------------+-----------------+-----------+-------------+`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The performance percentage is calculated by dividing the received Hive Power through the vote value in HIVE. 
The curation performance of all votes with a value higher than 0.2 HBD can be checked with&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy curation --min-vote 0.2 @therealwolf/dhive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+-----------------+-------------+------------+-----------------+-----------+-------------+
| Voter           | Voting time | Vote       | Early vote loss | Curation  | Performance |
+-----------------+-------------+------------+-----------------+-----------+-------------+
| karja           | 3.9 min     | 0.223 HBD  | 0.051 HBD       | 1.875 HP  | 164.2 %     |
| oflyhigh        | 4.5 min     | 1.969 HBD  | 0.217 HBD       | 11.331 HP | 112.2 %     |
| deanliu         | 4.5 min     | 1.077 HBD  | 0.108 HBD       | 5.063 HP  | 91.7 %      |
| helene          | 4.5 min     | 0.518 HBD  | 0.052 HBD       | 2.140 HP  | 80.6 %      |
| xiaohui         | 4.5 min     | 0.394 HBD  | 0.035 HBD       | 1.535 HP  | 76.0 %      |
| russia-btc      | 17.1 min    | 0.241 HBD  | 0.000 HBD       | 0.938 HP  | 75.9 %      |
| yabapmatt       | 17.9 min    | 2.006 HBD  | 0.000 HBD       | 6.731 HP  | 65.4 %      |
| holger80        | 27.4 min    | 0.328 HBD  | 0.000 HBD       | 0.926 HP  | 55.0 %      |
| lunaticpandora  | 58.0 min    | 0.391 HBD  | 0.000 HBD       | 0.985 HP  | 49.2 %      |
| solarwarrior    | 58.1 min    | 0.634 HBD  | 0.000 HBD       | 1.509 HP  | 46.4 %      |
| diggndeeper.com | 64.1 min    | 0.473 HBD  | 0.000 HBD       | 0.990 HP  | 40.9 %      |
| fredrikaa       | 80.0 min    | 0.739 HBD  | 0.000 HBD       | 1.445 HP  | 38.1 %      |
| braaiboy        | 80.0 min    | 0.259 HBD  | 0.000 HBD       | 0.482 HP  | 36.3 %      |
| asgarth         | 149.3 min   | 0.825 HBD  | 0.000 HBD       | 1.415 HP  | 33.4 %      |
| good-karma      | 375.8 min   | 0.702 HBD  | 0.000 HBD       | 1.110 HP  | 30.8 %      |
| therealwolf     | 688.7 min   | 10.198 HBD | 0.000 HBD       | 21.750 HP | 41.6 %      |
| nextcolony      | 763.6 min   | 0.209 HBD  | 0.000 HBD       | 0.361 HP  | 33.7 %      |
| steemik         | 1247.0 min  | 0.737 HBD  | 0.000 HBD       | 1.248 HP  | 33.0 %      |
| smartsteem      | 6575.2 min  | 7.220 HBD  | 0.000 HBD       | 10.606 HP | 28.6 %      |
| tombstone       | 6575.3 min  | 3.967 HBD  | 0.000 HBD       | 4.824 HP  | 23.7 %      |
| epicdice        | 6575.3 min  | 0.246 HBD  | 0.000 HBD       | 0.319 HP  | 25.3 %      |
|                 |             |            |                 |           |             |
| High. vote      | 688.7 min   | 10.198 HBD | 0.000 HBD       | 21.750 HP | 41.6 %      |
| High. Cur.      | 4.3 min     | 0.104 HBD  | 0.014 HBD       | 0.909 HP  | 170.1 %     |
| Sum             | -           | 36.675 HBD | 0.514 HBD       | 86.581 HP | 45.97 %     |
+-----------------+-------------+------------+-----------------+-----------+-------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This works also for pending posts. The &lt;code class=&quot;highlighter-rouge&quot;&gt;--min-vote&lt;/code&gt; parameter influences now the shown highest curation. This is useful, as low votes can have high curation performance, which cannot archived with higher votes. I can see that the vote optimum is around 4.2 minutes for votes higher than 0.4 HBD.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy curation -a holger80  --min-vote 0.4 @emrebeyler/dpoll-beneficiary-update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curation for @emrebeyler/dpoll-beneficiary-update
+------------+-------------+------------+-----------------+-----------+-------------+
| Voter      | Voting time | Vote       | Early vote loss | Curation  | Performance |
+------------+-------------+------------+-----------------+-----------+-------------+
| holger80   | 5.1 min     | 1.008 HBD  | 0.000 HBD       | 4.497 HP  | 87.0 %      |
|            |             |            |                 |           |             |
| High. vote | 201.6 min   | 12.492 HBD | 0.000 HBD       | 22.977 HP | 35.9 %      |
| High. Cur. | 4.2 min     | 0.507 HBD  | 0.081 HBD       | 2.760 HP  | 106.2 %     |
| Sum        | -           | 16.314 HBD | 0.159 HBD       | 38.316 HP | 45.76 %     |
+------------+-------------+------------+-----------------+-----------+-------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;If you like what I do, consider casting a vote for me as witness on &lt;a href=&quot;https://hivesigner.com.com/sign/account-witness-vote?witness=holger80&amp;amp;approve=1&quot;&gt;Hivesigner&lt;/a&gt; or on &lt;a href=&quot;https://peakd.com/witnesses&quot;&gt;PeakD&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/@holger80/update-for-beem-fixing-author-curation-reward-calculation-and-more&quot;&gt;Update for beem: fixing author/curation reward calculation and more&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@holger80&quot;&gt;@holger80&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/python&quot;&gt;More About Python&lt;/a&gt;&lt;/p&gt;</content><author><name>holger80</name></author><summary type="html">Repository https://github.com/holgern/beem&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt; beem is a python library for STEEM and HIVE. The current version is 0.22.12. There is also a discord channel for beem: https://discord.gg/4HM592V The newest beem version can be installed by: pip install -U beem Check that you are using hive nodes. The following command beempy updatenodes --hive updates the nodelist and uses only hive nodes. The list of nodes can be checked with beempy config and beempy currentnode shows the currently connected node. Changelog for versions 0.22.12 This update fixed the Vote classes, curation/author reward calculation, Discussions classes and get_feed and get_account_votes for Accounts. Add hive node get_feed uses now discussion_by_feed get_account_votes has been fixed ActiveVotes has been fixed Discussions has been fixed raw_data parameter added to all discussions beempy curation, beempy votes and beempy pending has been fixed Votes table improved fix curation and author reward calculation Fixing all integration tests After fixing the remaining problems in vote, comment and account, all 462 tests have finally passed. ========== 462 passed, 27 skipped, 13 warnings in 1551.63s (0:25:51) =========== The CI may fail from time to time due to node time outs. View outgoing and incoming votes with beempy Outgoing votes can be checked with beempy votes -o -d 1 holger80 +----------+------------------+---------+--------------+---------------+---------+--------+ | Voter | Votee | SBD/HBD | Time | Rshares | Percent | Weight | +----------+------------------+---------+--------------+---------------+---------+--------+ | holger80 | pibara | 1.0 $ | 0 days 23:9 | 2348837832917 | 7500 | 911136 | | holger80 | pennsif | 1.34 $ | 0 days 21:17 | 3123742413620 | 9955 | 390108 | | holger80 | nonameslefttouse | 1.08 $ | 0 days 18:45 | 2517726726913 | 8000 | 323940 | | holger80 | gtg | 1.4 $ | 0 days 12:17 | 3279925264141 | 10000 | 281332 | | holger80 | quochuy | 1.39 $ | 0 days 10:42 | 3259050022456 | 10000 | 216722 | | holger80 | steemcleaners | 0.68 $ | 0 days 10:30 | 1599714528677 | 5000 | 358546 | | holger80 | dsound | 1.03 $ | 0 days 9:30 | 2396854864854 | 7500 | 238509 | | holger80 | abitcoinskeptic | 1.35 $ | 0 days 8:49 | 3167311773888 | 10000 | 847601 | | holger80 | jga | 0.68 $ | 0 days 6:6 | 1590352821718 | 5000 | 151064 | | holger80 | creary | 0.34 $ | 0 days 5:50 | 789079645344 | 2500 | 317630 | | holger80 | muelli | 0.68 $ | 0 days 4:50 | 1584677025773 | 5000 | 364432 | | holger80 | emrebeyler | 1.01 $ | 0 days 4:28 | 2360837888866 | 7500 | 649503 | | holger80 | denmarkguy | 0.57 $ | 0 days 3:20 | 1331770685831 | 4251 | 377530 | | holger80 | inertia | 1.02 $ | 0 days 0:40 | 2386404162091 | 7500 | 256582 | | holger80 | stellabelle | 0.94 $ | 0 days 0:34 | 2195712375512 | 7000 | 524304 | +----------+------------------+---------+--------------+---------------+---------+--------+ where d limit the shown days. Incoming votes can be seen with beempy votes -i -d 1 holger80 +---------------+----------+---------+--------------+---------------+---------+--------+ | Voter | Votee | SBD/HBD | Time | Rshares | Percent | Weight | +---------------+----------+---------+--------------+---------------+---------+--------+ | kaymay | holger80 | 0.0 $ | 0 days 23:54 | 138492921 | 10000 | 7 | | barton26 | holger80 | 0.01 $ | 0 days 23:4 | 18413631854 | 10000 | 936 | | dhimmel | holger80 | 2.0 $ | 0 days 18:59 | 4675461211716 | 10000 | 235183 | | joey-fancy | holger80 | 0.0 $ | 0 days 17:3 | 5993194991 | 10000 | 298 | | cubapl | holger80 | 0.0 $ | 0 days 12:52 | 3051877392 | 10000 | 152 | | steemcleaners | holger80 | 1.13 $ | 0 days 10:0 | 2646991658036 | 5000 | 130928 | | saboin | holger80 | 0.16 $ | 0 days 8:36 | 367812173322 | 4500 | 18068 | | netuoso | holger80 | 0.33 $ | 0 days 2:39 | 765623609156 | 10000 | 38036 | | memehub | holger80 | 1.15 $ | 0 days 2:5 | 2685197932823 | 10000 | 132357 | | crokkon | holger80 | 0.02 $ | 0 days 1:57 | 40344164439 | 10000 | 1977 | | dustsweeper | holger80 | 0.04 $ | 0 days 1:36 | 89501844457 | 2000 | 4393 | +---------------+----------+---------+--------------+---------------+---------+--------+ Pending rewards This command can be used for calculating pending rewards for posts, comments and votes. The conversion to USD is done by using the latest internal market price for HIVE/HBD and the 7 day median price for HIVE/USD. Pending rewards from posts can be shown by beempy pending --post holger80 +----------+-----------+-----------+------------+--------------+ | Cashout | HBD | HP | Liquid USD | Invested USD | +----------+-----------+-----------+------------+--------------+ | 4.0 days | 16.389 | 84.044 | 14.06 $ | 16.39 $ | | 0.9 days | 16.347 | 83.830 | 14.02 $ | 16.35 $ | | | | | | | | Sum | 32.74 HBD | 167.87 HP | 28.08 $ | 32.74 $ | +----------+-----------+-----------+------------+--------------+ --author, --permlink or --title can be set to show more information. The --days parameter limits the shown duration in days and --from sets the start point in days. The curation rewards from before 6 to 7 days can be viewed by (this call takes a while): beempy pending --curation --author --from 6 --days 1 holger80 Showing pending curation rewards for @holger80 +-----------------+----------+----------+----------+------------+--------------+ | Author | Cashout | HBD | HP | Liquid USD | Invested USD | +-----------------+----------+----------+----------+------------+--------------+ | anthonyadavisii | 0.9 days | 0.000 | 3.953 | 0.00 $ | 0.77 $ | | arcange | 0.9 days | 0.000 | 2.708 | 0.00 $ | 0.53 $ | | denmarkguy | 0.9 days | 0.000 | 4.148 | 0.00 $ | 0.81 $ | | anomadsoul | 0.8 days | 0.000 | 5.438 | 0.00 $ | 1.06 $ | | exhaust | 0.7 days | 0.000 | 1.819 | 0.00 $ | 0.35 $ | | bluerobo | 0.7 days | 0.000 | 3.372 | 0.00 $ | 0.66 $ | | therealwolf | 0.7 days | 0.000 | 9.194 | 0.00 $ | 1.79 $ | | markkujantunen | 0.6 days | 0.000 | 2.717 | 0.00 $ | 0.53 $ | | steemcleaners | 0.6 days | 0.000 | 4.727 | 0.00 $ | 0.92 $ | | moon32walker | 0.6 days | 0.000 | 2.043 | 0.00 $ | 0.40 $ | | stateofthedapps | 0.5 days | 0.000 | 1.780 | 0.00 $ | 0.35 $ | | nateaguila | 0.5 days | 0.000 | 4.630 | 0.00 $ | 0.90 $ | | jrvacation | 0.5 days | 0.000 | 3.617 | 0.00 $ | 0.71 $ | | eonwarped | 0.3 days | 0.000 | 2.591 | 0.00 $ | 0.51 $ | | steemillu | 0.1 days | 0.000 | 1.760 | 0.00 $ | 0.34 $ | | hiq | 0.1 days | 0.000 | 5.430 | 0.00 $ | 1.06 $ | | fullnodeupdate | 0.0 days | 0.000 | 1.585 | 0.00 $ | 0.31 $ | | yabapmatt | 0.0 days | 0.000 | 3.789 | 0.00 $ | 0.74 $ | | therealwolf | 0.0 days | 0.000 | 1.144 | 0.00 $ | 0.22 $ | | | | | | | | | Sum | - | 0.00 HBD | 66.44 HP | 0.00 $ | 12.96 $ | +-----------------+----------+----------+----------+------------+--------------+ The given values are only estimate, e.g. for @therealwolf/dhive 1.144 HP was estimated, but received 0.927 HP. The pending curation rewards from the last 24 h can be viewed by beempy pending --curation --author --from 0 --days 1 holger80 --comment can be used to view pending reward on comments. Curation performance for a given permlink The curation performance can be calculated by curation for pending and already paid-out posts. The following command shows the curation performance of voter holger80 on @therealwolf/dhive. beempy curation -a holger80 @therealwolf/dhive +------------+-------------+------------+-----------------+-----------+-------------+ | Voter | Voting time | Vote | Early vote loss | Curation | Performance | +------------+-------------+------------+-----------------+-----------+-------------+ | holger80 | 27.4 min | 0.328 HBD | 0.000 HBD | 0.926 HP | 55.0 % | | | | | | | | | High. vote | 688.7 min | 10.198 HBD | 0.000 HBD | 21.750 HP | 41.6 % | | High. Cur. | 4.3 min | 0.104 HBD | 0.014 HBD | 0.909 HP | 170.1 % | | Sum | - | 36.675 HBD | 0.514 HBD | 86.581 HP | 45.97 % | +------------+-------------+------------+-----------------+-----------+-------------+` The performance percentage is calculated by dividing the received Hive Power through the vote value in HIVE. The curation performance of all votes with a value higher than 0.2 HBD can be checked with beempy curation --min-vote 0.2 @therealwolf/dhive +-----------------+-------------+------------+-----------------+-----------+-------------+ | Voter | Voting time | Vote | Early vote loss | Curation | Performance | +-----------------+-------------+------------+-----------------+-----------+-------------+ | karja | 3.9 min | 0.223 HBD | 0.051 HBD | 1.875 HP | 164.2 % | | oflyhigh | 4.5 min | 1.969 HBD | 0.217 HBD | 11.331 HP | 112.2 % | | deanliu | 4.5 min | 1.077 HBD | 0.108 HBD | 5.063 HP | 91.7 % | | helene | 4.5 min | 0.518 HBD | 0.052 HBD | 2.140 HP | 80.6 % | | xiaohui | 4.5 min | 0.394 HBD | 0.035 HBD | 1.535 HP | 76.0 % | | russia-btc | 17.1 min | 0.241 HBD | 0.000 HBD | 0.938 HP | 75.9 % | | yabapmatt | 17.9 min | 2.006 HBD | 0.000 HBD | 6.731 HP | 65.4 % | | holger80 | 27.4 min | 0.328 HBD | 0.000 HBD | 0.926 HP | 55.0 % | | lunaticpandora | 58.0 min | 0.391 HBD | 0.000 HBD | 0.985 HP | 49.2 % | | solarwarrior | 58.1 min | 0.634 HBD | 0.000 HBD | 1.509 HP | 46.4 % | | diggndeeper.com | 64.1 min | 0.473 HBD | 0.000 HBD | 0.990 HP | 40.9 % | | fredrikaa | 80.0 min | 0.739 HBD | 0.000 HBD | 1.445 HP | 38.1 % | | braaiboy | 80.0 min | 0.259 HBD | 0.000 HBD | 0.482 HP | 36.3 % | | asgarth | 149.3 min | 0.825 HBD | 0.000 HBD | 1.415 HP | 33.4 % | | good-karma | 375.8 min | 0.702 HBD | 0.000 HBD | 1.110 HP | 30.8 % | | therealwolf | 688.7 min | 10.198 HBD | 0.000 HBD | 21.750 HP | 41.6 % | | nextcolony | 763.6 min | 0.209 HBD | 0.000 HBD | 0.361 HP | 33.7 % | | steemik | 1247.0 min | 0.737 HBD | 0.000 HBD | 1.248 HP | 33.0 % | | smartsteem | 6575.2 min | 7.220 HBD | 0.000 HBD | 10.606 HP | 28.6 % | | tombstone | 6575.3 min | 3.967 HBD | 0.000 HBD | 4.824 HP | 23.7 % | | epicdice | 6575.3 min | 0.246 HBD | 0.000 HBD | 0.319 HP | 25.3 % | | | | | | | | | High. vote | 688.7 min | 10.198 HBD | 0.000 HBD | 21.750 HP | 41.6 % | | High. Cur. | 4.3 min | 0.104 HBD | 0.014 HBD | 0.909 HP | 170.1 % | | Sum | - | 36.675 HBD | 0.514 HBD | 86.581 HP | 45.97 % | +-----------------+-------------+------------+-----------------+-----------+-------------+ This works also for pending posts. The --min-vote parameter influences now the shown highest curation. This is useful, as low votes can have high curation performance, which cannot archived with higher votes. I can see that the vote optimum is around 4.2 minutes for votes higher than 0.4 HBD. beempy curation -a holger80 --min-vote 0.4 @emrebeyler/dpoll-beneficiary-update curation for @emrebeyler/dpoll-beneficiary-update +------------+-------------+------------+-----------------+-----------+-------------+ | Voter | Voting time | Vote | Early vote loss | Curation | Performance | +------------+-------------+------------+-----------------+-----------+-------------+ | holger80 | 5.1 min | 1.008 HBD | 0.000 HBD | 4.497 HP | 87.0 % | | | | | | | | | High. vote | 201.6 min | 12.492 HBD | 0.000 HBD | 22.977 HP | 35.9 % | | High. Cur. | 4.2 min | 0.507 HBD | 0.081 HBD | 2.760 HP | 106.2 % | | Sum | - | 16.314 HBD | 0.159 HBD | 38.316 HP | 45.76 % | +------------+-------------+------------+-----------------+-----------+-------------+ If you like what I do, consider casting a vote for me as witness on Hivesigner or on PeakD. See: Update for beem: fixing author/curation reward calculation and more by @holger80</summary></entry><entry><title type="html">Use beempy to access the internal HIVE/HBD market</title><link href="https://hivedocs.info/howto/beem/python/market/hbd/2020/03/24/use-beempy-to-access-the-internal-hive-hbd-market.html" rel="alternate" type="text/html" title="Use beempy to access the internal HIVE/HBD market" /><published>2020-03-24T13:57:21-07:00</published><updated>2020-03-24T13:57:21-07:00</updated><id>https://hivedocs.info/howto/beem/python/market/hbd/2020/03/24/use-beempy-to-access-the-internal-hive-hbd-market</id><content type="html" xml:base="https://hivedocs.info/howto/beem/python/market/hbd/2020/03/24/use-beempy-to-access-the-internal-hive-hbd-market.html">&lt;p&gt;&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/holger80/Vun5k1Ut-image.png&quot; alt=&quot;image.png&quot; /&gt;
&lt;a href=&quot;https://pixabay.com/de/photos/%C3%A4pfel-bauernmarkt-gesch%C3%A4ft-kaufen-1841132/&quot;&gt;source&lt;/a&gt;
Although not visible, the internal market is already working and HBD can be exchanged for HIVE.&lt;/p&gt;

&lt;h2 id=&quot;prepare-beempy&quot;&gt;Prepare beempy&lt;/h2&gt;
&lt;p&gt;You need to have an up to date &lt;a href=&quot;https://github.com/holgern/beem&quot;&gt;beem&lt;/a&gt; version 0.22.8&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy updatenodes --hive
beempy currentnode
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;should return now&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+----------+-----------------------+
| Key      | Value                 |
+----------+-----------------------+
| Node-Url | https://api.hive.blog |
| Version  | 0.23.0                |
| HIVE     | True                  |
+----------+-----------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;check-the-orderbook&quot;&gt;Check the orderbook&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy orderbook --chart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;            Orderbook

    1701.93 $  ┼
    1595.59 $  ┼╮
    1489.25 $  ┤╰─╮                      ┊
    1382.90 $  ┤  ╰─╮                    ┊               ╭───────
    1276.56 $  ┤    ╰╮                   ┊          ╭────╯
    1170.22 $  ┤     ╰───╮               ┊         ╭╯
    1063.87 $  ┤         ╰╮              ┊         │
     957.53 $  ┤          │              ┊         │
     851.19 $  ┤          │              ┊       ╭─╯
     744.84 $  ┤          │              ┊       │
     638.50 $  ┤          │              ┊     ╭─╯
     532.16 $  ┤          │              ┊    ╭╯
     425.81 $  ┤          ╰─────╮        ┊    │
     319.47 $  ┤                ╰────╮   ┊   ╭╯
     213.12 $  ┤                     ╰─╮ ┊   │
     106.78 $  ┤                       ╰╮┊   │
       0.44 $  ┤                        ╰────╯
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; beempy tradehistory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;returns the last trades as plot&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;     Trade history 2020-03-17T20:26:22 - 2020-03-24T20:26:22

HIVE/HBD
  0.32  ┤
  0.31  ┤                 ╭╮
  0.30  ┤                 │╰╮
  0.29  ┤                ╭╯ │
  0.28  ┤                │  ╰╮
  0.27  ┤                │   │       ╭╮ ╭─
  0.26  ┤             ╭╮╭╯   │╭──╮  ╭╯│ │
  0.26  ┤             │││    ││  ╰╮ │ ╰─╯
  0.25  ┤            ╭╯╰╯    ╰╯   ╰─╯
  0.24  ┤        ╭╮ ╭╯
  0.23  ┤        ││╭╯
  0.22  ┤        │╰╯
  0.21  ┤        │
  0.20  ┤        │
  0.19  ┤        │
  0.18  ┤       ╭╯
  0.17  ┼───────╯
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;a short info can be obtained by&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy ticker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+----------------+-------------------+
| Key            | Value             |
+----------------+-------------------+
| highest_bid    | 0.253913 HIVE/HBD |
| latest         | 0.300000 HIVE/HBD |
| lowest_ask     | 0.253994 HIVE/HBD |
| percent_change | 0.00 %            |
| sbd_volume     | 199.189 HBD       |
| steem_volume   | 765.713 HIVE      |
+----------------+-------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;lets-trade-some-hbd-for-hive&quot;&gt;Let’s trade some HBD for HIVE&lt;/h2&gt;
&lt;p&gt;First we should check our balance:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy balance holger80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and then start to sell 1 HBD&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy sell -a holger80 1 HBD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I’m now asked if the price is ok:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Is the following Price ok: 0.253913 HBD/HIVE [y/n]:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and should then enter my active wif:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Password to unlock wallet or posting/active wif:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I see then the broadcasted op:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Wif accepted!
{
    &quot;expiration&quot;: &quot;2020-03-24T20:34:03&quot;,
    &quot;ref_block_num&quot;: 63124,
    &quot;ref_block_prefix&quot;: 2805668693,
    &quot;operations&quot;: [
        [
            &quot;limit_order_create&quot;,
            {
                &quot;owner&quot;: &quot;holger80&quot;,
                &quot;orderid&quot;: 3815817900,
                &quot;amount_to_sell&quot;: &quot;1.000 HBD&quot;,
                &quot;min_to_receive&quot;: &quot;3.938 HIVE&quot;,
                &quot;fill_or_kill&quot;: false,
                &quot;expiration&quot;: &quot;2020-03-31T20:33:33&quot;
            }
        ]
    ],
    &quot;extensions&quot;: [],
    &quot;signatures&quot;: [
        &quot;206b30dd79130814b9f14468c573fd9154020148e43481f810343964b93bcf8c1865927d49d1e3b521ff9a2af12bd5461c2edee220b64f59108c04413c3b88cbb0&quot;
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and can check my open orders:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy openorders holger80 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------------+---------------------+------------------------------------------+----------+
|    Orderid |             Created |                                    Order |  Account |
+------------+---------------------+------------------------------------------+----------+
| 3815817900 | 2020-03-24T20:33:33 | 3.938 HIVE 1.000 HBD @ 0.253936 HBD/HIVE | holger80 |
+------------+---------------------+------------------------------------------+----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;cancel-open-orders&quot;&gt;Cancel open orders&lt;/h2&gt;
&lt;p&gt;I can cancel my order by&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy cancel -a 3815817900 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Instead of selling 1 HBD, I can also buy 1 HIVE by&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy buy -a holger80 1 HIVE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;after checking the price and entering my wif, the order is placed.&lt;/p&gt;

&lt;h2 id=&quot;using-the-orderbook-to-fulfill-orders&quot;&gt;Using the orderbook to fulfill orders&lt;/h2&gt;
&lt;p&gt;Let’s check the first 5 orders:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy orderbook -l 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+--------------+----------------------------------------------+--------------+-------------------------------------------+
| Asks Sum HBD |                                  Sell Orders | Bids Sum HBD |                                Buy Orders |
+--------------+----------------------------------------------+--------------+-------------------------------------------+
|        66.15 |  260.432 HIVE 66.148 HBD @ 0.253993 HBD/HIVE |         0.44 |  1.725 HIVE 0.438 HBD @ 0.253913 HBD/HIVE |
|       240.43 | 637.769 HIVE 174.284 HBD @ 0.273271 HBD/HIVE |         0.70 |  1.032 HIVE 0.262 HBD @ 0.253876 HBD/HIVE |
|       267.93 |  100.000 HIVE 27.500 HBD @ 0.275000 HBD/HIVE |         0.91 |  0.842 HIVE 0.211 HBD @ 0.250594 HBD/HIVE |
|       283.93 |   53.344 HIVE 16.002 HBD @ 0.299978 HBD/HIVE |         0.91 |  0.004 HIVE 0.001 HBD @ 0.250000 HBD/HIVE |
|       296.29 |   41.191 HIVE 12.357 HBD @ 0.299993 HBD/HIVE |         6.64 | 23.778 HIVE 5.731 HBD @ 0.241021 HBD/HIVE |
+--------------+----------------------------------------------+--------------+-------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I can now sell 1 HBD @ 0.253993 HBD/HIVE as shown in the Asks column and the order should be fulfilled without waiting. Let’s try:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; beempy sell -a holger80 1 HBD 0.253993
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This time, I can enter the wif without asking for the price. The orderbook is empty this time:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;beempy openorders  holger80 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+---------+---------+-------+---------+
| Orderid | Created | Order | Account |
+---------+---------+-------+---------+
+---------+---------+-------+---------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The blockexplorer shows that my order was fulfilled:
&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/holger80/FpiIlfLa-image.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I hope this help as long as the internal market has no interface.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/@holger80/use-beempy-to-access-the-internal-hive-hbd-market&quot;&gt;Use beempy to access the internal HIVE/HBD market&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@holger80&quot;&gt;@holger80&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/python&quot;&gt;More About Python&lt;/a&gt;&lt;/p&gt;</content><author><name>holger80</name></author><summary type="html">source Although not visible, the internal market is already working and HBD can be exchanged for HIVE. Prepare beempy You need to have an up to date beem version 0.22.8 beempy updatenodes --hive beempy currentnode should return now +----------+-----------------------+ | Key | Value | +----------+-----------------------+ | Node-Url | https://api.hive.blog | | Version | 0.23.0 | | HIVE | True | +----------+-----------------------+ Check the orderbook beempy orderbook --chart Orderbook 1701.93 $ ┼ 1595.59 $ ┼╮ 1489.25 $ ┤╰─╮ ┊ 1382.90 $ ┤ ╰─╮ ┊ ╭─────── 1276.56 $ ┤ ╰╮ ┊ ╭────╯ 1170.22 $ ┤ ╰───╮ ┊ ╭╯ 1063.87 $ ┤ ╰╮ ┊ │ 957.53 $ ┤ │ ┊ │ 851.19 $ ┤ │ ┊ ╭─╯ 744.84 $ ┤ │ ┊ │ 638.50 $ ┤ │ ┊ ╭─╯ 532.16 $ ┤ │ ┊ ╭╯ 425.81 $ ┤ ╰─────╮ ┊ │ 319.47 $ ┤ ╰────╮ ┊ ╭╯ 213.12 $ ┤ ╰─╮ ┊ │ 106.78 $ ┤ ╰╮┊ │ 0.44 $ ┤ ╰────╯ and beempy tradehistory returns the last trades as plot Trade history 2020-03-17T20:26:22 - 2020-03-24T20:26:22 HIVE/HBD 0.32 ┤ 0.31 ┤ ╭╮ 0.30 ┤ │╰╮ 0.29 ┤ ╭╯ │ 0.28 ┤ │ ╰╮ 0.27 ┤ │ │ ╭╮ ╭─ 0.26 ┤ ╭╮╭╯ │╭──╮ ╭╯│ │ 0.26 ┤ │││ ││ ╰╮ │ ╰─╯ 0.25 ┤ ╭╯╰╯ ╰╯ ╰─╯ 0.24 ┤ ╭╮ ╭╯ 0.23 ┤ ││╭╯ 0.22 ┤ │╰╯ 0.21 ┤ │ 0.20 ┤ │ 0.19 ┤ │ 0.18 ┤ ╭╯ 0.17 ┼───────╯ a short info can be obtained by beempy ticker +----------------+-------------------+ | Key | Value | +----------------+-------------------+ | highest_bid | 0.253913 HIVE/HBD | | latest | 0.300000 HIVE/HBD | | lowest_ask | 0.253994 HIVE/HBD | | percent_change | 0.00 % | | sbd_volume | 199.189 HBD | | steem_volume | 765.713 HIVE | +----------------+-------------------+ Let’s trade some HBD for HIVE First we should check our balance: beempy balance holger80 and then start to sell 1 HBD beempy sell -a holger80 1 HBD I’m now asked if the price is ok: Is the following Price ok: 0.253913 HBD/HIVE [y/n]: and should then enter my active wif: Password to unlock wallet or posting/active wif: I see then the broadcasted op: Wif accepted! { &quot;expiration&quot;: &quot;2020-03-24T20:34:03&quot;, &quot;ref_block_num&quot;: 63124, &quot;ref_block_prefix&quot;: 2805668693, &quot;operations&quot;: [ [ &quot;limit_order_create&quot;, { &quot;owner&quot;: &quot;holger80&quot;, &quot;orderid&quot;: 3815817900, &quot;amount_to_sell&quot;: &quot;1.000 HBD&quot;, &quot;min_to_receive&quot;: &quot;3.938 HIVE&quot;, &quot;fill_or_kill&quot;: false, &quot;expiration&quot;: &quot;2020-03-31T20:33:33&quot; } ] ], &quot;extensions&quot;: [], &quot;signatures&quot;: [ &quot;206b30dd79130814b9f14468c573fd9154020148e43481f810343964b93bcf8c1865927d49d1e3b521ff9a2af12bd5461c2edee220b64f59108c04413c3b88cbb0&quot; ] } and can check my open orders: beempy openorders holger80 +------------+---------------------+------------------------------------------+----------+ | Orderid | Created | Order | Account | +------------+---------------------+------------------------------------------+----------+ | 3815817900 | 2020-03-24T20:33:33 | 3.938 HIVE 1.000 HBD @ 0.253936 HBD/HIVE | holger80 | +------------+---------------------+------------------------------------------+----------+ Cancel open orders I can cancel my order by beempy cancel -a 3815817900 Instead of selling 1 HBD, I can also buy 1 HIVE by beempy buy -a holger80 1 HIVE after checking the price and entering my wif, the order is placed. Using the orderbook to fulfill orders Let’s check the first 5 orders: beempy orderbook -l 5 +--------------+----------------------------------------------+--------------+-------------------------------------------+ | Asks Sum HBD | Sell Orders | Bids Sum HBD | Buy Orders | +--------------+----------------------------------------------+--------------+-------------------------------------------+ | 66.15 | 260.432 HIVE 66.148 HBD @ 0.253993 HBD/HIVE | 0.44 | 1.725 HIVE 0.438 HBD @ 0.253913 HBD/HIVE | | 240.43 | 637.769 HIVE 174.284 HBD @ 0.273271 HBD/HIVE | 0.70 | 1.032 HIVE 0.262 HBD @ 0.253876 HBD/HIVE | | 267.93 | 100.000 HIVE 27.500 HBD @ 0.275000 HBD/HIVE | 0.91 | 0.842 HIVE 0.211 HBD @ 0.250594 HBD/HIVE | | 283.93 | 53.344 HIVE 16.002 HBD @ 0.299978 HBD/HIVE | 0.91 | 0.004 HIVE 0.001 HBD @ 0.250000 HBD/HIVE | | 296.29 | 41.191 HIVE 12.357 HBD @ 0.299993 HBD/HIVE | 6.64 | 23.778 HIVE 5.731 HBD @ 0.241021 HBD/HIVE | +--------------+----------------------------------------------+--------------+-------------------------------------------+ I can now sell 1 HBD @ 0.253993 HBD/HIVE as shown in the Asks column and the order should be fulfilled without waiting. Let’s try: beempy sell -a holger80 1 HBD 0.253993 This time, I can enter the wif without asking for the price. The orderbook is empty this time: beempy openorders holger80 +---------+---------+-------+---------+ | Orderid | Created | Order | Account | +---------+---------+-------+---------+ +---------+---------+-------+---------+ The blockexplorer shows that my order was fulfilled: I hope this help as long as the internal market has no interface. See: Use beempy to access the internal HIVE/HBD market by @holger80</summary></entry><entry><title type="html">The Hive Blockchain Has Launched Successfully! Recap and Helpful Information</title><link href="https://hivedocs.info/news/2020/03/21/the-hive-blockchain-has-launched-successfully-recap-and-helpful-information.html" rel="alternate" type="text/html" title="The Hive Blockchain Has Launched Successfully! Recap and Helpful Information" /><published>2020-03-21T10:05:33-07:00</published><updated>2020-03-21T10:05:33-07:00</updated><id>https://hivedocs.info/news/2020/03/21/the-hive-blockchain-has-launched-successfully-recap-and-helpful-information</id><content type="html" xml:base="https://hivedocs.info/news/2020/03/21/the-hive-blockchain-has-launched-successfully-recap-and-helpful-information.html">&lt;h1 id=&quot;hello-there-hive-what-a-day-weve-had&quot;&gt;Hello there, Hive. What a day we’ve had!&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Welcome to the new Hive blockchain.&lt;/em&gt;&lt;/strong&gt; We’ve been up and running for more than 24 hours now, so this is a good time to take a quick look at the launch and what’s coming up for the immediate future.&lt;/p&gt;

&lt;center&gt;&lt;p&gt;&lt;img src=&quot;https://files.peakd.com/file/peakd-hive/hiveio/E9GxfkAx-hivehasarrived.gif&quot; alt=&quot;#hivehasarrived ... a cool asset provided by community member @derangedvisions&quot; /&gt;&lt;/p&gt;&lt;br /&gt;&lt;/center&gt;

&lt;h2 id=&quot;the-hive-blockchain-launch-went-incredibly-smoothly-given-the-pressure-and-effort-involved-in-getting-a-hardfork-ready-in-such-a-tight-window&quot;&gt;The Hive blockchain launch went incredibly smoothly given the pressure and effort involved in getting a hardfork ready in such a tight window.&lt;/h2&gt;
&lt;p&gt;The passionate team of developers who went above and beyond to produce the changes needed for Hive did an amazing job (and got very, very little sleep.) Hardforks always have a chance of finding “an edge case” when they go live, so being prepared for anything is necessary. Hive came alive, slowly worked through the operations that needed to done, produced first blocks and transactions, and has been moving steadily ever since. &lt;strong&gt;&lt;em&gt;No stalls or crashes, fast blocktimes, all good.&lt;/em&gt;&lt;/strong&gt; It has been a huge win for the whole community to start us off!&lt;/p&gt;

&lt;h4 id=&quot;this-is-a-short-post-with-a-few-important-points-of-information-in-the-coming-weeks-there-are-a-number-of-important-things-that-need-to-be-addressed-that-well-be-posting-about-here&quot;&gt;This is a short post with a few important points of information. In the coming weeks, there are a number of important things that need to be addressed that we’ll be posting about here:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;There will be a future hardfork to upgrade Hive, make some fixes, and bring more features online&lt;/li&gt;
  &lt;li&gt;We’ll make a post about those who were skipped in the first airdrop discussing the script for the exclusions and letting the community decide if the tokens held in reserve should be distributed. We will also talk about the Hive DHF (Decentralised Hive Funding), or HiveDAO, and how it can be used in this situation and others to help collect community feedback&lt;/li&gt;
  &lt;li&gt;The hive code repo is open source and public at: https://github.com/openhive-network/hive/releases . The condenser repo (for front ends) is being worked on actively to finish up the https://hive.blog/ MVP to a higher standard than previous iterations, and then will also be public. This code is open source as well.&lt;/li&gt;
  &lt;li&gt;The Hive ecosystem is coming alive! It’s still very early, but many apps and projects are coming online, and we’ll be making sure to help spread the word about useful services in the ecosystem to help your transition to Hive. https://hiveprojects.io/ is a good place to submit your OWN project, but also to learn about what’s going on around the Hive.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;remember-that-the-goal-of-hive-is-to-move-towards-true-decentralized-community-development-and-that-anyone-can-contribute-whatever-they-like-this-is-your-place-to-live-play-and-work-so-make-it-what-you-want-to-see&quot;&gt;Remember that the goal of Hive is to move towards &lt;strong&gt;&lt;em&gt;true&lt;/em&gt;&lt;/strong&gt; decentralized community development, and that anyone can contribute whatever they like! This is your place to live, play and work, so make it what you want to see.&lt;/h3&gt;

&lt;h4 id=&quot;a-few-final-important-notes&quot;&gt;&lt;strong&gt;&lt;em&gt;A few final important notes:&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Hive.blog wallets are being actively worked on and will be ready 🔜™️, so if you are wanting secure ways to make wallet transactions, the &lt;a href=&quot;https://peakd.com/&quot;&gt;PeakD.com&lt;/a&gt; wallet, as well as the new &lt;a href=&quot;https://github.com/netuoso/vessel/releases&quot;&gt;Hive Vessel&lt;/a&gt; are available. There are a number of familiar wallets and sites being ported right now, so if you’re okay with waiting, you will have a number of options. If you started a powerdown on Steem, it will still be in place on Hive! Don’t forget to stop it if you need to.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;If you already have an account on Steem, then you have an account waiting for you here on Hive!&lt;/strong&gt; You can &lt;a href=&quot;https://peakd.com/communityfork/@hiveio/announcing-the-launch-of-hive-blockchain&quot;&gt;read more in depth at our info post&lt;/a&gt; if you need a refresher. If you’re new, or want to onboard someone new, then you can check a few signup options at https://signup.hive.io/. There will be more available in the future- this is only to start!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Key safety still matters!&lt;/strong&gt; Please consider using Hive Keychain (still under review by the app stores, but here’s a &lt;a href=&quot;https://peakd.com/hive/@themarkymark/how-to-install-hive-keychain&quot;&gt;great tutorial&lt;/a&gt;) or &lt;a href=&quot;https://peakd.com/hive/@good-karma/hivesigner-released-and-ready&quot;&gt;HiveSigner&lt;/a&gt; (the new Hive version of Steemconnect). Both will be supported by hive.blog and &lt;a href=&quot;https://peakd.com/&quot;&gt;PeakD.com&lt;/a&gt; has already integrated them, alongside their own PeakLock. Most apps and frontends have already begun work or &lt;em&gt;do&lt;/em&gt; work with a key management solution like one of these.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Remember that your witness votes from Steem will carry over to Hive.&lt;/strong&gt; Whichever blockchain you use, votes are available. You are part of governance, so this is an excellent time to start fresh and discover all of the dedicated witnesses in both ecosystems. Many people worked hard to bring Hive to life, and some are witnesses. Please review your votes on Hive as often as you feel like, and vote according to what you want to see and to those you want to support. There are a huge amount of witnesses, from consensus (top twenty) to backup, and they should &lt;strong&gt;all&lt;/strong&gt; be part of your considerations if you believe they are the right fit.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Exchanges are working on getting up and running.&lt;/strong&gt; Right now, Ionomy has full, limited time fee free trading enabled. The other exchanges listing Hive are already working on getting their trading pairs online. There are 6 more exchanges who are working on the airdrops, with some of them also working on a listing. However, these things do need to be done safely, and take a lot of behind the scenes tech support, so please note that &lt;strong&gt;this process can take a little while.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-hive-is-buzzing-and-thats-thanks-to-people-like-you-the-spirit-and-energy-around-the-chain-are-invigorating-make-this-a-time-to-start-fresh-and-spread-your-wings&quot;&gt;The Hive is buzzing, and that’s thanks to people like YOU. The spirit and energy around the chain are invigorating…. make this a time to start fresh and spread your wings.&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;EDIT:&lt;/em&gt;&lt;/strong&gt; our fumble fingered worker bee needed to refresh the post while making it and was so excited they forgot to decline the rewards. These will be powered up so this account no longer needs delegation, and will continue to decline rewards in the future. Sorry!&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/@hiveio/the-hive-blockchain-has-launched-successfully-recap-and-helpful-information&quot;&gt;The Hive Blockchain Has Launched Successfully! Recap and Helpful Information&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@hiveio&quot;&gt;@hiveio&lt;/a&gt;
&lt;/p&gt;</content><author><name>hiveio</name></author><summary type="html">Hello there, Hive. What a day we’ve had! Welcome to the new Hive blockchain. We’ve been up and running for more than 24 hours now, so this is a good time to take a quick look at the launch and what’s coming up for the immediate future. The Hive blockchain launch went incredibly smoothly given the pressure and effort involved in getting a hardfork ready in such a tight window. The passionate team of developers who went above and beyond to produce the changes needed for Hive did an amazing job (and got very, very little sleep.) Hardforks always have a chance of finding “an edge case” when they go live, so being prepared for anything is necessary. Hive came alive, slowly worked through the operations that needed to done, produced first blocks and transactions, and has been moving steadily ever since. No stalls or crashes, fast blocktimes, all good. It has been a huge win for the whole community to start us off! This is a short post with a few important points of information. In the coming weeks, there are a number of important things that need to be addressed that we’ll be posting about here: There will be a future hardfork to upgrade Hive, make some fixes, and bring more features online We’ll make a post about those who were skipped in the first airdrop discussing the script for the exclusions and letting the community decide if the tokens held in reserve should be distributed. We will also talk about the Hive DHF (Decentralised Hive Funding), or HiveDAO, and how it can be used in this situation and others to help collect community feedback The hive code repo is open source and public at: https://github.com/openhive-network/hive/releases . The condenser repo (for front ends) is being worked on actively to finish up the https://hive.blog/ MVP to a higher standard than previous iterations, and then will also be public. This code is open source as well. The Hive ecosystem is coming alive! It’s still very early, but many apps and projects are coming online, and we’ll be making sure to help spread the word about useful services in the ecosystem to help your transition to Hive. https://hiveprojects.io/ is a good place to submit your OWN project, but also to learn about what’s going on around the Hive. Remember that the goal of Hive is to move towards true decentralized community development, and that anyone can contribute whatever they like! This is your place to live, play and work, so make it what you want to see. A few final important notes: Hive.blog wallets are being actively worked on and will be ready 🔜™️, so if you are wanting secure ways to make wallet transactions, the PeakD.com wallet, as well as the new Hive Vessel are available. There are a number of familiar wallets and sites being ported right now, so if you’re okay with waiting, you will have a number of options. If you started a powerdown on Steem, it will still be in place on Hive! Don’t forget to stop it if you need to. If you already have an account on Steem, then you have an account waiting for you here on Hive! You can read more in depth at our info post if you need a refresher. If you’re new, or want to onboard someone new, then you can check a few signup options at https://signup.hive.io/. There will be more available in the future- this is only to start! Key safety still matters! Please consider using Hive Keychain (still under review by the app stores, but here’s a great tutorial) or HiveSigner (the new Hive version of Steemconnect). Both will be supported by hive.blog and PeakD.com has already integrated them, alongside their own PeakLock. Most apps and frontends have already begun work or do work with a key management solution like one of these. Remember that your witness votes from Steem will carry over to Hive. Whichever blockchain you use, votes are available. You are part of governance, so this is an excellent time to start fresh and discover all of the dedicated witnesses in both ecosystems. Many people worked hard to bring Hive to life, and some are witnesses. Please review your votes on Hive as often as you feel like, and vote according to what you want to see and to those you want to support. There are a huge amount of witnesses, from consensus (top twenty) to backup, and they should all be part of your considerations if you believe they are the right fit. Exchanges are working on getting up and running. Right now, Ionomy has full, limited time fee free trading enabled. The other exchanges listing Hive are already working on getting their trading pairs online. There are 6 more exchanges who are working on the airdrops, with some of them also working on a listing. However, these things do need to be done safely, and take a lot of behind the scenes tech support, so please note that this process can take a little while. The Hive is buzzing, and that’s thanks to people like YOU. The spirit and energy around the chain are invigorating…. make this a time to start fresh and spread your wings. EDIT: our fumble fingered worker bee needed to refresh the post while making it and was so excited they forgot to decline the rewards. These will be powered up so this account no longer needs delegation, and will continue to decline rewards in the future. Sorry! See: The Hive Blockchain Has Launched Successfully! Recap and Helpful Information by @hiveio</summary></entry></feed>