<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="https://hivedocs.info/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hivedocs.info/" rel="alternate" type="text/html" /><updated>2020-11-29T10:20:36-08:00</updated><id>https://hivedocs.info/feed.xml</id><title type="html">Hive Chain Documentation</title><subtitle>Your resource for various levels of Hive Documentation.</subtitle><author><name>site curated by: @inertia</name></author><entry><title type="html">Hivesearcher website opensourced</title><link href="https://hivedocs.info/seo/api/2020/11/27/hivesearcher-website-opensourced.html" rel="alternate" type="text/html" title="Hivesearcher website opensourced" /><published>2020-11-27T04:26:03-08:00</published><updated>2020-11-27T04:26:03-08:00</updated><id>https://hivedocs.info/seo/api/2020/11/27/hivesearcher-website-opensourced</id><content type="html" xml:base="https://hivedocs.info/seo/api/2020/11/27/hivesearcher-website-opensourced.html">&lt;div id=&quot;content-good-karma-hivesearcher-website-opensourced&quot;&gt;We have opensourced Hivesearcher website earlier today and pushed some documentation improvements.

&lt;center&gt;![hivesearcher-decentralized-search-engine](https://images.ecency.com/p/C3TZR1g81UNbFzApDTmvFYMje8p1iesaAcNjSh7JWYRiPQRX52L6rNRZipeiaBkx9daTxCyJyVvcKo3QMC9tjfRvNzgHxYuYyj6AFmCrd98w27oav6Nh8m4)&lt;/center&gt;

Website is written in reactjs and python. Although structure of website is quite simple, we think opensourcing website just like hivesearcher hivemind plugin would allow more development contribution and transparency on how things work.

If you are developer, feel free to checkout source code and contribute. https://github.com/ecency/hivesearcher

Website also include some neat features which we didn't announce before. You can embed hivesearcher with iframe into your website. So any website potentially can integrate hivesearcher without API key as well. Getting API key is completely free, so if you are willing to create your own search user interface then API key approach is best. Embedding option is only for those who have limited programming skills or who has wordpress blogs where can easily embed iframe search functionality.

Updated documentation page with more examples and information. In future, we plan to have interactive style documentation so it is much easier to test before integrating. Also document iframe usage and showcase integrated dapps.

## Are you dapp developer?

[Integrate Hivesearcher](https://ecency.com/hive-139531/@good-karma/hivesearcher-free-integrate-it-into-your-hive-apps) into your app and offer best search, discovery experience to your users.

---

- Source website: https://github.com/ecency/hivesearcher
- Source plugin: https://github.com/ecency/hive2elastic
&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@good-karma&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/hivesearcher-website-opensourced&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-good-karma-hivesearcher-website-opensourced').html();
      const outputElem = $('#content-good-karma-hivesearcher-website-opensourced');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-good-karma-hivesearcher-website-opensourced {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-good-karma-hivesearcher-website-opensourced code {
    background: white;
  }
  #content-good-karma-hivesearcher-website-opensourced a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-good-karma-hivesearcher-website-opensourced a:hover {
    border-bottom: 0;
  }
  #content-good-karma-hivesearcher-website-opensourced h1 {
    font-size: 2.2em;
  }
  #content-good-karma-hivesearcher-website-opensourced h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-good-karma-hivesearcher-website-opensourced header small {
    color: #999;
    font-size: 50%;
  }
  #content-good-karma-hivesearcher-website-opensourced img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/hive-139531/@good-karma/hivesearcher-website-opensourced&quot;&gt;Hivesearcher website opensourced&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@good-karma&quot;&gt;@good-karma&lt;/a&gt;
&lt;/p&gt;</content><author><name>good-karma</name></author><category term="seo" /><category term="api" /><summary type="html">We have opensourced Hivesearcher website earlier today and pushed some documentation improvements. ![hivesearcher-decentralized-search-engine](https://images.ecency.com/p/C3TZR1g81UNbFzApDTmvFYMje8p1iesaAcNjSh7JWYRiPQRX52L6rNRZipeiaBkx9daTxCyJyVvcKo3QMC9tjfRvNzgHxYuYyj6AFmCrd98w27oav6Nh8m4) Website is written in reactjs and python. Although structure of website is quite simple, we think opensourcing website just like hivesearcher hivemind plugin would allow more development contribution and transparency on how things work. If you are developer, feel free to checkout source code and contribute. https://github.com/ecency/hivesearcher Website also include some neat features which we didn't announce before. You can embed hivesearcher with iframe into your website. So any website potentially can integrate hivesearcher without API key as well. Getting API key is completely free, so if you are willing to create your own search user interface then API key approach is best. Embedding option is only for those who have limited programming skills or who has wordpress blogs where can easily embed iframe search functionality. Updated documentation page with more examples and information. In future, we plan to have interactive style documentation so it is much easier to test before integrating. Also document iframe usage and showcase integrated dapps. ## Are you dapp developer? [Integrate Hivesearcher](https://ecency.com/hive-139531/@good-karma/hivesearcher-free-integrate-it-into-your-hive-apps) into your app and offer best search, discovery experience to your users. --- - Source website: https://github.com/ecency/hivesearcher - Source plugin: https://github.com/ecency/hive2elastic See: Hivesearcher website opensourced by @good-karma</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://images.ecency.com/p/C3TZR1g81UNbFzApDTmvFYMje8p1iesaAcNjSh7JWYRiPQRX52L6rNRZipeiaBkx9daTxCyJyVvcKo3QMC9tjfRvNzgHxYuYyj6AFmCrd98w27oav6Nh8m4" /><media:content medium="image" url="https://images.ecency.com/p/C3TZR1g81UNbFzApDTmvFYMje8p1iesaAcNjSh7JWYRiPQRX52L6rNRZipeiaBkx9daTxCyJyVvcKo3QMC9tjfRvNzgHxYuYyj6AFmCrd98w27oav6Nh8m4" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How To Setup Hive Witness Pricefeed Using Hivefeed-JS</title><link href="https://hivedocs.info/howto/witness/pricefeed/2020/11/26/how-to-setup-hive-witness-pricefeed-using-hivefeed-js.html" rel="alternate" type="text/html" title="How To Setup Hive Witness Pricefeed Using Hivefeed-JS" /><published>2020-11-26T23:01:33-08:00</published><updated>2020-11-26T23:01:33-08:00</updated><id>https://hivedocs.info/howto/witness/pricefeed/2020/11/26/how-to-setup-hive-witness-pricefeed-using-hivefeed-js</id><content type="html" xml:base="https://hivedocs.info/howto/witness/pricefeed/2020/11/26/how-to-setup-hive-witness-pricefeed-using-hivefeed-js.html">&lt;div id=&quot;content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js&quot;&gt;Setting up a pricefeed is quite a simple task to do yet so many witnesses don't do it. I use it as one of my basic qualifiers on who I'll vote for a witness(if yours isn't updated in 3.5 days, no chance of getting my witness vote). It's a very basic thing to do and its just a quick and easy way to see how much a witness is paying attention to their own witness.

The pricefeed is how Hive knows about the price of Hive. Some events require Hive knowing its price, including post payout and hbd -&amp;gt; hive conversions. While only the top 20 witnesses's price feed is used(from what I've been told, please correct me if this is wrong), I believe its important for everyone running a witness to run a pricefeed. We have some pretty old pricefeeds in our witness rank, including some in the top 100 who've never broadcast a pricefeed at all and 4 in the top 30 who haven't updated their pricefeed in over a month.

I personally use @someguy123's hivefeed-js as I've been updating it myself too. It's quite easy to use and anyone on privex's node in a box gets it on their box so knowledge on how to use it might be useful. The codebase can be found here: https://github.com/someguy123/hivefeed-js.

Let's get onto the guide. If you are using privex's node in a box, you can skip the download the codebase part (the git pull). I'll also be explaining how to start it with node and pm2, not docker. The docker instructions are clear enough on the readme. Someguy says that he uses the docker version so he can restart it easily every few hours in case this breaks, but I've never seen it break due to reasons other than a bad node(which has since been fixed). 

### Set up

Always start with an update to the server, especially if you are like me and the first time is usually the only time you update your server. We'll also need git since we'll need to get the codebase. We'll also need nodejs and npm.

```
sudo apt-get update -y
sudo apt-get upgrade -y
sudo apt-get install git -y
sudo apt-get install npm -y
```

We'll want to update our version onf nodejs to 14 using n.

```
sudo npm i -g n
sudo n 14
```

Restart your ssh session as thats the easiest way to use the latest version of nodejs. 

Clone the repo(if you already have it, skip this step)

```
git clone https://github.com/Someguy123/hivefeed-js.git
```

Navigate to the directory we cloned or already have, if it's named something else, just change over to it. 

```
cd hivefeed-js
```

Install the dependencies with npm.

```
npm i
```

Install pm2 globally.

```
sudo npm i -g pm2
```
### Modifying the config

Now we'll need to change the config file to our liking. First we'll need to copy the example config to just config.

```
cp config.example.json config.json
```

Then we'll want to open it up using a text editor. I like nano, it's the easiest to use by far.

```
nano config.json
```

I won't be explaining advanced config, just the simple stuff. The main fields that you want to pay attention to is `name` which should be your username, `wif` which should be your private active key(yes there is a way to sign price feed updates with just your witness signing key, so far the easiest way to do that is with beem, someguy was looking into incorporating that into hivefeed and if I have time, I'm trying to do the same as well), and `interval` which is how often you want to broadcast in minutes. I recommend somewhere between 1-6 hours. Broadcasting too much will have no use with slight price changes and you don't want to broadcast too little either as the opposite problem can occur with larger price changes(one of the things I want to add is broadcasting upon a price shift of x% from your last broadcast). 

Those are the only ones you really need to change. There are a few other ones that I think you should know. `node` will let you pick the running node, the default being https://hived.privex.io and `alternate_nodes` will let you specify some alternate nodes to switch to if the default one fails. The default alternate nodes are https://api.hive.blog and https://api.deathwing.me. Node should just be a string and alternate_nodes should be an array of strings. Don't worry too much about these if you don't understand(feel free to ask me questions if you would like to learn more though). 

Save your config. Time to start it up.

### Starting up

Staring up is pretty simple. 

```
pm2 start app.js --name priceFeed
```

Thanks to pm2, if it crashes, it will automatically restart(though if it has other errors not leading to a crash it will not restart). If you want to monitor it, you can do `pm2 monitor` to see the running program with live logs, or `pm2 logs` to see some older logs logs and as more are written to the logs, it will add more. If you need to stop it for any reason, you can do `pm2 stop priceFeed`.

You won't see the price feed immediately publish. The first publish will happen after the amount of minutes that you set in the config. And there you go, you have setup your pricefeed. 

I do maintain the repo and so if you have any suggestions for features that you'd like, just lmk and if I ever find time for it, I'll get around to it. If you like what I do, considering voting my witness, @hextech. Here's a handy link for that: https://vote.hive.uno/@hextech&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@rishi556&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/how-to-setup-hive-witness-pricefeed-using-hivefeed-js&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js').html();
      const outputElem = $('#content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js code {
    background: white;
  }
  #content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js a:hover {
    border-bottom: 0;
  }
  #content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js h1 {
    font-size: 2.2em;
  }
  #content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js header small {
    color: #999;
    font-size: 50%;
  }
  #content-rishi556-how-to-setup-hive-witness-pricefeed-using-hivefeed-js img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://peakd.com/witness/@rishi556/how-to-setup-hive-witness-pricefeed-using-hivefeed-js&quot;&gt;How To Setup Hive Witness Pricefeed Using Hivefeed-JS&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@rishi556&quot;&gt;@rishi556&lt;/a&gt;
&lt;/p&gt;</content><author><name>rishi556</name></author><category term="howto" /><category term="witness" /><category term="pricefeed" /><summary type="html">Setting up a pricefeed is quite a simple task to do yet so many witnesses don't do it. I use it as one of my basic qualifiers on who I'll vote for a witness(if yours isn't updated in 3.5 days, no chance of getting my witness vote). It's a very basic thing to do and its just a quick and easy way to see how much a witness is paying attention to their own witness. The pricefeed is how Hive knows about the price of Hive. Some events require Hive knowing its price, including post payout and hbd -&amp;gt; hive conversions. While only the top 20 witnesses's price feed is used(from what I've been told, please correct me if this is wrong), I believe its important for everyone running a witness to run a pricefeed. We have some pretty old pricefeeds in our witness rank, including some in the top 100 who've never broadcast a pricefeed at all and 4 in the top 30 who haven't updated their pricefeed in over a month. I personally use @someguy123's hivefeed-js as I've been updating it myself too. It's quite easy to use and anyone on privex's node in a box gets it on their box so knowledge on how to use it might be useful. The codebase can be found here: https://github.com/someguy123/hivefeed-js. Let's get onto the guide. If you are using privex's node in a box, you can skip the download the codebase part (the git pull). I'll also be explaining how to start it with node and pm2, not docker. The docker instructions are clear enough on the readme. Someguy says that he uses the docker version so he can restart it easily every few hours in case this breaks, but I've never seen it break due to reasons other than a bad node(which has since been fixed). ### Set up Always start with an update to the server, especially if you are like me and the first time is usually the only time you update your server. We'll also need git since we'll need to get the codebase. We'll also need nodejs and npm. ``` sudo apt-get update -y sudo apt-get upgrade -y sudo apt-get install git -y sudo apt-get install npm -y ``` We'll want to update our version onf nodejs to 14 using n. ``` sudo npm i -g n sudo n 14 ``` Restart your ssh session as thats the easiest way to use the latest version of nodejs. Clone the repo(if you already have it, skip this step) ``` git clone https://github.com/Someguy123/hivefeed-js.git ``` Navigate to the directory we cloned or already have, if it's named something else, just change over to it. ``` cd hivefeed-js ``` Install the dependencies with npm. ``` npm i ``` Install pm2 globally. ``` sudo npm i -g pm2 ``` ### Modifying the config Now we'll need to change the config file to our liking. First we'll need to copy the example config to just config. ``` cp config.example.json config.json ``` Then we'll want to open it up using a text editor. I like nano, it's the easiest to use by far. ``` nano config.json ``` I won't be explaining advanced config, just the simple stuff. The main fields that you want to pay attention to is `name` which should be your username, `wif` which should be your private active key(yes there is a way to sign price feed updates with just your witness signing key, so far the easiest way to do that is with beem, someguy was looking into incorporating that into hivefeed and if I have time, I'm trying to do the same as well), and `interval` which is how often you want to broadcast in minutes. I recommend somewhere between 1-6 hours. Broadcasting too much will have no use with slight price changes and you don't want to broadcast too little either as the opposite problem can occur with larger price changes(one of the things I want to add is broadcasting upon a price shift of x% from your last broadcast). Those are the only ones you really need to change. There are a few other ones that I think you should know. `node` will let you pick the running node, the default being https://hived.privex.io and `alternate_nodes` will let you specify some alternate nodes to switch to if the default one fails. The default alternate nodes are https://api.hive.blog and https://api.deathwing.me. Node should just be a string and alternate_nodes should be an array of strings. Don't worry too much about these if you don't understand(feel free to ask me questions if you would like to learn more though). Save your config. Time to start it up. ### Starting up Staring up is pretty simple. ``` pm2 start app.js --name priceFeed ``` Thanks to pm2, if it crashes, it will automatically restart(though if it has other errors not leading to a crash it will not restart). If you want to monitor it, you can do `pm2 monitor` to see the running program with live logs, or `pm2 logs` to see some older logs logs and as more are written to the logs, it will add more. If you need to stop it for any reason, you can do `pm2 stop priceFeed`. You won't see the price feed immediately publish. The first publish will happen after the amount of minutes that you set in the config. And there you go, you have setup your pricefeed. I do maintain the repo and so if you have any suggestions for features that you'd like, just lmk and if I ever find time for it, I'll get around to it. If you like what I do, considering voting my witness, @hextech. Here's a handy link for that: https://vote.hive.uno/@hextech See: How To Setup Hive Witness Pricefeed Using Hivefeed-JS by @rishi556</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://hivedocs.info/assets/images/favicon.png" /><media:content medium="image" url="https://hivedocs.info/assets/images/favicon.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">My new contributions to the Hive Condenser</title><link href="https://hivedocs.info/news/nodejs/condenser/2020/11/25/6gshbx-my-new-contributions-to-the-hive-condenser.html" rel="alternate" type="text/html" title="My new contributions to the Hive Condenser" /><published>2020-11-25T21:27:09-08:00</published><updated>2020-11-25T21:27:09-08:00</updated><id>https://hivedocs.info/news/nodejs/condenser/2020/11/25/6gshbx-my-new-contributions-to-the-hive-condenser</id><content type="html" xml:base="https://hivedocs.info/news/nodejs/condenser/2020/11/25/6gshbx-my-new-contributions-to-the-hive-condenser.html">&lt;div id=&quot;content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser&quot;&gt;## Display more than 100 witnesses on the witness page
Currently https://wallet.hive.blog/~witnesses only displays the top100 witnesses with a text box that allows you to vote for low ranking witnesses, provided that you know about them. As I was working on some bug on the witnesses page, I noticed that the API allowed me to fetch more than 100 witnesses so I went on and increased the number of witnesses from 100 to 200 which is enough to cover all of our current active witnesses.

Increasing the number of witnesses from 100 to 200 also means that we have a lot of disabled/retired witnesses polluting the list. So in order to keep it clean, I've added a rule that filter disabled/retired witnesses off the list if their rank is greater than 100.

As a result of this, provided that the code change is approved, the following lower ranked witnesses will appear on the official witness page:
Rank 101: @mintrawa
Rank 103: @reazuliqbal
Rank 105: @fernandosoder
Rank 106: @jamzed
Rank 107: @dmitrydao
Rank 111: @lapingvino
Rank 117: @lootkit.witness
Rank 118: @hagie
Rank 129: @veteranforcrypto
Rank 130: @dpoll.witness
Rank 134: @elindos
Rank 142: @apshamilton
Rank 151: @whiterosecoffee
Rank 193: @pcste

![Screen Shot 2020-11-26 at 4.10.30 pm.png](https://images.hive.blog/DQmPLe1Qg7msSpA9gCRbPMFrbD62Tdrf8MW7Sd6ucLcMktD/Screen%20Shot%202020-11-26%20at%204.10.30%20pm.png)

Merge request: https://gitlab.syncad.com/hive/wallet/-/merge_requests/81

## Display witness owners on the witnesses page
Some users have chosen to have an alternate user accounts for their witnesses to separate regular social activities from witness activities. Some witness accounts were created and managed by more than one user.  This code change now display the owner(s) of a witness account.

![Display Hive witness owners](https://gitlab.syncad.com/hive/wallet/uploads/6371d6c52aa8b44c2bffc4152aae9fa6/Screen_Shot_2020-11-19_at_11.05.33_am.png)

Merge request: https://gitlab.syncad.com/hive/wallet/-/merge_requests/79

## Delegating Hive Power to another user from your wallet
This change was implemented several months ago but I forgot to announce it although it was announced in one of @blocktrades (Witness) posts. You now can access your [wallet](https://wallet.hive.blog/) and delegate some HP from the drop down menu from your Hive Power.

![Wallet delegate Hive Power](https://images.hive.blog/DQmSaiKUGQRNi1sLAEq1nvjYHRL5xdeGvKPeDZCXnrFDso7/Screen%20Shot%202020-11-26%20at%204.11.48%20pm.png)

A list of your current delegatees is also available in your wallet:
![Your delegatees](https://gitlab.syncad.com/hive/wallet/uploads/59615d9cac888bd41c9d22e09f2f708d/Screen_Shot_2020-05-23_at_9.38.21_pm.jpg)

If memory serves, this code was created on the Steemit Condenser and I've just ported it for Hive.

Merge request: https://gitlab.syncad.com/hive/wallet/-/merge_requests/16


## Other small changes
- Hide the @hivebuzz level banner for user accounts that are recently created and for which a level banner has not been created yet. https://gitlab.syncad.com/hive/condenser/-/merge_requests/160
- Fix the issue where the `witness_description` and `witness_owner` fields were no longer showing in the settings page. https://gitlab.syncad.com/hive/condenser/-/merge_requests/158

---

**Vote for my witness**
[![Support @quochuy Witness.jpg](https://images.hive.blog/DQmecYTZemY8SwU6rrg7awhpNRBsehUp7ivk9RGyZsUUpVw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1)
On Hive, Witnesses are playing the important role of providing a performant and safe network for all of us. You have the power to choose 30 trusty witnesses to package transactions and sign the blocks that will go in the Hive blockchain. [Vote for me via HiveSigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) to support my work for the community.&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@quochuy&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/6gshbx-my-new-contributions-to-the-hive-condenser&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser').html();
      const outputElem = $('#content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser code {
    background: white;
  }
  #content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser a:hover {
    border-bottom: 0;
  }
  #content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser h1 {
    font-size: 2.2em;
  }
  #content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser header small {
    color: #999;
    font-size: 50%;
  }
  #content-quochuy-6gshbx-my-new-contributions-to-the-hive-condenser img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/hive-139531/@quochuy/6gshbx-my-new-contributions-to-the-hive-condenser&quot;&gt;My new contributions to the Hive Condenser&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@quochuy&quot;&gt;@quochuy&lt;/a&gt;
&lt;/p&gt;</content><author><name>quochuy</name></author><category term="news" /><category term="nodejs" /><category term="condenser" /><summary type="html">## Display more than 100 witnesses on the witness page Currently https://wallet.hive.blog/~witnesses only displays the top100 witnesses with a text box that allows you to vote for low ranking witnesses, provided that you know about them. As I was working on some bug on the witnesses page, I noticed that the API allowed me to fetch more than 100 witnesses so I went on and increased the number of witnesses from 100 to 200 which is enough to cover all of our current active witnesses. Increasing the number of witnesses from 100 to 200 also means that we have a lot of disabled/retired witnesses polluting the list. So in order to keep it clean, I've added a rule that filter disabled/retired witnesses off the list if their rank is greater than 100. As a result of this, provided that the code change is approved, the following lower ranked witnesses will appear on the official witness page: Rank 101: @mintrawa Rank 103: @reazuliqbal Rank 105: @fernandosoder Rank 106: @jamzed Rank 107: @dmitrydao Rank 111: @lapingvino Rank 117: @lootkit.witness Rank 118: @hagie Rank 129: @veteranforcrypto Rank 130: @dpoll.witness Rank 134: @elindos Rank 142: @apshamilton Rank 151: @whiterosecoffee Rank 193: @pcste ![Screen Shot 2020-11-26 at 4.10.30 pm.png](https://images.hive.blog/DQmPLe1Qg7msSpA9gCRbPMFrbD62Tdrf8MW7Sd6ucLcMktD/Screen%20Shot%202020-11-26%20at%204.10.30%20pm.png) Merge request: https://gitlab.syncad.com/hive/wallet/-/merge_requests/81 ## Display witness owners on the witnesses page Some users have chosen to have an alternate user accounts for their witnesses to separate regular social activities from witness activities. Some witness accounts were created and managed by more than one user. This code change now display the owner(s) of a witness account. ![Display Hive witness owners](https://gitlab.syncad.com/hive/wallet/uploads/6371d6c52aa8b44c2bffc4152aae9fa6/Screen_Shot_2020-11-19_at_11.05.33_am.png) Merge request: https://gitlab.syncad.com/hive/wallet/-/merge_requests/79 ## Delegating Hive Power to another user from your wallet This change was implemented several months ago but I forgot to announce it although it was announced in one of @blocktrades (Witness) posts. You now can access your [wallet](https://wallet.hive.blog/) and delegate some HP from the drop down menu from your Hive Power. ![Wallet delegate Hive Power](https://images.hive.blog/DQmSaiKUGQRNi1sLAEq1nvjYHRL5xdeGvKPeDZCXnrFDso7/Screen%20Shot%202020-11-26%20at%204.11.48%20pm.png) A list of your current delegatees is also available in your wallet: ![Your delegatees](https://gitlab.syncad.com/hive/wallet/uploads/59615d9cac888bd41c9d22e09f2f708d/Screen_Shot_2020-05-23_at_9.38.21_pm.jpg) If memory serves, this code was created on the Steemit Condenser and I've just ported it for Hive. Merge request: https://gitlab.syncad.com/hive/wallet/-/merge_requests/16 ## Other small changes - Hide the @hivebuzz level banner for user accounts that are recently created and for which a level banner has not been created yet. https://gitlab.syncad.com/hive/condenser/-/merge_requests/160 - Fix the issue where the `witness_description` and `witness_owner` fields were no longer showing in the settings page. https://gitlab.syncad.com/hive/condenser/-/merge_requests/158 --- **Vote for my witness** [![Support @quochuy Witness.jpg](https://images.hive.blog/DQmecYTZemY8SwU6rrg7awhpNRBsehUp7ivk9RGyZsUUpVw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) On Hive, Witnesses are playing the important role of providing a performant and safe network for all of us. You have the power to choose 30 trusty witnesses to package transactions and sign the blocks that will go in the Hive blockchain. [Vote for me via HiveSigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) to support my work for the community. See: My new contributions to the Hive Condenser by @quochuy</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://images.hive.blog/DQmPLe1Qg7msSpA9gCRbPMFrbD62Tdrf8MW7Sd6ucLcMktD/Screen%20Shot%202020-11-26%20at%204.10.30%20pm.png" /><media:content medium="image" url="https://images.hive.blog/DQmPLe1Qg7msSpA9gCRbPMFrbD62Tdrf8MW7Sd6ucLcMktD/Screen%20Shot%202020-11-26%20at%204.10.30%20pm.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Hivemind API Extension, Community Curated Content and More</title><link href="https://hivedocs.info/news/hivemind/api/2020/11/24/hivemind-api-extension-community-curated-content-and-more.html" rel="alternate" type="text/html" title="Hivemind API Extension, Community Curated Content and More" /><published>2020-11-24T01:21:36-08:00</published><updated>2020-11-24T01:21:36-08:00</updated><id>https://hivedocs.info/news/hivemind/api/2020/11/24/hivemind-api-extension-community-curated-content-and-more</id><content type="html" xml:base="https://hivedocs.info/news/hivemind/api/2020/11/24/hivemind-api-extension-community-curated-content-and-more.html">&lt;div id=&quot;content-peakd-hivemind-api-extension-community-curated-content-and-more&quot;&gt;A new release of [peakd.com](https://peakd.com) is now available. Keep reading to discover the new features and check the full list of improvements ;)

&lt;center&gt;&lt;h4&gt;The new release is now live at https://peakd.com&lt;/h4&gt;&lt;/center&gt;

![release_cover_20201124.jpg](https://files.peakd.com/file/peakd-hive/peakd/af4z4wui-release_cover_20201124.jpg)


#### 1. Hivemind API Extensions

Until the [last HF](https://peakd.com/hiveblockchain/@hiveio/final-hive-hf24-date-set-october-6-2020) we have used our own Hivemind instance to power some of the features available on [peakd.com](https://peakd.com). This was required because some features as Favorites, Lists, Badges needs to access specific data not available on the standard API nodes.

Updating our own Hivemind database to the latest version was definitely possible (with a bit more effort on us than what used to be before the HF), but we decided to do a change in how we provide the required data for those features. So instead of updating the node we create a plugin (or extension) that can be installed on Hivemind servers to provide those additional APIs.

[![peakd-hivemind-plugin.png](https://raw.githubusercontent.com/peak-projects/peakd-hivemind-plugin/main/resources/cover.png)](https://github.com/peak-projects/peakd-hivemind-plugin)

Similar to what we have done with [Hive Node Beacon](https://github.com/peak-projects/peakd-node-beacon) a few weeks ago this plugin is available as an open source project on GitHub: https://github.com/peak-projects/peakd-hivemind-plugin.

Also having the plugin available as an independent open source project make it possible for node operators to run it and provide the additional features in a more decentralized way. A big thank you to @arcange and @emrebeyler for their help in setting up the first 2 nodes.


#### 2. New Curated Contents page for Communities

Communities can now configure a curator account that will enable a new tab/page to showcase a curated content list.

![Curated Content list for https://peakd.com/c/hive-193212/trail](https://files.peakd.com/file/peakd-hive/peakd/Y6SZD78j-image.png)

To configure the curator account just set the account name in the community settings:

![image.png](https://files.peakd.com/file/peakd-hive/peakd/EgMAentD-image.png)


#### 3. Show Top Viewed Daily/Weekly awards on posts

We started tracking views a few weeks ago, and we are constantly trying to improve on this. With this release we are starting an experimental tracking of the top daily/weekly viewed posts on peakd.com.

You can see 2 new awards on posts ranked as 'top of the day' or 'top of the week'.

![image.png](https://files.peakd.com/file/peakd-hive/peakd/GZaEfvyM-image.png)


#### 4. Mixcloud embeds and Improved Spotify support

With this release it's possible to embed Mixcloud playlists with a simple link: `https://www.mixcloud.com/MagneticMagazine/ambient-meditations-vol-21-anane`

And also support for Spotify as been improved and can now be embedded with just the link: `https://open.spotify.com/playlist/5UV4uC6N0lZ7q9ui3yIbqn?si=SGsfW4mYRGa2nA91e-cU1A`

The result should be similar to this:
https://open.spotify.com/playlist/5UV4uC6N0lZ7q9ui3yIbqn?si=SGsfW4mYRGa2nA91e-cU1A


#### 5. Add Rising Star to the Games section in Wallet

Rising Star is now included in the [wallet](https://peakd.com/wallet) 'Games' section.

![image.png](https://files.peakd.com/file/peakd-hive/peakd/6Mt6tve4-image.png)

Check our the game using this link: https://risingstargame.com/

#### 6. Some minor improvements and bug fixes

As always some minor improvements, updates and fixes across the website. You can check the full release notes here: **https://peakd.com/about/changelog**.

```
# Improvements and Fixes
------------------------------

[update] Improve layout and performance for Top Views page
[update] Don't load comments by default for user not logged in
[update] Show a button to publish a new post when an user blog is empty
[update] Mark notification as read on all browser tabs after casting the transaction
[update] Rework usage of 'get_account_history' API call to better handle the new behavior
[fix] Fix 'upcoming' indicator in Proposals page
```

---

## Support the @peakd project

Now is probably a nice time to remind you of the ways you can support the development of @peakd.

![Selection_298.png](https://files.peakd.com/file/peakd-hive/peakd/w36DQpO7-Selection_298.png)

We have a proposal on the Decentralized Hive Fund. You can review the proposal [here](/proposals/52).
If you agree to the proposal and you think the points mentioned add value to the Hive Blockchain consider supporting it using the above links or directly with **[this link](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=[52]&amp;amp;approve=true)**.

---

We also run a witness server to help produce the blocks for the Hive Blockchain. You can vote for our witness so we are in a position to process more of them.

Vote on the witness page: https://peakd.com/witnesses

- Using Keychain: You just have to click and approve the transaction
- Using HiveSigner: You'll need access to confirm the transaction with your Active Key at least

---

###### *The PeakD Team*
_About us: https://peakd.com/about_
_Join us on Discord: https://discord.gg/Fy3bca5_&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@peakd&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/hivemind-api-extension-community-curated-content-and-more&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-peakd-hivemind-api-extension-community-curated-content-and-more').html();
      const outputElem = $('#content-peakd-hivemind-api-extension-community-curated-content-and-more');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-peakd-hivemind-api-extension-community-curated-content-and-more {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-peakd-hivemind-api-extension-community-curated-content-and-more code {
    background: white;
  }
  #content-peakd-hivemind-api-extension-community-curated-content-and-more a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-peakd-hivemind-api-extension-community-curated-content-and-more a:hover {
    border-bottom: 0;
  }
  #content-peakd-hivemind-api-extension-community-curated-content-and-more h1 {
    font-size: 2.2em;
  }
  #content-peakd-hivemind-api-extension-community-curated-content-and-more h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-peakd-hivemind-api-extension-community-curated-content-and-more header small {
    color: #999;
    font-size: 50%;
  }
  #content-peakd-hivemind-api-extension-community-curated-content-and-more img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://peakd.com/hive-163399/@peakd/hivemind-api-extension-community-curated-content-and-more&quot;&gt;Hivemind API Extension, Community Curated Content and More&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@peakd&quot;&gt;@peakd&lt;/a&gt;
&lt;/p&gt;</content><author><name>peakd</name></author><category term="news" /><category term="hivemind" /><category term="api" /><summary type="html">A new release of [peakd.com](https://peakd.com) is now available. Keep reading to discover the new features and check the full list of improvements ;) The new release is now live at https://peakd.com ![release_cover_20201124.jpg](https://files.peakd.com/file/peakd-hive/peakd/af4z4wui-release_cover_20201124.jpg) #### 1. Hivemind API Extensions Until the [last HF](https://peakd.com/hiveblockchain/@hiveio/final-hive-hf24-date-set-october-6-2020) we have used our own Hivemind instance to power some of the features available on [peakd.com](https://peakd.com). This was required because some features as Favorites, Lists, Badges needs to access specific data not available on the standard API nodes. Updating our own Hivemind database to the latest version was definitely possible (with a bit more effort on us than what used to be before the HF), but we decided to do a change in how we provide the required data for those features. So instead of updating the node we create a plugin (or extension) that can be installed on Hivemind servers to provide those additional APIs. [![peakd-hivemind-plugin.png](https://raw.githubusercontent.com/peak-projects/peakd-hivemind-plugin/main/resources/cover.png)](https://github.com/peak-projects/peakd-hivemind-plugin) Similar to what we have done with [Hive Node Beacon](https://github.com/peak-projects/peakd-node-beacon) a few weeks ago this plugin is available as an open source project on GitHub: https://github.com/peak-projects/peakd-hivemind-plugin. Also having the plugin available as an independent open source project make it possible for node operators to run it and provide the additional features in a more decentralized way. A big thank you to @arcange and @emrebeyler for their help in setting up the first 2 nodes. #### 2. New Curated Contents page for Communities Communities can now configure a curator account that will enable a new tab/page to showcase a curated content list. ![Curated Content list for https://peakd.com/c/hive-193212/trail](https://files.peakd.com/file/peakd-hive/peakd/Y6SZD78j-image.png) To configure the curator account just set the account name in the community settings: ![image.png](https://files.peakd.com/file/peakd-hive/peakd/EgMAentD-image.png) #### 3. Show Top Viewed Daily/Weekly awards on posts We started tracking views a few weeks ago, and we are constantly trying to improve on this. With this release we are starting an experimental tracking of the top daily/weekly viewed posts on peakd.com. You can see 2 new awards on posts ranked as 'top of the day' or 'top of the week'. ![image.png](https://files.peakd.com/file/peakd-hive/peakd/GZaEfvyM-image.png) #### 4. Mixcloud embeds and Improved Spotify support With this release it's possible to embed Mixcloud playlists with a simple link: `https://www.mixcloud.com/MagneticMagazine/ambient-meditations-vol-21-anane` And also support for Spotify as been improved and can now be embedded with just the link: `https://open.spotify.com/playlist/5UV4uC6N0lZ7q9ui3yIbqn?si=SGsfW4mYRGa2nA91e-cU1A` The result should be similar to this: https://open.spotify.com/playlist/5UV4uC6N0lZ7q9ui3yIbqn?si=SGsfW4mYRGa2nA91e-cU1A #### 5. Add Rising Star to the Games section in Wallet Rising Star is now included in the [wallet](https://peakd.com/wallet) 'Games' section. ![image.png](https://files.peakd.com/file/peakd-hive/peakd/6Mt6tve4-image.png) Check our the game using this link: https://risingstargame.com/ #### 6. Some minor improvements and bug fixes As always some minor improvements, updates and fixes across the website. You can check the full release notes here: **https://peakd.com/about/changelog**. ``` # Improvements and Fixes ------------------------------ [update] Improve layout and performance for Top Views page [update] Don't load comments by default for user not logged in [update] Show a button to publish a new post when an user blog is empty [update] Mark notification as read on all browser tabs after casting the transaction [update] Rework usage of 'get_account_history' API call to better handle the new behavior [fix] Fix 'upcoming' indicator in Proposals page ``` --- ## Support the @peakd project Now is probably a nice time to remind you of the ways you can support the development of @peakd. ![Selection_298.png](https://files.peakd.com/file/peakd-hive/peakd/w36DQpO7-Selection_298.png) We have a proposal on the Decentralized Hive Fund. You can review the proposal [here](/proposals/52). If you agree to the proposal and you think the points mentioned add value to the Hive Blockchain consider supporting it using the above links or directly with **[this link](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=[52]&amp;amp;approve=true)**. --- We also run a witness server to help produce the blocks for the Hive Blockchain. You can vote for our witness so we are in a position to process more of them. Vote on the witness page: https://peakd.com/witnesses - Using Keychain: You just have to click and approve the transaction - Using HiveSigner: You'll need access to confirm the transaction with your Active Key at least --- ###### *The PeakD Team* _About us: https://peakd.com/about_ _Join us on Discord: https://discord.gg/Fy3bca5_ See: Hivemind API Extension, Community Curated Content and More by @peakd</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://files.peakd.com/file/peakd-hive/peakd/af4z4wui-release_cover_20201124.jpg" /><media:content medium="image" url="https://files.peakd.com/file/peakd-hive/peakd/af4z4wui-release_cover_20201124.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Hivecrypt: JavaScript module for Hive memo encrypt/decrypt on wide range of environments</title><link href="https://hivedocs.info/news/nodejs/encryption/2020/11/22/hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments.html" rel="alternate" type="text/html" title="Hivecrypt: JavaScript module for Hive memo encrypt/decrypt on wide range of environments" /><published>2020-11-22T04:22:27-08:00</published><updated>2020-11-22T04:22:27-08:00</updated><id>https://hivedocs.info/news/nodejs/encryption/2020/11/22/hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments</id><content type="html" xml:base="https://hivedocs.info/news/nodejs/encryption/2020/11/22/hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments.html">&lt;div id=&quot;content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments&quot;&gt;&lt;center&gt;![Hivecrypt thumbnail.png](https://ipfs.io/ipfs/QmZ44f49mDr746uqisE11de6WXa3ojka4oecYTsvTo6BNb)&lt;/center&gt;

Are you getting the following error message when trying to encrypt or decrypt a Hive memo in ElectronJS or React Native using [hive-js](https://gitlab.syncad.com/hive/hive-js)? Perhaps looking for something that works for your framework that you're using when building your cutting-edge Hive DApp?

&lt;center&gt;![Screenshot 20201122 at 12.04.23 PM.png](https://files.peakd.com/file/peakd-hive/techcoderx/kpahmLHh-Screenshot202020-11-2220at2012.04.2320PM.png)&lt;/center&gt;

Introducing [Hivecrypt](https://github.com/techcoderx/hivecrypt), a module that you can import into a wide range of JavaScript environments, including desktop and mobile app frameworks like ElectronJS, that wouldn't otherwise work with existing libraries.

Adapted from this [pull request](https://peakd.com/hive-139531/@tngflx/contribution-to-dhive-added-memo-encryption-and-decrypt-feature) on [dhive](https://gitlab.syncad.com/hive/dhive) that was never merged into `master` (plus the major help from this [file](https://github.com/mahdiyari/hive-tx-js/blob/master/helpers/crypto.js)), Hivecrypt was built on [Crypto-JS](https://github.com/brix/crypto-js) that works on virtually any latest JavaScript environments, unlike the implementation on [hive-js](https://gitlab.syncad.com/hive/hive-js) and the pull request mentioned above, that uses the [crypto](https://nodejs.org/api/crypto.html) NodeJS module that only works on certain environments.

## How to use?

Hivecrypt can be installed from `npm` with the following command:
```
npm i hivecrypt
```
It can also be imported into the browser by including the following script tag in your HTML file, where Hivecrypt will be available through `window.hivecrypt`:
```
&lt;script src=&quot;https://unpkg.com/hivecrypt/bin/hivecrypt.min.js&quot;&gt;&lt;/script&gt;
```

Once installed, it may be used for encrypting and decrypting memos just like how it is done with [hive-js](https://gitlab.syncad.com/hive/hive-js), but works in more environments.

```
const hivecrypt = require('hivecrypt') // CommonJS

let encrypted = hivecrypt.encode('privatekey1','publickey2','#somesecretmessage')
let decrypted = hivecrypt.decode('privatekey2',encrypted)

console.log(encrypted,decrypted)
```
It might not be built with optimizing for the smallest package size in mind, but at least it is something that is usable for devs.

&lt;center&gt;[![Hive witness footer 2.png](https://ipfs.io/ipfs/QmVTNReuWzvLtY5sucfunQ2m9JpLWroYrXrcztpVsZq3sG)](https://hivesigner.com/sign/account-witness-vote?witness=techcoderx&amp;amp;approve=1)&lt;/center&gt;&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@techcoderx&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments').html();
      const outputElem = $('#content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments code {
    background: white;
  }
  #content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments a:hover {
    border-bottom: 0;
  }
  #content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments h1 {
    font-size: 2.2em;
  }
  #content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments header small {
    color: #999;
    font-size: 50%;
  }
  #content-techcoderx-hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://peakd.com/hive-139531/@techcoderx/hivecrypt-javascript-module-for-hive-memo-encrypt-decrypt-on-wide-range-of-environments&quot;&gt;Hivecrypt: JavaScript module for Hive memo encrypt/decrypt on wide range of environments&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@techcoderx&quot;&gt;@techcoderx&lt;/a&gt;
&lt;/p&gt;</content><author><name>techcoderx</name></author><category term="news" /><category term="nodejs" /><category term="encryption" /><summary type="html">![Hivecrypt thumbnail.png](https://ipfs.io/ipfs/QmZ44f49mDr746uqisE11de6WXa3ojka4oecYTsvTo6BNb) Are you getting the following error message when trying to encrypt or decrypt a Hive memo in ElectronJS or React Native using [hive-js](https://gitlab.syncad.com/hive/hive-js)? Perhaps looking for something that works for your framework that you're using when building your cutting-edge Hive DApp? ![Screenshot 20201122 at 12.04.23 PM.png](https://files.peakd.com/file/peakd-hive/techcoderx/kpahmLHh-Screenshot202020-11-2220at2012.04.2320PM.png) Introducing [Hivecrypt](https://github.com/techcoderx/hivecrypt), a module that you can import into a wide range of JavaScript environments, including desktop and mobile app frameworks like ElectronJS, that wouldn't otherwise work with existing libraries. Adapted from this [pull request](https://peakd.com/hive-139531/@tngflx/contribution-to-dhive-added-memo-encryption-and-decrypt-feature) on [dhive](https://gitlab.syncad.com/hive/dhive) that was never merged into `master` (plus the major help from this [file](https://github.com/mahdiyari/hive-tx-js/blob/master/helpers/crypto.js)), Hivecrypt was built on [Crypto-JS](https://github.com/brix/crypto-js) that works on virtually any latest JavaScript environments, unlike the implementation on [hive-js](https://gitlab.syncad.com/hive/hive-js) and the pull request mentioned above, that uses the [crypto](https://nodejs.org/api/crypto.html) NodeJS module that only works on certain environments. ## How to use? Hivecrypt can be installed from `npm` with the following command: ``` npm i hivecrypt ``` It can also be imported into the browser by including the following script tag in your HTML file, where Hivecrypt will be available through `window.hivecrypt`: ``` ``` Once installed, it may be used for encrypting and decrypting memos just like how it is done with [hive-js](https://gitlab.syncad.com/hive/hive-js), but works in more environments. ``` const hivecrypt = require('hivecrypt') // CommonJS let encrypted = hivecrypt.encode('privatekey1','publickey2','#somesecretmessage') let decrypted = hivecrypt.decode('privatekey2',encrypted) console.log(encrypted,decrypted) ``` It might not be built with optimizing for the smallest package size in mind, but at least it is something that is usable for devs. [![Hive witness footer 2.png](https://ipfs.io/ipfs/QmVTNReuWzvLtY5sucfunQ2m9JpLWroYrXrcztpVsZq3sG)](https://hivesigner.com/sign/account-witness-vote?witness=techcoderx&amp;amp;approve=1) See: Hivecrypt: JavaScript module for Hive memo encrypt/decrypt on wide range of environments by @techcoderx</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ipfs.io/ipfs/QmZ44f49mDr746uqisE11de6WXa3ojka4oecYTsvTo6BNb" /><media:content medium="image" url="https://ipfs.io/ipfs/QmZ44f49mDr746uqisE11de6WXa3ojka4oecYTsvTo6BNb" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Introducing Hive libraries for Microsoft .NET</title><link href="https://hivedocs.info/news/dotnet/2020/11/19/msnet-libraries.html" rel="alternate" type="text/html" title="Introducing Hive libraries for Microsoft .NET" /><published>2020-11-19T11:31:42-08:00</published><updated>2020-11-19T11:31:42-08:00</updated><id>https://hivedocs.info/news/dotnet/2020/11/19/msnet-libraries</id><content type="html" xml:base="https://hivedocs.info/news/dotnet/2020/11/19/msnet-libraries.html">&lt;div id=&quot;content-arcange-msnet-libraries&quot;&gt;![](https://i.imgur.com/uBDjiIT.png)

Today I want to introduce you to a new Microsoft .NET library for Hive developers.

### Why a .NET library?

While languages like Python or JavaScript have become very popular for web development, there are also developers out there who are unfamiliar with them. Some developers oriented towards Microsoft languages like VB.NET or C # may be frustrated at having to move away from their preferred programming language and tools like Microsoft Visual Studio.

That's why I've created easy-to-use .NET classes, exposing almost all the APIs of hived and cli_wallet, and allowing .NET developers to play with any API node.

The class library is available for both VB.NET and C# languages.

I also provide a &quot;COM library&quot;  (aka .dll) so you will also be able to use it directly in your favorite COM-enabled Windows application like Word or Excel, ... even if you don't have Microsoft Visual Studio to develop and compile applications.

### Code example

The library is really easy to use. Here a simple VB.NET code example that read the information from an account and stream the last 100 blocks from the blockchain:

```
Dim oHC As HttpClient = New HttpClient()
Using oHive As New CHived(oHC,&quot;https://api.hive.blog&quot;)
   Debug.Print(ohive.get_config.ToString)
   Debug.Print(ohive.get_account_count.ToString)

   oHive.get_account(&quot;arcange&quot;)
   Debug.Print(oAccount.ToString)

   Dim oBlock As JObject
   Dim oTrans As JObject
   Dim lLastBlockID As Long 
   
   lLastBlockID = oHive.get_dynamic_global_properties().Item(&quot;last_irreversible_block_num&quot;)

   For lBlockID As Long = lLastBlockID - 100 To lLastBlockID
      oBlock = ohive.get_block(lBlockID)
      If Not oBlock.Item(&quot;transactions&quot;) Is Nothing Then
         Debug.Print(String.Format(&quot;Block {0} {1} contains {2} transactions&quot;,
            oBlock.Item(&quot;block_num&quot;),
            oBlock.Item(&quot;timestamp&quot;).ToObject(Of DateTime),
            oBlock.Item(&quot;transactions&quot;).Count))
      End If
   Next
End Using
```

Here another example showing how one interacts with its wallet:

```
Dim oHC As HttpClient = New HttpClient()
Using oWallet As New hiveAPI.ChiveWallet(oHC,&quot;http://my.wallet.node&quot;)
   If oWallet.is_locked Then
      oWallet.unlock(&quot;mysuperwalletpassword&quot;)
   End If

   If oWallet.list_my_accounts.Count = 0 Then
      oWallet.import_key(&quot;MY_PRIVATE_POST_KEY&quot;)
   End If

   For Each oAccount In oWallet.list_my_accounts
      Debug.Print(oAccount.Item(&quot;name&quot;))
   Next

   ' Lets vote on a post ...
   oWallet.vote(&quot;arcange&quot;, &quot;hiveio&quot;, &quot;announcing-the-launch-of-hive-blockchain&quot;)
   oWallet.lock()
End Using
        
```

### Open source

The libraries are open source and can be found on [GitLab](https://gitlab.syncad.com/hive/hive-net).

If you have any comments or requests, please create an issue on GitLab too. You can also contact me on [Discord](https://discordapp.com/channels/@me/237480770933882881) or [Telegram](https://t.me/the_arcange)

---
&lt;center&gt;

### Check out my apps and services
&lt;a href=&quot;/hive/@hive.engage/stay-connected-with-your-hive-audience-and-catch-attention&quot;&gt;&lt;img src=&quot;https://i.imgur.com/GiNJqlm.png&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;/@hivebuzz&quot;&gt;&lt;img src=&quot;https://i.imgur.com/B4UTun2.png&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;/@hivesql&quot;&gt;&lt;img src=&quot;https://i.imgur.com/EPN8RW6.png&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;/hive/@arcange/introducing-hive-account-recovery&quot;&gt;&lt;img src=&quot;https://i.imgur.com/6TWeW7V.png&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;/@hive.autoclaim&quot;&gt;&lt;img src=&quot;https://i.imgur.com/ih2pEOw.png&quot; /&gt;&lt;/a&gt;&lt;/center&gt;
&lt;center&gt;

### [Vote for me as a witness ![](https://i.imgur.com/2bi4SnT.png)](https://hivesigner.com/sign/account-witness-vote?witness=arcange&amp;amp;approve=1)&amp;lt;/div&amp;gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@arcange&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/msnet-libraries&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-arcange-msnet-libraries').html();
      const outputElem = $('#content-arcange-msnet-libraries');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;
&lt;style&gt;
  #content-arcange-msnet-libraries {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-arcange-msnet-libraries code {
    background: white;
  }
  #content-arcange-msnet-libraries a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-arcange-msnet-libraries a:hover {
    border-bottom: 0;
  }
  #content-arcange-msnet-libraries h1 {
    font-size: 2.2em;
  }
  #content-arcange-msnet-libraries h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-arcange-msnet-libraries header small {
    color: #999;
    font-size: 50%;
  }
  #content-arcange-msnet-libraries img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;
&lt;p&gt;
  See: &lt;a href=&quot;https://peakd.com/hive-139531/@arcange/msnet-libraries&quot;&gt;Introducing Hive libraries for Microsoft .NET&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@arcange&quot;&gt;@arcange&lt;/a&gt;
&lt;/p&gt;

&lt;/center&gt;&lt;/div&gt;</content><author><name>arcange</name></author><category term="news" /><category term="dotnet" /><summary type="html">![](https://i.imgur.com/uBDjiIT.png) Today I want to introduce you to a new Microsoft .NET library for Hive developers. ### Why a .NET library? While languages like Python or JavaScript have become very popular for web development, there are also developers out there who are unfamiliar with them. Some developers oriented towards Microsoft languages like VB.NET or C # may be frustrated at having to move away from their preferred programming language and tools like Microsoft Visual Studio. That's why I've created easy-to-use .NET classes, exposing almost all the APIs of hived and cli_wallet, and allowing .NET developers to play with any API node. The class library is available for both VB.NET and C# languages. I also provide a &quot;COM library&quot; (aka .dll) so you will also be able to use it directly in your favorite COM-enabled Windows application like Word or Excel, ... even if you don't have Microsoft Visual Studio to develop and compile applications. ### Code example The library is really easy to use. Here a simple VB.NET code example that read the information from an account and stream the last 100 blocks from the blockchain: ``` Dim oHC As HttpClient = New HttpClient() Using oHive As New CHived(oHC,&quot;https://api.hive.blog&quot;) Debug.Print(ohive.get_config.ToString) Debug.Print(ohive.get_account_count.ToString) oHive.get_account(&quot;arcange&quot;) Debug.Print(oAccount.ToString) Dim oBlock As JObject Dim oTrans As JObject Dim lLastBlockID As Long lLastBlockID = oHive.get_dynamic_global_properties().Item(&quot;last_irreversible_block_num&quot;) For lBlockID As Long = lLastBlockID - 100 To lLastBlockID oBlock = ohive.get_block(lBlockID) If Not oBlock.Item(&quot;transactions&quot;) Is Nothing Then Debug.Print(String.Format(&quot;Block {0} {1} contains {2} transactions&quot;, oBlock.Item(&quot;block_num&quot;), oBlock.Item(&quot;timestamp&quot;).ToObject(Of DateTime), oBlock.Item(&quot;transactions&quot;).Count)) End If Next End Using ``` Here another example showing how one interacts with its wallet: ``` Dim oHC As HttpClient = New HttpClient() Using oWallet As New hiveAPI.ChiveWallet(oHC,&quot;http://my.wallet.node&quot;) If oWallet.is_locked Then oWallet.unlock(&quot;mysuperwalletpassword&quot;) End If If oWallet.list_my_accounts.Count = 0 Then oWallet.import_key(&quot;MY_PRIVATE_POST_KEY&quot;) End If For Each oAccount In oWallet.list_my_accounts Debug.Print(oAccount.Item(&quot;name&quot;)) Next ' Lets vote on a post ... oWallet.vote(&quot;arcange&quot;, &quot;hiveio&quot;, &quot;announcing-the-launch-of-hive-blockchain&quot;) oWallet.lock() End Using ``` ### Open source The libraries are open source and can be found on [GitLab](https://gitlab.syncad.com/hive/hive-net). If you have any comments or requests, please create an issue on GitLab too. You can also contact me on [Discord](https://discordapp.com/channels/@me/237480770933882881) or [Telegram](https://t.me/the_arcange) --- ### Check out my apps and services ### [Vote for me as a witness ![](https://i.imgur.com/2bi4SnT.png)](https://hivesigner.com/sign/account-witness-vote?witness=arcange&amp;amp;approve=1)&amp;lt;/div&amp;gt; See: Introducing Hive libraries for Microsoft .NET by @arcange</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.imgur.com/uBDjiIT.png" /><media:content medium="image" url="https://i.imgur.com/uBDjiIT.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Update on BlockTrades Hive Work (Nov 16th)</title><link href="https://hivedocs.info/news/core/development/2020/11/16/update-on-blocktrades-hive-work-nov-16th.html" rel="alternate" type="text/html" title="Update on BlockTrades Hive Work (Nov 16th)" /><published>2020-11-16T14:31:33-08:00</published><updated>2020-11-16T14:31:33-08:00</updated><id>https://hivedocs.info/news/core/development/2020/11/16/update-on-blocktrades-hive-work-nov-16th</id><content type="html" xml:base="https://hivedocs.info/news/core/development/2020/11/16/update-on-blocktrades-hive-work-nov-16th.html">&lt;div id=&quot;content-blocktrades-update-on-blocktrades-hive-work-nov-16th&quot;&gt;Last week we continued work on post HF24 optimizations. Below is a summary of the work done last week and our plans for the upcoming week.

# Hived work (blockchain node software)

We completed changes to the get_block_api plugin to speedup performance for the get_block API call. The old implementation used an overly pessimistic mutex locking scheme that severely degraded potential performance under loading. We’ve also added a new API call to fetch a consecutive set of blocks in one disk read operation.
https://gitlab.syncad.com/hive/hive/-/merge_requests/149

Unfortunately, due to delays related to several hash computations (including one associated with getting the signee key of the block) and conversion of the binary block data to fc::variants and later to json, these API calls are still too slow for the needs of hivemind initial sync. 

To overcome this problem, we’re now creating a hived plugin that can directly write the needed data into hivemind’s database during hive reindexing and normal block reception. Most of the data being provided by get_block_api is of no interest to hivemind, so using this API to get the data was unnecessarily wasting CPU, in addition to slowing down hivemind. I expect that using the plugin approach will lead to significant speedup in the initial sync time for hivemind (my guess now is 2x at least) and it should also reduce normal hivemind live-sync write time.

## Hived status

We’ve tagged a version v1.24.7 which contains the new `get_block_range(starting_block_num, count)` API call as well as the fix to make the legacy get_account_history API use 0-based operation index like the get_account_history_rocksdb plugin does.

v1.24.7 is a recommended upgrade for API node operators, but it doesn’t contain changes needed by witness nodes or exchanges. It doesn’t require a reindex from the previous v1.24.6, as it is strictly contains API-related changes.

# Hivemind (2nd layer microservice for social media applications)

Most of our Hive devs continued to working on hivemind last week. Below are some of the merge requests incorporated into the develop branch of the hivemind repo:

performance optimizations:
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/365
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/366
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/373
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/367

various bug fixes:
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/354
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/362
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/371
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/364
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/337
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/370
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/382

new tests:
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/351

test system improvement:
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/376
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/374
https://gitlab.syncad.com/hive/hivemind/-/merge_requests/375


# Condenser + Condenser wallet (open-source code for **hive.blog**)

The bug editing comments was fixed:
https://gitlab.syncad.com/hive/condenser/-/merge_requests/151

Fix for wallet proposals page where non-burn proposals were being displayed as burn proposals:
https://gitlab.syncad.com/hive/wallet/-/merge_requests/75

We’re also testing and fixing bugs in the UI for creating decentralized lists:
https://gitlab.syncad.com/hive/condenser/-/merge_requests/155
https://gitlab.syncad.com/hive/condenser/-/merge_requests/156

# Nearing completion of airdrop proposal re-payment

I’ve refunded the overage of Hive from HBD→Hive conversions to the hive.fund account (when I converted some of the HBD to Hive, there was a slight overage of Hive due to the unpredictable amount that the conversion will yield). Once the proposal completes, I will compute and refund the HBD overage back to the hive.fund account as well.

# What’s the plan for next week?

* Finish hivemind and condenser muting changes. We’ve partially completed an additional change to condenser to allow a condenser operator to specify a “default observer” when a user isn’t logged in. This allows the condenser web site operator to specify their own initial list of spammers to be muted (for example, to protect their SEO results) that will function prior to a user’s login. For example, we’ve using the @hive.blog account as the default observer for the hive.blog site.
* Enable reputation calculation code.
* Continue creating hivemind tests.
* We’re prioritizing the speedup of hivemind full sync via a hived plugin as the slow sync time has a big impact on the speed of hivemind CI (which sets an upper limit on how fast we can validate changes).
* Still hoping to get out a post with a comprehensive list of planned changes for HF25 and for 2nd layer improvements soon (although the hived plugin for dumping directly to PostgreSQL is one of the planned major 2nd layer improvements: it’s just getting fast-tracked because it impacts our current work a lot).&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@blocktrades&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/update-on-blocktrades-hive-work-nov-16th&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-blocktrades-update-on-blocktrades-hive-work-nov-16th').html();
      const outputElem = $('#content-blocktrades-update-on-blocktrades-hive-work-nov-16th');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-blocktrades-update-on-blocktrades-hive-work-nov-16th {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-blocktrades-update-on-blocktrades-hive-work-nov-16th code {
    background: white;
  }
  #content-blocktrades-update-on-blocktrades-hive-work-nov-16th a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-blocktrades-update-on-blocktrades-hive-work-nov-16th a:hover {
    border-bottom: 0;
  }
  #content-blocktrades-update-on-blocktrades-hive-work-nov-16th h1 {
    font-size: 2.2em;
  }
  #content-blocktrades-update-on-blocktrades-hive-work-nov-16th h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-blocktrades-update-on-blocktrades-hive-work-nov-16th header small {
    color: #999;
    font-size: 50%;
  }
  #content-blocktrades-update-on-blocktrades-hive-work-nov-16th img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/hive-139531/@blocktrades/update-on-blocktrades-hive-work-nov-16th&quot;&gt;Update on BlockTrades Hive Work (Nov 16th)&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@blocktrades&quot;&gt;@blocktrades&lt;/a&gt;
&lt;/p&gt;</content><author><name>blocktrades</name></author><category term="news" /><category term="core" /><category term="development" /><summary type="html">Last week we continued work on post HF24 optimizations. Below is a summary of the work done last week and our plans for the upcoming week. # Hived work (blockchain node software) We completed changes to the get_block_api plugin to speedup performance for the get_block API call. The old implementation used an overly pessimistic mutex locking scheme that severely degraded potential performance under loading. We’ve also added a new API call to fetch a consecutive set of blocks in one disk read operation. https://gitlab.syncad.com/hive/hive/-/merge_requests/149 Unfortunately, due to delays related to several hash computations (including one associated with getting the signee key of the block) and conversion of the binary block data to fc::variants and later to json, these API calls are still too slow for the needs of hivemind initial sync. To overcome this problem, we’re now creating a hived plugin that can directly write the needed data into hivemind’s database during hive reindexing and normal block reception. Most of the data being provided by get_block_api is of no interest to hivemind, so using this API to get the data was unnecessarily wasting CPU, in addition to slowing down hivemind. I expect that using the plugin approach will lead to significant speedup in the initial sync time for hivemind (my guess now is 2x at least) and it should also reduce normal hivemind live-sync write time. ## Hived status We’ve tagged a version v1.24.7 which contains the new `get_block_range(starting_block_num, count)` API call as well as the fix to make the legacy get_account_history API use 0-based operation index like the get_account_history_rocksdb plugin does. v1.24.7 is a recommended upgrade for API node operators, but it doesn’t contain changes needed by witness nodes or exchanges. It doesn’t require a reindex from the previous v1.24.6, as it is strictly contains API-related changes. # Hivemind (2nd layer microservice for social media applications) Most of our Hive devs continued to working on hivemind last week. Below are some of the merge requests incorporated into the develop branch of the hivemind repo: performance optimizations: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/365 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/366 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/373 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/367 various bug fixes: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/354 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/362 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/371 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/364 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/337 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/370 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/382 new tests: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/351 test system improvement: https://gitlab.syncad.com/hive/hivemind/-/merge_requests/376 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/374 https://gitlab.syncad.com/hive/hivemind/-/merge_requests/375 # Condenser + Condenser wallet (open-source code for **hive.blog**) The bug editing comments was fixed: https://gitlab.syncad.com/hive/condenser/-/merge_requests/151 Fix for wallet proposals page where non-burn proposals were being displayed as burn proposals: https://gitlab.syncad.com/hive/wallet/-/merge_requests/75 We’re also testing and fixing bugs in the UI for creating decentralized lists: https://gitlab.syncad.com/hive/condenser/-/merge_requests/155 https://gitlab.syncad.com/hive/condenser/-/merge_requests/156 # Nearing completion of airdrop proposal re-payment I’ve refunded the overage of Hive from HBD→Hive conversions to the hive.fund account (when I converted some of the HBD to Hive, there was a slight overage of Hive due to the unpredictable amount that the conversion will yield). Once the proposal completes, I will compute and refund the HBD overage back to the hive.fund account as well. # What’s the plan for next week? * Finish hivemind and condenser muting changes. We’ve partially completed an additional change to condenser to allow a condenser operator to specify a “default observer” when a user isn’t logged in. This allows the condenser web site operator to specify their own initial list of spammers to be muted (for example, to protect their SEO results) that will function prior to a user’s login. For example, we’ve using the @hive.blog account as the default observer for the hive.blog site. * Enable reputation calculation code. * Continue creating hivemind tests. * We’re prioritizing the speedup of hivemind full sync via a hived plugin as the slow sync time has a big impact on the speed of hivemind CI (which sets an upper limit on how fast we can validate changes). * Still hoping to get out a post with a comprehensive list of planned changes for HF25 and for 2nd layer improvements soon (although the hived plugin for dumping directly to PostgreSQL is one of the planned major 2nd layer improvements: it’s just getting fast-tracked because it impacts our current work a lot). See: Update on BlockTrades Hive Work (Nov 16th) by @blocktrades</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://hivedocs.info/assets/images/favicon.png" /><media:content medium="image" url="https://hivedocs.info/assets/images/favicon.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">HiveSQL is free again - Thank you for your support!</title><link href="https://hivedocs.info/news/sql/database/2020/11/12/hivesql-free.html" rel="alternate" type="text/html" title="HiveSQL is free again - Thank you for your support!" /><published>2020-11-12T08:30:00-08:00</published><updated>2020-11-12T08:30:00-08:00</updated><id>https://hivedocs.info/news/sql/database/2020/11/12/hivesql-free</id><content type="html" xml:base="https://hivedocs.info/news/sql/database/2020/11/12/hivesql-free.html">&lt;div id=&quot;content-arcange-hivesql-free&quot;&gt;![](https://i.imgur.com/h4Ez40w.png)

A few days ago, I introduced a [proposal](https://peakd.com/me/proposals/138) to make HiveSQL free to use again. The aim of the proposal is to enable as many developers and users as possible to benefit from this valuable tool and develop applications and services for our ecosystem.

Today, thanks to your amazing support, I'm happy to announce that HiveSQL is free again!

This means that anyone with a registered HiveSQL account will now have access to all the blockchain data and will be able to issue SQL queries for free.

## How to register your HiveSQL account?

For obvious security reasons, before being able to access the HiveSQL database, you will have to create a HiveSQL account. The activation process is very simple:

1. Transfer **0.01 SBD** to @hivesql (no memo required)

2. As soon as @hivesql receives your transfer, your activation will be processed

3. A few seconds later, you will receive a micro-transfer back from @hivesql.

![](https://i.imgur.com/9yQYdUL.png)

The @hivesql transfer memo contains your new credentials and is therefore encrypted.
There are two easy ways to see its content;

1. if you use **peakd.com**, click on the small green lock 
![](https://i.imgur.com/uugVmTH.png)

2. if you have **Keychain** installed, open it and click on the History button&lt;br /&gt;
![](https://i.imgur.com/7OerE4l.png)&lt;br /&gt;
![](https://i.imgur.com/jQtQGgl.png)

The memo contains the following information:

* the  hostname to connect to the HiveSQL server.
* your personal login
* your password

## What's next

Now that the proposal is funded, I will finally be able to tackle the many improvement projects that I wanted to implement. There is a lot of work ahead, among them the HiveSQL.io website update and the creation of decent documentation and tutorials.

I would also like to partially review the design of the database to further improve its performance. I also want to add tables that can be useful and avoid redundant queries.

I also have lots of other ideas, but one thing at a time... let's first consolidate the basics.

## Support

If you have any questions, remarks or suggestions, support for HiveSQL is provided on the [HiveSQL Discord Channel](https://discord.gg/kyEFDfT) only.

**Support the Proposal**

Things keep moving in life, so additional support for the proposal is still welcome.

* [Vote for this proposal on Peakd.com](https://peakd.com/me/proposals/138)
* [Vote for this Proposal on Hive.blog](https://wallet.hive.blog/proposals/138)
* [Vote for this Proposal using HiveSigner](https://hivesigner.com/sign/update_proposal_votes?proposal_ids=%5B%22138%22%5D&amp;amp;approve=true)

Thank you to all who supported the proposal and made HiveSQL free again!

---
&lt;center&gt;

### Check out my apps and services
&lt;a href=&quot;/hive/@hive.engage/stay-connected-with-your-hive-audience-and-catch-attention&quot;&gt;&lt;img src=&quot;https://i.imgur.com/GiNJqlm.png&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;/@hivebuzz&quot;&gt;&lt;img src=&quot;https://i.imgur.com/B4UTun2.png&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;/@hivesql&quot;&gt;&lt;img src=&quot;https://i.imgur.com/EPN8RW6.png&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;/hive/@arcange/introducing-hive-account-recovery&quot;&gt;&lt;img src=&quot;https://i.imgur.com/6TWeW7V.png&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;/@hive.autoclaim&quot;&gt;&lt;img src=&quot;https://i.imgur.com/ih2pEOw.png&quot; /&gt;&lt;/a&gt;&lt;/center&gt;
&lt;center&gt;

### [Vote for me as a witness ![](https://i.imgur.com/2bi4SnT.png)](https://hivesigner.com/sign/account-witness-vote?witness=arcange&amp;amp;approve=1)
&amp;lt;/div&amp;gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@arcange&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/hivesql-free&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-arcange-hivesql-free').html();
      const outputElem = $('#content-arcange-hivesql-free');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;
&lt;style&gt;
  #content-arcange-hivesql-free {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-arcange-hivesql-free code {
    background: white;
  }
  #content-arcange-hivesql-free a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-arcange-hivesql-free a:hover {
    border-bottom: 0;
  }
  #content-arcange-hivesql-free h1 {
    font-size: 2.2em;
  }
  #content-arcange-hivesql-free h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-arcange-hivesql-free header small {
    color: #999;
    font-size: 50%;
  }
  #content-arcange-hivesql-free img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;
&lt;p&gt;
  See: &lt;a href=&quot;https://peakd.com/hive-139531/@arcange/hivesql-free&quot;&gt;HiveSQL is free again - Thank you for your support!&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@arcange&quot;&gt;@arcange&lt;/a&gt;
&lt;/p&gt;

&lt;/center&gt;&lt;/div&gt;</content><author><name>arcange</name></author><category term="news" /><category term="sql" /><category term="database" /><summary type="html">![](https://i.imgur.com/h4Ez40w.png) A few days ago, I introduced a [proposal](https://peakd.com/me/proposals/138) to make HiveSQL free to use again. The aim of the proposal is to enable as many developers and users as possible to benefit from this valuable tool and develop applications and services for our ecosystem. Today, thanks to your amazing support, I'm happy to announce that HiveSQL is free again! This means that anyone with a registered HiveSQL account will now have access to all the blockchain data and will be able to issue SQL queries for free. ## How to register your HiveSQL account? For obvious security reasons, before being able to access the HiveSQL database, you will have to create a HiveSQL account. The activation process is very simple: 1. Transfer **0.01 SBD** to @hivesql (no memo required) 2. As soon as @hivesql receives your transfer, your activation will be processed 3. A few seconds later, you will receive a micro-transfer back from @hivesql. ![](https://i.imgur.com/9yQYdUL.png) The @hivesql transfer memo contains your new credentials and is therefore encrypted. There are two easy ways to see its content; 1. if you use **peakd.com**, click on the small green lock ![](https://i.imgur.com/uugVmTH.png) 2. if you have **Keychain** installed, open it and click on the History button ![](https://i.imgur.com/7OerE4l.png) ![](https://i.imgur.com/jQtQGgl.png) The memo contains the following information: * the hostname to connect to the HiveSQL server. * your personal login * your password ## What's next Now that the proposal is funded, I will finally be able to tackle the many improvement projects that I wanted to implement. There is a lot of work ahead, among them the HiveSQL.io website update and the creation of decent documentation and tutorials. I would also like to partially review the design of the database to further improve its performance. I also want to add tables that can be useful and avoid redundant queries. I also have lots of other ideas, but one thing at a time... let's first consolidate the basics. ## Support If you have any questions, remarks or suggestions, support for HiveSQL is provided on the [HiveSQL Discord Channel](https://discord.gg/kyEFDfT) only. **Support the Proposal** Things keep moving in life, so additional support for the proposal is still welcome. * [Vote for this proposal on Peakd.com](https://peakd.com/me/proposals/138) * [Vote for this Proposal on Hive.blog](https://wallet.hive.blog/proposals/138) * [Vote for this Proposal using HiveSigner](https://hivesigner.com/sign/update_proposal_votes?proposal_ids=%5B%22138%22%5D&amp;amp;approve=true) Thank you to all who supported the proposal and made HiveSQL free again! --- ### Check out my apps and services ### [Vote for me as a witness ![](https://i.imgur.com/2bi4SnT.png)](https://hivesigner.com/sign/account-witness-vote?witness=arcange&amp;amp;approve=1) &amp;lt;/div&amp;gt; See: HiveSQL is free again - Thank you for your support! by @arcange</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.imgur.com/h4Ez40w.png" /><media:content medium="image" url="https://i.imgur.com/h4Ez40w.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Radiator v0.4.8 - Hive Ruby API Client: Eclipse Update</title><link href="https://hivedocs.info/news/ruby/eclipse/2020/11/09/radiator-v0-4-8-hive-ruby-api-client-eclipse-update.html" rel="alternate" type="text/html" title="Radiator v0.4.8 - Hive Ruby API Client: Eclipse Update" /><published>2020-11-09T11:32:33-08:00</published><updated>2020-11-09T11:32:33-08:00</updated><id>https://hivedocs.info/news/ruby/eclipse/2020/11/09/radiator-v0-4-8-hive-ruby-api-client-eclipse-update</id><content type="html" xml:base="https://hivedocs.info/news/ruby/eclipse/2020/11/09/radiator-v0-4-8-hive-ruby-api-client-eclipse-update.html">&lt;div id=&quot;content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update&quot;&gt;&lt;div class=&quot;pull-right&quot;&gt;
&lt;img src=&quot;https://i.imgur.com/1r9bHwF.png&quot; /&gt;
&lt;/div&gt;

Repository: https://github.com/inertia186/radiator

In addition to bug fixes and general identifier name changes for Hive assets, this version of Radiator now incorporates `hive-ruby` as the primary basis for interacting with the blockchain.

So why use Radiator at all when you can just use the `hive-ruby` gem directly?  Well, that's because Radiator can do failover as well as access the Hive Engine API.

Not only that, but Radiator can also still work with Steem (and Steem Engine), if you're into that sort of thing.

To update your applications:

```bash
bundle update
```

#### Changes in v0.4.8

* Eclipse Update
* Now wrapping [`hive-ruby`](https://gitlab.syncad.com/hive/hive-ruby) and [`steem-ruby`](https://github.com/steemit/steem-ruby)

#### Changes in v0.4.7

* Added `attr_reader` for `Radiator::Type::Amount` [#28](https://github.com/inertia186/radiator/issues/28)
* Added restful fallback for `get_transaction` during `recover_transactions_on_error`
* Fix beneficiary serialization (thanks @eonwarped)

#### Changes in v0.4.6

* Added health check and persist option

#### Previous Changes
- [Radiator v0.4.5 - Engine Support](https://hive.blog/utopian-io/@inertia/radiator-v0-4-5-steem-ruby-api-client-steem-engine-support)
- [Radiator v0.4.0 - AppBase Update](https://hive.blog/radiator/@inertia/radiator-v0-4-0-steem-ruby-api-client-appbase-update)
- [Radiator v0.3.0 - Now With Failover Support](https://hive.blog/radiator/@inertia/radiator-v0-3-0-steem-ruby-api-client-update-now-with-failover-support)

#### Github
https://github.com/inertia186&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@inertia&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/radiator-v0-4-8-hive-ruby-api-client-eclipse-update&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update').html();
      const outputElem = $('#content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update code {
    background: white;
  }
  #content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update a:hover {
    border-bottom: 0;
  }
  #content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update h1 {
    font-size: 2.2em;
  }
  #content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update header small {
    color: #999;
    font-size: 50%;
  }
  #content-inertia-radiator-v0-4-8-hive-ruby-api-client-eclipse-update img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/hive-139531/@inertia/radiator-v0-4-8-hive-ruby-api-client-eclipse-update&quot;&gt;Radiator v0.4.8 - Hive Ruby API Client: Eclipse Update&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@inertia&quot;&gt;@inertia&lt;/a&gt;
&lt;/p&gt;</content><author><name>inertia</name></author><category term="news" /><category term="ruby" /><category term="eclipse" /><summary type="html">Repository: https://github.com/inertia186/radiator In addition to bug fixes and general identifier name changes for Hive assets, this version of Radiator now incorporates `hive-ruby` as the primary basis for interacting with the blockchain. So why use Radiator at all when you can just use the `hive-ruby` gem directly? Well, that's because Radiator can do failover as well as access the Hive Engine API. Not only that, but Radiator can also still work with Steem (and Steem Engine), if you're into that sort of thing. To update your applications: ```bash bundle update ``` #### Changes in v0.4.8 * Eclipse Update * Now wrapping [`hive-ruby`](https://gitlab.syncad.com/hive/hive-ruby) and [`steem-ruby`](https://github.com/steemit/steem-ruby) #### Changes in v0.4.7 * Added `attr_reader` for `Radiator::Type::Amount` [#28](https://github.com/inertia186/radiator/issues/28) * Added restful fallback for `get_transaction` during `recover_transactions_on_error` * Fix beneficiary serialization (thanks @eonwarped) #### Changes in v0.4.6 * Added health check and persist option #### Previous Changes - [Radiator v0.4.5 - Engine Support](https://hive.blog/utopian-io/@inertia/radiator-v0-4-5-steem-ruby-api-client-steem-engine-support) - [Radiator v0.4.0 - AppBase Update](https://hive.blog/radiator/@inertia/radiator-v0-4-0-steem-ruby-api-client-appbase-update) - [Radiator v0.3.0 - Now With Failover Support](https://hive.blog/radiator/@inertia/radiator-v0-3-0-steem-ruby-api-client-update-now-with-failover-support) #### Github https://github.com/inertia186 See: Radiator v0.4.8 - Hive Ruby API Client: Eclipse Update by @inertia</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.imgur.com/1r9bHwF.png" /><media:content medium="image" url="https://i.imgur.com/1r9bHwF.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">My new contributions to the Hive Condenser</title><link href="https://hivedocs.info/news/nodejs/condenser/2020/11/09/29vxd3-my-new-contributions-to-the-hive-condenser.html" rel="alternate" type="text/html" title="My new contributions to the Hive Condenser" /><published>2020-11-09T02:30:06-08:00</published><updated>2020-11-09T02:30:06-08:00</updated><id>https://hivedocs.info/news/nodejs/condenser/2020/11/09/29vxd3-my-new-contributions-to-the-hive-condenser</id><content type="html" xml:base="https://hivedocs.info/news/nodejs/condenser/2020/11/09/29vxd3-my-new-contributions-to-the-hive-condenser.html">&lt;div id=&quot;content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser&quot;&gt;## Updates to the Badges and Achievements
The recent addition of Peakd and Hivebuzz social and achievement badges stirred some controversy, some people loved it, some hated it and requested for its removal or at least for a way to opt-out.

I initially thought of refactoring the look and feel of the badges bar on the user profile header and add a new user preferences but after discussing with other members of the dev team we agreed on implementing @guiltyparties' suggestion:
 - rename &quot;Communities&quot; tab to &quot;Social&quot; as it was pretty empty.
 - move the badges from the header into the &quot;Social&quot; tab.

Merge request on GitLab:
https://gitlab.syncad.com/hive/condenser/-/merge_requests/148

![Badges and Achievements in the Social tab](https://gitlab.syncad.com/hive/condenser/uploads/ced62e0623456f39a1247e76d79ed0e1/Screen_Shot_2020-11-06_at_11.10.51_pm.png)

## Bandcamp and Archive.org embedded players
I think I forgot to mention in previous update that there is a pending merge request for embedded players for Bandcamp and Archive.org.

Bandcamp embedded player:
![Bandcamp embedded player](https://gitlab.syncad.com/hive/condenser/uploads/1e835b654231f31706e89a638e703442/Screen_Shot_2020-10-28_at_9.38.59_pm.png)

Archive.org embedded player:
![Archive.org embedded player](https://gitlab.syncad.com/hive/condenser/uploads/3c2b233d98a50c52b6be6877d8413a08/Screen_Shot_2020-10-28_at_9.40.03_pm.png)

Merge request on GitLab: https://gitlab.syncad.com/hive/condenser/-/merge_requests/137

## Notes
- Both features are still pending review, tests and deployment from the dev team.
- As for now, it is decided to slow down on addition of new embedded players since we have covered main ones already and would like to focus on other more important features and bug fixes.

---

**Vote for my witness**
[![Support @quochuy Witness.jpg](https://images.hive.blog/DQmecYTZemY8SwU6rrg7awhpNRBsehUp7ivk9RGyZsUUpVw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1)
On Hive, Witnesses are playing the important role of providing a performant and safe network for all of us. You have the power to choose 30 trusty witnesses to package transactions and sign the blocks that will go in the Hive blockchain. [Vote for me via HiveSigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) to support my work for the community.&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@quochuy&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/29vxd3-my-new-contributions-to-the-hive-condenser&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser').html();
      const outputElem = $('#content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser code {
    background: white;
  }
  #content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser a:hover {
    border-bottom: 0;
  }
  #content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser h1 {
    font-size: 2.2em;
  }
  #content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser header small {
    color: #999;
    font-size: 50%;
  }
  #content-quochuy-29vxd3-my-new-contributions-to-the-hive-condenser img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/hive-139531/@quochuy/29vxd3-my-new-contributions-to-the-hive-condenser&quot;&gt;My new contributions to the Hive Condenser&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@quochuy&quot;&gt;@quochuy&lt;/a&gt;
&lt;/p&gt;</content><author><name>quochuy</name></author><category term="news" /><category term="nodejs" /><category term="condenser" /><summary type="html">## Updates to the Badges and Achievements The recent addition of Peakd and Hivebuzz social and achievement badges stirred some controversy, some people loved it, some hated it and requested for its removal or at least for a way to opt-out. I initially thought of refactoring the look and feel of the badges bar on the user profile header and add a new user preferences but after discussing with other members of the dev team we agreed on implementing @guiltyparties' suggestion: - rename &quot;Communities&quot; tab to &quot;Social&quot; as it was pretty empty. - move the badges from the header into the &quot;Social&quot; tab. Merge request on GitLab: https://gitlab.syncad.com/hive/condenser/-/merge_requests/148 ![Badges and Achievements in the Social tab](https://gitlab.syncad.com/hive/condenser/uploads/ced62e0623456f39a1247e76d79ed0e1/Screen_Shot_2020-11-06_at_11.10.51_pm.png) ## Bandcamp and Archive.org embedded players I think I forgot to mention in previous update that there is a pending merge request for embedded players for Bandcamp and Archive.org. Bandcamp embedded player: ![Bandcamp embedded player](https://gitlab.syncad.com/hive/condenser/uploads/1e835b654231f31706e89a638e703442/Screen_Shot_2020-10-28_at_9.38.59_pm.png) Archive.org embedded player: ![Archive.org embedded player](https://gitlab.syncad.com/hive/condenser/uploads/3c2b233d98a50c52b6be6877d8413a08/Screen_Shot_2020-10-28_at_9.40.03_pm.png) Merge request on GitLab: https://gitlab.syncad.com/hive/condenser/-/merge_requests/137 ## Notes - Both features are still pending review, tests and deployment from the dev team. - As for now, it is decided to slow down on addition of new embedded players since we have covered main ones already and would like to focus on other more important features and bug fixes. --- **Vote for my witness** [![Support @quochuy Witness.jpg](https://images.hive.blog/DQmecYTZemY8SwU6rrg7awhpNRBsehUp7ivk9RGyZsUUpVw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) On Hive, Witnesses are playing the important role of providing a performant and safe network for all of us. You have the power to choose 30 trusty witnesses to package transactions and sign the blocks that will go in the Hive blockchain. [Vote for me via HiveSigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) to support my work for the community. See: My new contributions to the Hive Condenser by @quochuy</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://gitlab.syncad.com/hive/condenser/uploads/ced62e0623456f39a1247e76d79ed0e1/Screen_Shot_2020-11-06_at_11.10.51_pm.png" /><media:content medium="image" url="https://gitlab.syncad.com/hive/condenser/uploads/ced62e0623456f39a1247e76d79ed0e1/Screen_Shot_2020-11-06_at_11.10.51_pm.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>