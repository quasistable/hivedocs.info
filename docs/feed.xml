<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://hivedocs.info/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hivedocs.info/" rel="alternate" type="text/html" /><updated>2021-04-27T00:12:38-07:00</updated><id>https://hivedocs.info/feed.xml</id><title type="html">Hive Chain Documentation</title><subtitle>Your resource for various levels of Hive Documentation.</subtitle><author><name>site curated by: @inertia</name></author><entry><title type="html">Hive Keychain Mobile 1.1 : in-App browser</title><link href="https://hivedocs.info/news/projects/hive-keychain/2021/04/26/hive-keychain-mobile-11-in-app-browser.html" rel="alternate" type="text/html" title="Hive Keychain Mobile 1.1 : in-App browser" /><published>2021-04-26T23:52:33-07:00</published><updated>2021-04-26T23:52:33-07:00</updated><id>https://hivedocs.info/news/projects/hive-keychain/2021/04/26/hive-keychain-mobile-11--in-app-browser</id><content type="html" xml:base="https://hivedocs.info/news/projects/hive-keychain/2021/04/26/hive-keychain-mobile-11-in-app-browser.html">&lt;div id=&quot;content-keychain-hive-keychain-mobile-11--in-app-browser&quot;&gt;![social_keychainforhive.jpg](https://files.peakd.com/file/peakd-hive/keychain/xnmVXGi6-social_keychain-for-hive.jpg)

Hive Keychain for mobile is now available in version 1.1.2 on both Android and iOS (the issue with Apple is finally resolved). It introduces an in-App browser that lets you use your dApps in a similar manner that on desktop, with the dApps issuing requests to Keychain, that will then sign the transactions upon approval.

Here's an example of logging in on PeakD:

https://files.peakd.com/file/peakd-hive/keychain/23zRyEJARgwZGS6LoYg85kwBy9n2YV9jc6MVRutVZ2tCGtVVd1Y7cjcCKACoJYTvtEs5W.gif

All the major request types are already implemented, so that you can make the most of your Keychain experience on mobile : 

- Login methods
- Generic broadcasts
- Post / Comment
- Vote
- Transfer (with or without encrypted memo)
- Hive Engine Transfer
- Power up / down
- Delegations
- Proposal votes
- Witness vote / proxy
- Encode / Decode message
- Sign transaction / buffer

The release was delayed by one day to add browser history management and url autocomplete features.
Hope you will enjoy it!

Some additional requests are still missing but more rarely used, and will be added soon.
Additionally, the browser will be improved with favorites and multiple tabs handling. We will also add the possibility to whitelist some requests in the future, in order to mirror the behavior that you can find on the browser extension.

## Download the Apps

[&lt;img src=&quot;https://images.hive.blog/200x50/https://files.peakd.com/file/peakd-hive/keychain/23vsHsRHWYjefYMReCeLtoPxb5L8sov9BR52RXpnmax9qiGzCQnRRghLBVGq7rKp642hA&quot; /&gt;](https://apps.apple.com/us/app/hive-keychain/id1552190010)
[&lt;img src=&quot;https://images.hive.blog/200x50/https://files.peakd.com/file/peakd-hive/keychain/23wMPrC1wiKKXTYQVQHViGYKC61ZEo4nSKGHY7aW2m4EzsLf2sSB5MhewMQZysNS4fBTS&quot; /&gt;](https://play.google.com/store/apps/details?id=com.mobilekeychain)

1. The Application is still in Beta. It has been tested extensively but it should not by any means be the only place you store your keys on.
2. To import accounts quickly from your Hive Keychain extension to your mobile App, use the QR Code scanner by pressing the QR code logo:

On your extension, navigate to the menu (top right button), then to `Manage Accounts` and finally click on `Show QR Code`.

## Discord

To communicate with us or become an Alpha tester, join our Discord by following this link :
https://discord.gg/3EM6YfRrGv

Or scanning this QR Code : 

![image.png](https://files.peakd.com/file/peakd-hive/keychain/BRNgvm9y-image.png)

#### Core Team

@stoodkev : Lead Dev - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=stoodkev&amp;amp;approve=1)
@nateaguila : UI/UX
@yabapmatt : Founder - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=yabapmatt&amp;amp;approve=1)
@aggroed : Founder - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=aggroed&amp;amp;approve=1)


---

### Support Hive Keychain development by voting for [our proposal](https://peakd.com/hive/@keychain/hive-keychain-development-proposal-2) on [PeakD](https://peakd.com/proposals/140) or with [HiveSigner](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5B140%5D&amp;amp;approve=true).

*100% of payout is redirected to the DAO*&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hive-content-renderer/dist/hive-content-renderer.min.js&quot;&gt;&lt;/script&gt; --&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
      // const renderer = new HiveContentRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@keychain&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/hive-keychain-mobile-11--in-app-browser&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-keychain-hive-keychain-mobile-11--in-app-browser').html();
      const outputElem = $('#content-keychain-hive-keychain-mobile-11--in-app-browser');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-keychain-hive-keychain-mobile-11--in-app-browser {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-keychain-hive-keychain-mobile-11--in-app-browser code {
    background: white;
  }
  #content-keychain-hive-keychain-mobile-11--in-app-browser a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-keychain-hive-keychain-mobile-11--in-app-browser a:hover {
    border-bottom: 0;
  }
  #content-keychain-hive-keychain-mobile-11--in-app-browser h1 {
    font-size: 2.2em;
  }
  #content-keychain-hive-keychain-mobile-11--in-app-browser h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-keychain-hive-keychain-mobile-11--in-app-browser header small {
    color: #999;
    font-size: 50%;
  }
  #content-keychain-hive-keychain-mobile-11--in-app-browser img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://peakd.com/keychain/@keychain/hive-keychain-mobile-11--in-app-browser&quot;&gt;Hive Keychain Mobile 1.1 : in-App browser&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@keychain&quot;&gt;@keychain&lt;/a&gt;
&lt;/p&gt;</content><author><name>keychain</name></author><category term="news" /><category term="projects" /><category term="hive-keychain" /><summary type="html">![social_keychainforhive.jpg](https://files.peakd.com/file/peakd-hive/keychain/xnmVXGi6-social_keychain-for-hive.jpg) Hive Keychain for mobile is now available in version 1.1.2 on both Android and iOS (the issue with Apple is finally resolved). It introduces an in-App browser that lets you use your dApps in a similar manner that on desktop, with the dApps issuing requests to Keychain, that will then sign the transactions upon approval. Here's an example of logging in on PeakD: https://files.peakd.com/file/peakd-hive/keychain/23zRyEJARgwZGS6LoYg85kwBy9n2YV9jc6MVRutVZ2tCGtVVd1Y7cjcCKACoJYTvtEs5W.gif All the major request types are already implemented, so that you can make the most of your Keychain experience on mobile : - Login methods - Generic broadcasts - Post / Comment - Vote - Transfer (with or without encrypted memo) - Hive Engine Transfer - Power up / down - Delegations - Proposal votes - Witness vote / proxy - Encode / Decode message - Sign transaction / buffer The release was delayed by one day to add browser history management and url autocomplete features. Hope you will enjoy it! Some additional requests are still missing but more rarely used, and will be added soon. Additionally, the browser will be improved with favorites and multiple tabs handling. We will also add the possibility to whitelist some requests in the future, in order to mirror the behavior that you can find on the browser extension. ## Download the Apps [](https://apps.apple.com/us/app/hive-keychain/id1552190010) [](https://play.google.com/store/apps/details?id=com.mobilekeychain) 1. The Application is still in Beta. It has been tested extensively but it should not by any means be the only place you store your keys on. 2. To import accounts quickly from your Hive Keychain extension to your mobile App, use the QR Code scanner by pressing the QR code logo: On your extension, navigate to the menu (top right button), then to `Manage Accounts` and finally click on `Show QR Code`. ## Discord To communicate with us or become an Alpha tester, join our Discord by following this link : https://discord.gg/3EM6YfRrGv Or scanning this QR Code : ![image.png](https://files.peakd.com/file/peakd-hive/keychain/BRNgvm9y-image.png) #### Core Team @stoodkev : Lead Dev - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=stoodkev&amp;amp;approve=1) @nateaguila : UI/UX @yabapmatt : Founder - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=yabapmatt&amp;amp;approve=1) @aggroed : Founder - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=aggroed&amp;amp;approve=1) --- ### Support Hive Keychain development by voting for [our proposal](https://peakd.com/hive/@keychain/hive-keychain-development-proposal-2) on [PeakD](https://peakd.com/proposals/140) or with [HiveSigner](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5B140%5D&amp;amp;approve=true). *100% of payout is redirected to the DAO* See: Hive Keychain Mobile 1.1 : in-App browser by @keychain</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://files.peakd.com/file/peakd-hive/keychain/xnmVXGi6-social_keychain-for-hive.jpg" /><media:content medium="image" url="https://files.peakd.com/file/peakd-hive/keychain/xnmVXGi6-social_keychain-for-hive.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">9th update of 2021 on BlockTrades work on Hive software</title><link href="https://hivedocs.info/news/core/development/2021/04/26/9th-update-of-2021-on-blocktrades-work-on-hive-software.html" rel="alternate" type="text/html" title="9th update of 2021 on BlockTrades work on Hive software" /><published>2021-04-26T12:27:15-07:00</published><updated>2021-04-26T12:27:15-07:00</updated><id>https://hivedocs.info/news/core/development/2021/04/26/9th-update-of-2021-on-blocktrades-work-on-hive-software</id><content type="html" xml:base="https://hivedocs.info/news/core/development/2021/04/26/9th-update-of-2021-on-blocktrades-work-on-hive-software.html">&lt;div id=&quot;content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software&quot;&gt;Below is a list of Hive-related programming issues worked on by BlockTrades team during the last few weeks:

# Hived work (blockchain node software)
We finished implementing and testing the following hardfork 25 changes:

 [New operation and associated API calls to convert Hive→Hive dollars (HBD) as a means of improving upside pegging of Hive dollars](https://gitlab.syncad.com/hive/hive/-/merge_requests/191). For more information, see https://hive.blog/hive-102930/@blocktrades/proposed-hardfork-change-to-stabilize-hive-dollar-s-tracking-of-usd-value

 [Hive dollars must be stored in a savings account to earn interest](https://gitlab.syncad.com/hive/hive/-/merge_requests/201). For more information, see: https://hive.blog/hive-102930/@blocktrades/proposal-to-make-hbd-interest-payable-only-to-savings-accounts

[Completed testing and created examples demonstrating functioning of new curation reward rules](https://gitlab.syncad.com/hive/hive/-/merge_requests/204)

 New unit tests: https://gitlab.syncad.com/hive/hive/-/merge_requests/195

[Fixed small issue that caused vote expiration to happen one block later than it should](https://gitlab.syncad.com/hive/hive/-/merge_requests/212)

[Allow votes on posts after they have paid out (votes  once again allowed on posts older than 7 days)](https://gitlab.syncad.com/hive/hive/-/merge_requests/189)

We also reviewed @howo support for recurrent transfers in HF25 and expect to merge those changes in tomorrow.

## Other work on hived
[Simplified cmake build options for hived (eliminated various hived build configurations like LOW_MEMORY_NODE and CLEAR_VOTES that weren’t practically useful and mostly just caused confusion)](https://gitlab.syncad.com/hive/hive/-/merge_requests/196). 

[Removed support for COMMENT_CONTENT_SUPPORT](https://gitlab.syncad.com/hive/hive/-/merge_requests/1930)

 [Improved reporting and debugging capabilities of unit tests](https://gitlab.syncad.com/hive/hive/-/merge_requests/206)

 [Allow running a subset of the entire suite based on a filter](https://gitlab.syncad.com/hive/hive/-/merge_requests/209)

 [Updated get_config API call with new configuration variables](https://gitlab.syncad.com/hive/hive/-/merge_requests/192)


[--force-reply command-line option no longer also requires use of –replay option and it also automatically deletes the shared_memory file, eliminating that manual step](https://gitlab.syncad.com/hive/hive/-/merge_requests/190)

[Proposal ids are now reported by proposal-pay virtual operation](https://gitlab.syncad.com/hive/hive/-/merge_requests/202)

[Clear the memo key of hive.fund as requested by @smooth](https://gitlab.syncad.com/hive/hive/-/merge_requests/210)

[Fix the version of hived reported when SMTs not enabled](https://gitlab.syncad.com/hive/hive/-/merge_requests/207)

[Fix a problem with static builds and libreadline](https://gitlab.syncad.com/hive/hive/-/issues/143)

[Unify the version of C++ used when building hived and refactor cmake files so that it only requires a change in one place](https://gitlab.syncad.com/hive/hive/-/merge_requests/208). 

Currently we’re using C++14 for the hardfork. We tested with C++17 and found one bug, which we fixed, but decided to delay making C++17 the standard version for builds since we’re getting close to hardfork time. After the hardfork, we’ll likely move to C++17 or C++20 for future development.

# Hivemind (2nd layer applications + social media middleware)
[Fixes and improvement to community mute functionality](https://gitlab.syncad.com/hive/hivemind/-/merge_requests/490)

[Fixed pagination of bridge.list_community_roles](https://gitlab.syncad.com/hive/hivemind/-/merge_requests/491)

# Modular hivemind
We’re making solid progress on modular hivemind, especially with regard to fork resolution handling. It looks like we’ll be able to avoid the need for a C extension to postgres and can instead rely on a “SQL-only” solution using “shadow tables” to save and restore changes to the tables that store data that can be changed when hived switches to a different micro-fork.

# Condenser
We made several fixes to condenser and also reviewed some new features by @quochuy and @jpphotography.

# Upcoming work
## Hived code freeze and launch of testnet
We plan to merge in the remaining hived code changes (a few minor fixes + recurrent transfers support) tomorrow, then assist in launch of testnet on Wednesday. 

We’ll test for two weeks, then hopefully be ready to merge the release candidate into the master branch, at which point we’ll give exchanges at least 30 days notice to update. 

So if no problems, we can expect the hardfork in about six weeks from Wednesday.

## Test latest hivemind changes
We’ll be running a full sync of hivemind with the latest changes, then test real world performance in a production environment on api.hive.blog, followed by a production release to the API nodes next week if no problems are found.

## SQL Account history plugin for hived
We plan to complete the changes to the SQL account history plugin that pushes data to postgres (eliminating the need for hivemind to pull the data via RPC calls) in the new couple of days.

After the plugin changes are completed, we’ll run a simultaneous replay of hived with a full sync of hivemind to measure the speedup, and see if it matches our expected improvement in hivemind full sync time (we expect 2 days versus the current 4 days required).&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hive-content-renderer/dist/hive-content-renderer.min.js&quot;&gt;&lt;/script&gt; --&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
      // const renderer = new HiveContentRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@blocktrades&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/9th-update-of-2021-on-blocktrades-work-on-hive-software&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software').html();
      const outputElem = $('#content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software code {
    background: white;
  }
  #content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software a:hover {
    border-bottom: 0;
  }
  #content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software h1 {
    font-size: 2.2em;
  }
  #content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software header small {
    color: #999;
    font-size: 50%;
  }
  #content-blocktrades-9th-update-of-2021-on-blocktrades-work-on-hive-software img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/hive-139531/@blocktrades/9th-update-of-2021-on-blocktrades-work-on-hive-software&quot;&gt;9th update of 2021 on BlockTrades work on Hive software&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@blocktrades&quot;&gt;@blocktrades&lt;/a&gt;
&lt;/p&gt;</content><author><name>blocktrades</name></author><category term="news" /><category term="core" /><category term="development" /><summary type="html">Below is a list of Hive-related programming issues worked on by BlockTrades team during the last few weeks: # Hived work (blockchain node software) We finished implementing and testing the following hardfork 25 changes: [New operation and associated API calls to convert Hive→Hive dollars (HBD) as a means of improving upside pegging of Hive dollars](https://gitlab.syncad.com/hive/hive/-/merge_requests/191). For more information, see https://hive.blog/hive-102930/@blocktrades/proposed-hardfork-change-to-stabilize-hive-dollar-s-tracking-of-usd-value [Hive dollars must be stored in a savings account to earn interest](https://gitlab.syncad.com/hive/hive/-/merge_requests/201). For more information, see: https://hive.blog/hive-102930/@blocktrades/proposal-to-make-hbd-interest-payable-only-to-savings-accounts [Completed testing and created examples demonstrating functioning of new curation reward rules](https://gitlab.syncad.com/hive/hive/-/merge_requests/204) New unit tests: https://gitlab.syncad.com/hive/hive/-/merge_requests/195 [Fixed small issue that caused vote expiration to happen one block later than it should](https://gitlab.syncad.com/hive/hive/-/merge_requests/212) [Allow votes on posts after they have paid out (votes once again allowed on posts older than 7 days)](https://gitlab.syncad.com/hive/hive/-/merge_requests/189) We also reviewed @howo support for recurrent transfers in HF25 and expect to merge those changes in tomorrow. ## Other work on hived [Simplified cmake build options for hived (eliminated various hived build configurations like LOW_MEMORY_NODE and CLEAR_VOTES that weren’t practically useful and mostly just caused confusion)](https://gitlab.syncad.com/hive/hive/-/merge_requests/196). [Removed support for COMMENT_CONTENT_SUPPORT](https://gitlab.syncad.com/hive/hive/-/merge_requests/1930) [Improved reporting and debugging capabilities of unit tests](https://gitlab.syncad.com/hive/hive/-/merge_requests/206) [Allow running a subset of the entire suite based on a filter](https://gitlab.syncad.com/hive/hive/-/merge_requests/209) [Updated get_config API call with new configuration variables](https://gitlab.syncad.com/hive/hive/-/merge_requests/192) [--force-reply command-line option no longer also requires use of –replay option and it also automatically deletes the shared_memory file, eliminating that manual step](https://gitlab.syncad.com/hive/hive/-/merge_requests/190) [Proposal ids are now reported by proposal-pay virtual operation](https://gitlab.syncad.com/hive/hive/-/merge_requests/202) [Clear the memo key of hive.fund as requested by @smooth](https://gitlab.syncad.com/hive/hive/-/merge_requests/210) [Fix the version of hived reported when SMTs not enabled](https://gitlab.syncad.com/hive/hive/-/merge_requests/207) [Fix a problem with static builds and libreadline](https://gitlab.syncad.com/hive/hive/-/issues/143) [Unify the version of C++ used when building hived and refactor cmake files so that it only requires a change in one place](https://gitlab.syncad.com/hive/hive/-/merge_requests/208). Currently we’re using C++14 for the hardfork. We tested with C++17 and found one bug, which we fixed, but decided to delay making C++17 the standard version for builds since we’re getting close to hardfork time. After the hardfork, we’ll likely move to C++17 or C++20 for future development. # Hivemind (2nd layer applications + social media middleware) [Fixes and improvement to community mute functionality](https://gitlab.syncad.com/hive/hivemind/-/merge_requests/490) [Fixed pagination of bridge.list_community_roles](https://gitlab.syncad.com/hive/hivemind/-/merge_requests/491) # Modular hivemind We’re making solid progress on modular hivemind, especially with regard to fork resolution handling. It looks like we’ll be able to avoid the need for a C extension to postgres and can instead rely on a “SQL-only” solution using “shadow tables” to save and restore changes to the tables that store data that can be changed when hived switches to a different micro-fork. # Condenser We made several fixes to condenser and also reviewed some new features by @quochuy and @jpphotography. # Upcoming work ## Hived code freeze and launch of testnet We plan to merge in the remaining hived code changes (a few minor fixes + recurrent transfers support) tomorrow, then assist in launch of testnet on Wednesday. We’ll test for two weeks, then hopefully be ready to merge the release candidate into the master branch, at which point we’ll give exchanges at least 30 days notice to update. So if no problems, we can expect the hardfork in about six weeks from Wednesday. ## Test latest hivemind changes We’ll be running a full sync of hivemind with the latest changes, then test real world performance in a production environment on api.hive.blog, followed by a production release to the API nodes next week if no problems are found. ## SQL Account history plugin for hived We plan to complete the changes to the SQL account history plugin that pushes data to postgres (eliminating the need for hivemind to pull the data via RPC calls) in the new couple of days. After the plugin changes are completed, we’ll run a simultaneous replay of hived with a full sync of hivemind to measure the speedup, and see if it matches our expected improvement in hivemind full sync time (we expect 2 days versus the current 4 days required). See: 9th update of 2021 on BlockTrades work on Hive software by @blocktrades</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://hivedocs.info/assets/images/favicon.png" /><media:content medium="image" url="https://hivedocs.info/assets/images/favicon.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Mutelists, Blacklists: What’s the difference? + FAQ</title><link href="https://hivedocs.info/howto/community/blacklists/2021/04/24/mutelists-blacklists-what-s-the-difference-faq.html" rel="alternate" type="text/html" title="Mutelists, Blacklists: What’s the difference? + FAQ" /><published>2021-04-24T14:42:30-07:00</published><updated>2021-04-24T14:42:30-07:00</updated><id>https://hivedocs.info/howto/community/blacklists/2021/04/24/mutelists-blacklists-what-s-the-difference-faq</id><content type="html" xml:base="https://hivedocs.info/howto/community/blacklists/2021/04/24/mutelists-blacklists-what-s-the-difference-faq.html">&lt;div id=&quot;content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq&quot;&gt;![image.png](https://images.hive.blog/DQmQ48rPArkkRHK9bTYHhYkcrQfWicUS4ZbbEw4RW8GycTx/image.png)
&lt;sup&gt;[Source of Image](https://unsplash.com/photos/-1_RZL8BGBM)&lt;/sup&gt;

There has been much confusion about the various lists available on Hive.  This post is meant to answer some of your questions to that regard. Please feel free to ask more questions as you see fit. 

# Decentralized blacklists and mutelists
These are on-chain lists based on the 'follow' function, which allows you to interact by either choosing to view in prominence or to hide from view the posts of another account. 

Any user can create a list or subscribe to an existing list that someone else created. When subscribed or created, the list will govern which accounts the user will not see. This is currently widely used for phishing accounts. 

- List is for limiting interaction with accounts on it
- Users and projects are able to create a coherent list of undesirable accounts (in their opinion)
- Subscribers can limit what they themselves can see and keep their experienced focused
- Lists mainly affect the frontend user experience 
- Lists do not have any effect on reward distribution

# Spaminator blacklist
The Spaminator blacklist is for accounts that are involved in **exploitation** on Hive. This is usually directly related to the exploitation of the reward pool. The Spaminator bot works off a ledger of account names, the on-chain interactions of which it logs into its database as it streams the blockchain. 

- A hands-off bot written in Python 
- 76955 accounts on it right now
- 1012 different account groups (grouped for classification purposes) of which many are different botnets
- Very, very few users on it are unique individuals; most are exploitation accounts
- No appeal timer, prompt removal is possible
- No maximum amount of strikes for unique individuals

Only active accounts are logged and are given a warning downvote. Where they are a unique individual, they will come and reply in some way. The unique individuals are usually victims of hacking/phishing or of other scams against them. They are warned through the bot and are helped to recover. 


# Hivewatchers Banlist
What is commonly referred to as the 'Hivewatchers blacklist' is actually a 'banlist'. We are not sure on how this name originally came about as we inherited the project and it's list but that's its official name. 

Hivewatchers is focused on **fraud**. Fraud can be defined as ID theft/deception, plagiarism (of all types), and generally fraudulent activities of various types. 

- Not part of Spaminator
- Used to educate users and give them a chance to be removed
- Only for unique individual accounts 
- Not used for botnets unless the botnet is based on deception
- Has a timer that gets activated for removal after an appeal starts
- A maximum two strikes and no more appeals are possible for unique individuals

# Mutelist vs Spaminator vs Hivewatchers

Because of the words 'list' and 'blacklist' there are many points of confusion around their differences and similarities. 

Stored centrally | Mutelist | Spaminator | Hivewatchers |
-|-|-|-|
Stored centrally in database | No | Yes | Yes |
Created by specific entity | Yes | Yes | Yes |
Limits interaction | Yes | No | No |
Frontend-focused | Yes | No | Yes |
Mandatory for users | No | No | No |
Automatically restores rewards | No | Yes | No |
Downvotes to warn | No | Yes | Yes |
Upvotes to warn | No | No | No |
Scope is set by default | No | Yes | Yes |
Hides post | Yes | No | No |
Is a hands-off bot | No | Yes | Both |
Is a feature | Yes | No | No |
On-chain controls | Yes | No | Yes |

# Outdated Terminology: 'Spam' 
The word 'Spam' is being phased out because of several issues:
- Too overused, vague and unclear
- Commonly used to mislabel and thus downgrade major threats such as phishing that require urgency
- Is often found attributed to everything irrespective of scope by users
- Is used to label low-effort content, shorter content, content that is disliked by the user, content in languages that don't always properly display, etc. 

The most predominant issue is phishing. When phishing becomes mislabeled as spam, the person being warned to either seek help recovering their account or to not click on a malicious link does not understand the severity of the matter. All phishing should always be referred to as 'phishing'. 

The word 'spam' is actively being removed from Hivewatchers comments and we are currently in transition to that regard. 

# Hive.Blog Mutelist
This list is used for phishing/hacked accounts predominantly, with a few accounts spreading malware thrown in. It is a great list to follow by default and is also replicated in the [Plenty of Phish repository](https://github.com/gryter/plentyofphish/blob/master/phishing.txt), on Spaminator and several other places. Once an account is recovered and is safe, it is removed from the list. 

This is one example of a Mutelist being used effectively and for a concrete purpose that warrants subscription and benefits all users irrespective of their beliefs, outlook, or anything else. It is strongly recommended that everyone takes all possible measures to prevent supporting hackers or falling prey to them. 

![image.png](https://images.hive.blog/DQmYthGMZLHCnNtUnD1yphVpjJxPYq47Jrw2Pdw6e4yK7K8/image.png)

# FAQ

**So why can't Spaminator just use a decentralized list? I still don't understand.**
Spaminator is a bot and needs its data in a local ledger (on its servers) to function. It was made to purely read the chain (it streams the blocks) and constantly querying on-chain lists would put a huge load on the endpoints quite unnecessarily. Additionally, it has about 76k account on it, many of which are massive botnets and not individual users. They are listed in their respective categories and managed through our servers. Adding them to one massive on-chain list is just not practical. 

**Will there be a Hivewatchers decentralized on-chain Mutelist or Blacklist?**
Yes. The Hivewatchers list is quite short in comparison to Spaminator and is meant to focus on fraud, as we already discussed. We'll have an announcement to that regard. We will likely end up with two lists on Hivewatchers; one for accounts that are permanently on and one for those that have a chance to appeal or are appealing. 

**Do you recommend I follow the Hivewatchers list and set my account to automatically downvote everything on it?**
We ask that you keep yourself safe. Some of the accounts we deal with belong to individuals who are extremely dangerous, are known for targeted harassment, death threats, stalking, doxxing, and other similar activities. Use your personal discretion.

**Are all accounts granted appeals?**
No. ID thieves, exploitation ring operators, hackers/phishers, or systemic repeat fraudsters are not granted further consideration. There is a limit to our 'revolving door'. Repeatedly having the same accounts mislead the community in their appeals is damaging to Hive. 

**My account is both on Hivewatchers and Spaminator. Why?**
In cases where there is fraud coupled with exploitation of the blockchain and its reward mechanism, the account may fit both scopes. If the account is part of a botnet or an organized ring, then it will likely be on both.

**Is short-form content allowed on Hive?**
All content is treated the same way: It should be at least 50% original to have some value and anything taken from the internet should be clearly cited. Short-form content doesn't mean that suddenly there is free reign to copy/paste other people's work and make money off it. It is never acceptable to steal from others for personal profit.

**I tried to use the on-chain Mutelist/Blacklist feature and I discovered bugs or issues. What do I do?**
The decentralized list feature is still being developed. Please submit your bugs/issues to https://gitlab.syncad.com/hive/condenser

**Should I report hacking/phishing, even if it's not on chain but still related to the Hive ecosystem in general?**
Yes. Please contact @guiltyparties and outline what happened. Even if your dapp got hacked please advise. 

**I hate Hivewatchers and Spaminator and want to disrupt all activities, so I'm upvoting everything Spaminator downvotes.**
If you've decided that scammers should be rewarded, we ask you to still please ensure that you are not supporting those who hack and phish other people's accounts. Just reach out to @guiltyparties on Openhive.chat or Discord and I'll set you up with the appropriate lists to exclude from your 'curation'.  It's not an all or nothing deal. If you are supporting phishing you will be treated the same as the hackers themselves.&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hive-content-renderer/dist/hive-content-renderer.min.js&quot;&gt;&lt;/script&gt; --&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
      // const renderer = new HiveContentRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@hivewatchers&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/mutelists-blacklists-what-s-the-difference-faq&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq').html();
      const outputElem = $('#content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq code {
    background: white;
  }
  #content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq a:hover {
    border-bottom: 0;
  }
  #content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq h1 {
    font-size: 2.2em;
  }
  #content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq header small {
    color: #999;
    font-size: 50%;
  }
  #content-hivewatchers-mutelists-blacklists-what-s-the-difference-faq img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/hivewatchers/@hivewatchers/mutelists-blacklists-what-s-the-difference-faq&quot;&gt;Mutelists, Blacklists: What's the difference? + FAQ&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@hivewatchers&quot;&gt;@hivewatchers&lt;/a&gt;
&lt;/p&gt;</content><author><name>hivewatchers</name></author><category term="howto" /><category term="community" /><category term="blacklists" /><summary type="html">![image.png](https://images.hive.blog/DQmQ48rPArkkRHK9bTYHhYkcrQfWicUS4ZbbEw4RW8GycTx/image.png) [Source of Image](https://unsplash.com/photos/-1_RZL8BGBM) There has been much confusion about the various lists available on Hive. This post is meant to answer some of your questions to that regard. Please feel free to ask more questions as you see fit. # Decentralized blacklists and mutelists These are on-chain lists based on the 'follow' function, which allows you to interact by either choosing to view in prominence or to hide from view the posts of another account. Any user can create a list or subscribe to an existing list that someone else created. When subscribed or created, the list will govern which accounts the user will not see. This is currently widely used for phishing accounts. - List is for limiting interaction with accounts on it - Users and projects are able to create a coherent list of undesirable accounts (in their opinion) - Subscribers can limit what they themselves can see and keep their experienced focused - Lists mainly affect the frontend user experience - Lists do not have any effect on reward distribution # Spaminator blacklist The Spaminator blacklist is for accounts that are involved in **exploitation** on Hive. This is usually directly related to the exploitation of the reward pool. The Spaminator bot works off a ledger of account names, the on-chain interactions of which it logs into its database as it streams the blockchain. - A hands-off bot written in Python - 76955 accounts on it right now - 1012 different account groups (grouped for classification purposes) of which many are different botnets - Very, very few users on it are unique individuals; most are exploitation accounts - No appeal timer, prompt removal is possible - No maximum amount of strikes for unique individuals Only active accounts are logged and are given a warning downvote. Where they are a unique individual, they will come and reply in some way. The unique individuals are usually victims of hacking/phishing or of other scams against them. They are warned through the bot and are helped to recover. # Hivewatchers Banlist What is commonly referred to as the 'Hivewatchers blacklist' is actually a 'banlist'. We are not sure on how this name originally came about as we inherited the project and it's list but that's its official name. Hivewatchers is focused on **fraud**. Fraud can be defined as ID theft/deception, plagiarism (of all types), and generally fraudulent activities of various types. - Not part of Spaminator - Used to educate users and give them a chance to be removed - Only for unique individual accounts - Not used for botnets unless the botnet is based on deception - Has a timer that gets activated for removal after an appeal starts - A maximum two strikes and no more appeals are possible for unique individuals # Mutelist vs Spaminator vs Hivewatchers Because of the words 'list' and 'blacklist' there are many points of confusion around their differences and similarities. Stored centrally | Mutelist | Spaminator | Hivewatchers | -|-|-|-| Stored centrally in database | No | Yes | Yes | Created by specific entity | Yes | Yes | Yes | Limits interaction | Yes | No | No | Frontend-focused | Yes | No | Yes | Mandatory for users | No | No | No | Automatically restores rewards | No | Yes | No | Downvotes to warn | No | Yes | Yes | Upvotes to warn | No | No | No | Scope is set by default | No | Yes | Yes | Hides post | Yes | No | No | Is a hands-off bot | No | Yes | Both | Is a feature | Yes | No | No | On-chain controls | Yes | No | Yes | # Outdated Terminology: 'Spam' The word 'Spam' is being phased out because of several issues: - Too overused, vague and unclear - Commonly used to mislabel and thus downgrade major threats such as phishing that require urgency - Is often found attributed to everything irrespective of scope by users - Is used to label low-effort content, shorter content, content that is disliked by the user, content in languages that don't always properly display, etc. The most predominant issue is phishing. When phishing becomes mislabeled as spam, the person being warned to either seek help recovering their account or to not click on a malicious link does not understand the severity of the matter. All phishing should always be referred to as 'phishing'. The word 'spam' is actively being removed from Hivewatchers comments and we are currently in transition to that regard. # Hive.Blog Mutelist This list is used for phishing/hacked accounts predominantly, with a few accounts spreading malware thrown in. It is a great list to follow by default and is also replicated in the [Plenty of Phish repository](https://github.com/gryter/plentyofphish/blob/master/phishing.txt), on Spaminator and several other places. Once an account is recovered and is safe, it is removed from the list. This is one example of a Mutelist being used effectively and for a concrete purpose that warrants subscription and benefits all users irrespective of their beliefs, outlook, or anything else. It is strongly recommended that everyone takes all possible measures to prevent supporting hackers or falling prey to them. ![image.png](https://images.hive.blog/DQmYthGMZLHCnNtUnD1yphVpjJxPYq47Jrw2Pdw6e4yK7K8/image.png) # FAQ **So why can't Spaminator just use a decentralized list? I still don't understand.** Spaminator is a bot and needs its data in a local ledger (on its servers) to function. It was made to purely read the chain (it streams the blocks) and constantly querying on-chain lists would put a huge load on the endpoints quite unnecessarily. Additionally, it has about 76k account on it, many of which are massive botnets and not individual users. They are listed in their respective categories and managed through our servers. Adding them to one massive on-chain list is just not practical. **Will there be a Hivewatchers decentralized on-chain Mutelist or Blacklist?** Yes. The Hivewatchers list is quite short in comparison to Spaminator and is meant to focus on fraud, as we already discussed. We'll have an announcement to that regard. We will likely end up with two lists on Hivewatchers; one for accounts that are permanently on and one for those that have a chance to appeal or are appealing. **Do you recommend I follow the Hivewatchers list and set my account to automatically downvote everything on it?** We ask that you keep yourself safe. Some of the accounts we deal with belong to individuals who are extremely dangerous, are known for targeted harassment, death threats, stalking, doxxing, and other similar activities. Use your personal discretion. **Are all accounts granted appeals?** No. ID thieves, exploitation ring operators, hackers/phishers, or systemic repeat fraudsters are not granted further consideration. There is a limit to our 'revolving door'. Repeatedly having the same accounts mislead the community in their appeals is damaging to Hive. **My account is both on Hivewatchers and Spaminator. Why?** In cases where there is fraud coupled with exploitation of the blockchain and its reward mechanism, the account may fit both scopes. If the account is part of a botnet or an organized ring, then it will likely be on both. **Is short-form content allowed on Hive?** All content is treated the same way: It should be at least 50% original to have some value and anything taken from the internet should be clearly cited. Short-form content doesn't mean that suddenly there is free reign to copy/paste other people's work and make money off it. It is never acceptable to steal from others for personal profit. **I tried to use the on-chain Mutelist/Blacklist feature and I discovered bugs or issues. What do I do?** The decentralized list feature is still being developed. Please submit your bugs/issues to https://gitlab.syncad.com/hive/condenser **Should I report hacking/phishing, even if it's not on chain but still related to the Hive ecosystem in general?** Yes. Please contact @guiltyparties and outline what happened. Even if your dapp got hacked please advise. **I hate Hivewatchers and Spaminator and want to disrupt all activities, so I'm upvoting everything Spaminator downvotes.** If you've decided that scammers should be rewarded, we ask you to still please ensure that you are not supporting those who hack and phish other people's accounts. Just reach out to @guiltyparties on Openhive.chat or Discord and I'll set you up with the appropriate lists to exclude from your 'curation'. It's not an all or nothing deal. If you are supporting phishing you will be treated the same as the hackers themselves. See: Mutelists, Blacklists: What's the difference? + FAQ by @hivewatchers</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://images.hive.blog/DQmQ48rPArkkRHK9bTYHhYkcrQfWicUS4ZbbEw4RW8GycTx/image.png" /><media:content medium="image" url="https://images.hive.blog/DQmQ48rPArkkRHK9bTYHhYkcrQfWicUS4ZbbEw4RW8GycTx/image.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Some cloudflare stats for hive.blog</title><link href="https://hivedocs.info/news/projects/hive/2021/04/24/some-cloudflare-stats-for-hive-blog.html" rel="alternate" type="text/html" title="Some cloudflare stats for hive.blog" /><published>2021-04-24T14:20:48-07:00</published><updated>2021-04-24T14:20:48-07:00</updated><id>https://hivedocs.info/news/projects/hive/2021/04/24/some-cloudflare-stats-for-hive-blog</id><content type="html" xml:base="https://hivedocs.info/news/projects/hive/2021/04/24/some-cloudflare-stats-for-hive-blog.html">&lt;div id=&quot;content-blocktrades-some-cloudflare-stats-for-hive-blog&quot;&gt;I don't usually bother to analyze web traffic on hive.blog, since I'm more focused on the technical development of Hive rather than Hive's success at marketing itself. Still, cloudflare send me a  monthly email that shows the amount internet traffic on the site, including some geographical breakdown of that data. So I've long known that the US has consistently been the largest source of our web traffic, ever since the site first launched.

The inspiration of this post was a discussion I was having with @logic. He had found a post that was attempting to do an analysis of hive.blog's traffic based on organic search data (I think, I didn't read too closely) and it made a few incorrect conclusions about traffic on the site, so I decided to publish some of the data we have from cloudflare, after that discussion.

Hive.blog only has the data that cloudflare provides for free, so I can only access the last 30 days worth of traffic data, plus I have those monthly emails which allows me to get a little bit of historical data beyond the past 30 days. So I can only present a few graphs that may be of interest.

# US web traffic for Hive.blog

This graph of US traffic was created by taking US traffic data from the emails (I deleted or moved the email from February apparently, so that's why there's a missing bar in the graph):

![image.png](https://images.hive.blog/DQmQtrVBAZmGZUGzBASQafVHsdXs6xh67ELsoWPqoCq2emC/image.png)
I'm not really sure why there was such a huge spike of traffic from the US during the month of May (120M), but there may not have been many other sites able to browse Hive posts during that month, so it may have born the brunt of Hive user traffic during that month. My best guess is that peakd, ecency, etc took away a lot of the traffic in  the next month, once everyone could return to using their preferred post browser.

The graph shows there's been a steady growth of traffic from October of last year until now (2x growth of US traffic over that period), which is nice, especially since we know a lot of other web sites are getting more traction nowadays as post browsers and therefore competing for total Hive traffic. So overall, this looks pretty promising for overall growth of viewership for Hive social media posts.

# Heatmap for hive.blog's worldwide traffic
Here's a heatmap of global traffic to hive.blog, and a numeric breakdown of traffic from the top 5 countries  in the last 30 days by country:


![image.png](https://images.hive.blog/DQmb9vvoBzQrQJPutwb5hnquU7KJHdRNCidggBkAVKDapVp/image.png)

# A few more from the heatmap

I also manually looked up a few other countries on the heatmap (by mousing over them) and roughly sorted the results. Now, this was a fairly tedious process and there's a lot of countries, so please don't be upset if I missed your country.
* Brazil 8.5M
* Canada 7.4M
* Turkey 7.4M
* Indonesia 6.8M
* Spain 5.8M
* India 5.5M
* France 5.2M
* Nigeria 5M
* Ukraine 4.9M
* Italy 4.6M
* Argentina 4.2M
* Bangladesh 4M
* Poland 3.8M
* Russia 3.4M
* Thailand 3.1M
* Australia 3M
* Portugal 2.9M
* Mexico 2.9M
* Netherlands 2.8M
* Pakistan 2.4M
* Columbia 2.2M
* Vietnam 2M
* S. Korea 1.8M
* Romania 1.7M
* Bulgaria 1.5M
* Serbia 1.5M
* Malaysia 1.4M
* South Africa 1.4M
* Greece 1.5M
* Japan 1.1M
* Austria 1.2M
* Switzerland 1.2M
* New Zealand 1.2M
* Belgium 1M
* Peru 1M
* Chile 1M
* Czech 0.9M
* Sweden 1M
* Norway 0.9M
* Finland 0.8M
* Ireland 0.8M
* Belarus 0.7M
* Croatia 0.7M
* Ecuador 0.7M
* Taiwan 0.5M
* Estonia 0.5M
* Macedonia 0.5M
* Slovenia 0.5M
* Denmark 0.4M
* Slovakia 0.4M
* Hungary 0.4M
* Suriname 0.4M
* Israel 0.3M
* Lithuania 0.3M
* Uruguay 0.3M
* Paraguay 0.3M
* Panama 0.3M
* Costa Rica 0.3M
* Saudi Arabia 0.2M
* Iran 0.2M
* Egypt 0.2M
* Morocco 0.2M
* Kazakhstan
* Algeria 0.2M
* Dominican Republic 0.2M
* Latvia 0.2M
* Sri Lanka 0.2M
* Guatemala 0.2M
* Bolivia 0.2M
* Nepal 0.2M
* Iceland 0.1M
* El Salvador 0.1M
* Kenya 0.1M
* Cuba 0.1M
* China 0.1M
* Bosnia/Herz: 0.1M
* Moldova 0.1M
* Azerbaijan 0.1M
* Oman 0.1M&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hive-content-renderer/dist/hive-content-renderer.min.js&quot;&gt;&lt;/script&gt; --&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
      // const renderer = new HiveContentRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@blocktrades&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/some-cloudflare-stats-for-hive-blog&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-blocktrades-some-cloudflare-stats-for-hive-blog').html();
      const outputElem = $('#content-blocktrades-some-cloudflare-stats-for-hive-blog');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-blocktrades-some-cloudflare-stats-for-hive-blog {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-blocktrades-some-cloudflare-stats-for-hive-blog code {
    background: white;
  }
  #content-blocktrades-some-cloudflare-stats-for-hive-blog a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-blocktrades-some-cloudflare-stats-for-hive-blog a:hover {
    border-bottom: 0;
  }
  #content-blocktrades-some-cloudflare-stats-for-hive-blog h1 {
    font-size: 2.2em;
  }
  #content-blocktrades-some-cloudflare-stats-for-hive-blog h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-blocktrades-some-cloudflare-stats-for-hive-blog header small {
    color: #999;
    font-size: 50%;
  }
  #content-blocktrades-some-cloudflare-stats-for-hive-blog img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/hive-133987/@blocktrades/some-cloudflare-stats-for-hive-blog&quot;&gt;Some cloudflare stats for hive.blog&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@blocktrades&quot;&gt;@blocktrades&lt;/a&gt;
&lt;/p&gt;</content><author><name>blocktrades</name></author><category term="news" /><category term="projects" /><category term="hive" /><summary type="html">I don't usually bother to analyze web traffic on hive.blog, since I'm more focused on the technical development of Hive rather than Hive's success at marketing itself. Still, cloudflare send me a monthly email that shows the amount internet traffic on the site, including some geographical breakdown of that data. So I've long known that the US has consistently been the largest source of our web traffic, ever since the site first launched. The inspiration of this post was a discussion I was having with @logic. He had found a post that was attempting to do an analysis of hive.blog's traffic based on organic search data (I think, I didn't read too closely) and it made a few incorrect conclusions about traffic on the site, so I decided to publish some of the data we have from cloudflare, after that discussion. Hive.blog only has the data that cloudflare provides for free, so I can only access the last 30 days worth of traffic data, plus I have those monthly emails which allows me to get a little bit of historical data beyond the past 30 days. So I can only present a few graphs that may be of interest. # US web traffic for Hive.blog This graph of US traffic was created by taking US traffic data from the emails (I deleted or moved the email from February apparently, so that's why there's a missing bar in the graph): ![image.png](https://images.hive.blog/DQmQtrVBAZmGZUGzBASQafVHsdXs6xh67ELsoWPqoCq2emC/image.png) I'm not really sure why there was such a huge spike of traffic from the US during the month of May (120M), but there may not have been many other sites able to browse Hive posts during that month, so it may have born the brunt of Hive user traffic during that month. My best guess is that peakd, ecency, etc took away a lot of the traffic in the next month, once everyone could return to using their preferred post browser. The graph shows there's been a steady growth of traffic from October of last year until now (2x growth of US traffic over that period), which is nice, especially since we know a lot of other web sites are getting more traction nowadays as post browsers and therefore competing for total Hive traffic. So overall, this looks pretty promising for overall growth of viewership for Hive social media posts. # Heatmap for hive.blog's worldwide traffic Here's a heatmap of global traffic to hive.blog, and a numeric breakdown of traffic from the top 5 countries in the last 30 days by country: ![image.png](https://images.hive.blog/DQmb9vvoBzQrQJPutwb5hnquU7KJHdRNCidggBkAVKDapVp/image.png) # A few more from the heatmap I also manually looked up a few other countries on the heatmap (by mousing over them) and roughly sorted the results. Now, this was a fairly tedious process and there's a lot of countries, so please don't be upset if I missed your country. * Brazil 8.5M * Canada 7.4M * Turkey 7.4M * Indonesia 6.8M * Spain 5.8M * India 5.5M * France 5.2M * Nigeria 5M * Ukraine 4.9M * Italy 4.6M * Argentina 4.2M * Bangladesh 4M * Poland 3.8M * Russia 3.4M * Thailand 3.1M * Australia 3M * Portugal 2.9M * Mexico 2.9M * Netherlands 2.8M * Pakistan 2.4M * Columbia 2.2M * Vietnam 2M * S. Korea 1.8M * Romania 1.7M * Bulgaria 1.5M * Serbia 1.5M * Malaysia 1.4M * South Africa 1.4M * Greece 1.5M * Japan 1.1M * Austria 1.2M * Switzerland 1.2M * New Zealand 1.2M * Belgium 1M * Peru 1M * Chile 1M * Czech 0.9M * Sweden 1M * Norway 0.9M * Finland 0.8M * Ireland 0.8M * Belarus 0.7M * Croatia 0.7M * Ecuador 0.7M * Taiwan 0.5M * Estonia 0.5M * Macedonia 0.5M * Slovenia 0.5M * Denmark 0.4M * Slovakia 0.4M * Hungary 0.4M * Suriname 0.4M * Israel 0.3M * Lithuania 0.3M * Uruguay 0.3M * Paraguay 0.3M * Panama 0.3M * Costa Rica 0.3M * Saudi Arabia 0.2M * Iran 0.2M * Egypt 0.2M * Morocco 0.2M * Kazakhstan * Algeria 0.2M * Dominican Republic 0.2M * Latvia 0.2M * Sri Lanka 0.2M * Guatemala 0.2M * Bolivia 0.2M * Nepal 0.2M * Iceland 0.1M * El Salvador 0.1M * Kenya 0.1M * Cuba 0.1M * China 0.1M * Bosnia/Herz: 0.1M * Moldova 0.1M * Azerbaijan 0.1M * Oman 0.1M See: Some cloudflare stats for hive.blog by @blocktrades</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://images.hive.blog/DQmQtrVBAZmGZUGzBASQafVHsdXs6xh67ELsoWPqoCq2emC/image.png" /><media:content medium="image" url="https://images.hive.blog/DQmQtrVBAZmGZUGzBASQafVHsdXs6xh67ELsoWPqoCq2emC/image.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Ruby Client for Hive: hive-ruby-1.0.3</title><link href="https://hivedocs.info/news/ruby/2021/04/22/ruby-client-for-hive-hive-ruby-103.html" rel="alternate" type="text/html" title="Ruby Client for Hive: hive-ruby-1.0.3" /><published>2021-04-22T22:05:09-07:00</published><updated>2021-04-22T22:05:09-07:00</updated><id>https://hivedocs.info/news/ruby/2021/04/22/ruby-client-for-hive-hive-ruby-103</id><content type="html" xml:base="https://hivedocs.info/news/ruby/2021/04/22/ruby-client-for-hive-hive-ruby-103.html">&lt;div id=&quot;content-inertia-ruby-client-for-hive-hive-ruby-103&quot;&gt;&lt;div class=&quot;pull-right&quot;&gt;
  &lt;img src=&quot;https://files.peakd.com/file/peakd-hive/inertia/aJnQFjOw-logo-128.png&quot; /&gt;
&lt;/div&gt;

This is a version bump and should not adversely affect existing applications that use the `hive-ruby` gem.  Changes are focused on performance improvements to `Hive::Stream` subroutines.

The main change is that we no longer have to rely on `json-rpc-batch` to stream blocks.  Prior to this change, if the API node supported batched requests, it would ask for up to 50 blocks using [this published standard](https://www.jsonrpc.org/specification#batch).

But not all API endpoints supported the standard.  In HF24, we got the [`block_api.get_block_range`](https://developers.hive.io/apidefinitions/#block_api.get_block_range) method.  And although not all endpoints support this method, it's much more supported than `json-rpc-batch`.

Hive Ruby will try whatever the endpoint will provide, starting with `get_block_range`, then `json-rpc-batch`, and then just fall back on non-batched requests.

In addition to this new method, if you area streaming virtual operations, Hive Ruby will now use [`account_history_api.enum_virtual_ops`](https://developers.hive.io/apidefinitions/#account_history_api.enum_virtual_ops) (if supported).  This will improve performance and reliability, even when streaming virtual operations from the head block.

See rev.: [94142bc](
https://gitlab.syncad.com/hive/hive-ruby/-/commit/94142bc9b21a662ce8f467c60f1e039a7e62d832)

To update your application:

```bash
bundle update hive-ruby
```

See previous `hive-ruby` posts: [peakd.com/c/hive-139531/search?q=hive-ruby](https://peakd.com/c/hive-139531/search?q=hive-ruby)&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hive-content-renderer/dist/hive-content-renderer.min.js&quot;&gt;&lt;/script&gt; --&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
      // const renderer = new HiveContentRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@inertia&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/ruby-client-for-hive-hive-ruby-103&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-inertia-ruby-client-for-hive-hive-ruby-103').html();
      const outputElem = $('#content-inertia-ruby-client-for-hive-hive-ruby-103');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-inertia-ruby-client-for-hive-hive-ruby-103 {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-inertia-ruby-client-for-hive-hive-ruby-103 code {
    background: white;
  }
  #content-inertia-ruby-client-for-hive-hive-ruby-103 a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-inertia-ruby-client-for-hive-hive-ruby-103 a:hover {
    border-bottom: 0;
  }
  #content-inertia-ruby-client-for-hive-hive-ruby-103 h1 {
    font-size: 2.2em;
  }
  #content-inertia-ruby-client-for-hive-hive-ruby-103 h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-inertia-ruby-client-for-hive-hive-ruby-103 header small {
    color: #999;
    font-size: 50%;
  }
  #content-inertia-ruby-client-for-hive-hive-ruby-103 img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://peakd.com/hive-139531/@inertia/ruby-client-for-hive-hive-ruby-103&quot;&gt;Ruby Client for Hive: hive-ruby-1.0.3&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@inertia&quot;&gt;@inertia&lt;/a&gt;
&lt;/p&gt;</content><author><name>inertia</name></author><category term="news" /><category term="ruby" /><summary type="html">This is a version bump and should not adversely affect existing applications that use the `hive-ruby` gem. Changes are focused on performance improvements to `Hive::Stream` subroutines. The main change is that we no longer have to rely on `json-rpc-batch` to stream blocks. Prior to this change, if the API node supported batched requests, it would ask for up to 50 blocks using [this published standard](https://www.jsonrpc.org/specification#batch). But not all API endpoints supported the standard. In HF24, we got the [`block_api.get_block_range`](https://developers.hive.io/apidefinitions/#block_api.get_block_range) method. And although not all endpoints support this method, it's much more supported than `json-rpc-batch`. Hive Ruby will try whatever the endpoint will provide, starting with `get_block_range`, then `json-rpc-batch`, and then just fall back on non-batched requests. In addition to this new method, if you area streaming virtual operations, Hive Ruby will now use [`account_history_api.enum_virtual_ops`](https://developers.hive.io/apidefinitions/#account_history_api.enum_virtual_ops) (if supported). This will improve performance and reliability, even when streaming virtual operations from the head block. See rev.: [94142bc]( https://gitlab.syncad.com/hive/hive-ruby/-/commit/94142bc9b21a662ce8f467c60f1e039a7e62d832) To update your application: ```bash bundle update hive-ruby ``` See previous `hive-ruby` posts: [peakd.com/c/hive-139531/search?q=hive-ruby](https://peakd.com/c/hive-139531/search?q=hive-ruby) See: Ruby Client for Hive: hive-ruby-1.0.3 by @inertia</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://files.peakd.com/file/peakd-hive/inertia/aJnQFjOw-logo-128.png" /><media:content medium="image" url="https://files.peakd.com/file/peakd-hive/inertia/aJnQFjOw-logo-128.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">My new contributions to the Hive Condenser and Wallet apps.</title><link href="https://hivedocs.info/news/nodejs/condenser/2021/04/22/6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps.html" rel="alternate" type="text/html" title="My new contributions to the Hive Condenser and Wallet apps." /><published>2021-04-22T05:59:18-07:00</published><updated>2021-04-22T05:59:18-07:00</updated><id>https://hivedocs.info/news/nodejs/condenser/2021/04/22/6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps</id><content type="html" xml:base="https://hivedocs.info/news/nodejs/condenser/2021/04/22/6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps.html">&lt;div id=&quot;content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps&quot;&gt;## Context
I have been involved (voluntarily) with the development of the Condenser &amp;amp; Wallet apps (that are powering https://hive.blog and https://wallet.hive.blog) for quite a while now. There are other great frontends to Hive out there such as https://peakd.com and https://ecency.com but I have always been more or less faithful with the Condenser.

This is a regular report on my new contributions. Some of the new work below might still be in test and not yet deployed.

## Add highlight syntax to code blocks in blog posts
There was [a request for syntax highlighting](https://gitlab.syncad.com/hive/condenser/-/issues/115) on posts. We indeed have some developers sharing code on the platform. So I tested integrating PrismJS and HighlightJS. I picked HighlightJS due to the way it works nicely with the Condenser.

However, there were some concerns that HighlightJS package is 270KB+ which might be a problem for mobile phone users on a slow bandwidth. So this change might not get approved for deployment to production. See my next contribution below instead.

![Syntax Highlighter](https://gitlab.syncad.com/hive/condenser/uploads/f5417cdefb5d92bdca036ab9c1d83992/Screen_Shot_2021-04-15_at_2.47.54_pm.jpg)

Merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/234

## Supporting GitHub's GIST embeds
@good-karma suggested that instead of highlighting syntax, we could simply add support for [GIST](http://gist.github.com/) embedded views. [GIST is a tool allowing you to share code snippets or data excerpts](http://gist.github.com/). It also has syntax highlighting so integrating it to the Condenser is lightweight.

There is one downside to the method though: old posts not using GIST won't have their code highlighted.

![GitHub GIST embeds](https://gitlab.syncad.com/hive/condenser/uploads/45a0e2fb10e2f634c871cfdedd2c5e6e/Screen_Shot_2021-04-17_at_9.19.56_pm.jpg)

Merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/238

Thank you @mahdiyari for helping with testing

## Display votes value breakdown
Aren't you sometimes curious as to what is the $ contribution of a vote on your post? This little change adds vote value to the voter list of a post.

![Votes value breakdown](https://gitlab.syncad.com/hive/condenser/uploads/b0cb8b7e54df71129624613193e8411e/Screen_Shot_2021-04-22_at_10.34.52_pm.jpg)

Merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/242

---

**Vote for my witness**
[![Support @quochuy Witness.jpg](https://images.hive.blog/DQmecYTZemY8SwU6rrg7awhpNRBsehUp7ivk9RGyZsUUpVw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1)
On Hive, Witnesses are playing the important role of providing a performant and safe network for all of us. You have the power to choose 30 trusty witnesses to package transactions and sign the blocks that will go in the Hive blockchain. [Vote for me via HiveSigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) to support my work for the community.&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hive-content-renderer/dist/hive-content-renderer.min.js&quot;&gt;&lt;/script&gt; --&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
      // const renderer = new HiveContentRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@quochuy&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps').html();
      const outputElem = $('#content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps code {
    background: white;
  }
  #content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps a:hover {
    border-bottom: 0;
  }
  #content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps h1 {
    font-size: 2.2em;
  }
  #content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps header small {
    color: #999;
    font-size: 50%;
  }
  #content-quochuy-6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/hive-139531/@quochuy/6cv6sw-my-new-contributions-to-the-hive-condenser-and-wallet-apps&quot;&gt;My new contributions to the Hive Condenser and Wallet apps.&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@quochuy&quot;&gt;@quochuy&lt;/a&gt;
&lt;/p&gt;</content><author><name>quochuy</name></author><category term="news" /><category term="nodejs" /><category term="condenser" /><summary type="html">## Context I have been involved (voluntarily) with the development of the Condenser &amp;amp; Wallet apps (that are powering https://hive.blog and https://wallet.hive.blog) for quite a while now. There are other great frontends to Hive out there such as https://peakd.com and https://ecency.com but I have always been more or less faithful with the Condenser. This is a regular report on my new contributions. Some of the new work below might still be in test and not yet deployed. ## Add highlight syntax to code blocks in blog posts There was [a request for syntax highlighting](https://gitlab.syncad.com/hive/condenser/-/issues/115) on posts. We indeed have some developers sharing code on the platform. So I tested integrating PrismJS and HighlightJS. I picked HighlightJS due to the way it works nicely with the Condenser. However, there were some concerns that HighlightJS package is 270KB+ which might be a problem for mobile phone users on a slow bandwidth. So this change might not get approved for deployment to production. See my next contribution below instead. ![Syntax Highlighter](https://gitlab.syncad.com/hive/condenser/uploads/f5417cdefb5d92bdca036ab9c1d83992/Screen_Shot_2021-04-15_at_2.47.54_pm.jpg) Merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/234 ## Supporting GitHub's GIST embeds @good-karma suggested that instead of highlighting syntax, we could simply add support for [GIST](http://gist.github.com/) embedded views. [GIST is a tool allowing you to share code snippets or data excerpts](http://gist.github.com/). It also has syntax highlighting so integrating it to the Condenser is lightweight. There is one downside to the method though: old posts not using GIST won't have their code highlighted. ![GitHub GIST embeds](https://gitlab.syncad.com/hive/condenser/uploads/45a0e2fb10e2f634c871cfdedd2c5e6e/Screen_Shot_2021-04-17_at_9.19.56_pm.jpg) Merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/238 Thank you @mahdiyari for helping with testing ## Display votes value breakdown Aren't you sometimes curious as to what is the $ contribution of a vote on your post? This little change adds vote value to the voter list of a post. ![Votes value breakdown](https://gitlab.syncad.com/hive/condenser/uploads/b0cb8b7e54df71129624613193e8411e/Screen_Shot_2021-04-22_at_10.34.52_pm.jpg) Merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/242 --- **Vote for my witness** [![Support @quochuy Witness.jpg](https://images.hive.blog/DQmecYTZemY8SwU6rrg7awhpNRBsehUp7ivk9RGyZsUUpVw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) On Hive, Witnesses are playing the important role of providing a performant and safe network for all of us. You have the power to choose 30 trusty witnesses to package transactions and sign the blocks that will go in the Hive blockchain. [Vote for me via HiveSigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) to support my work for the community. See: My new contributions to the Hive Condenser and Wallet apps. by @quochuy</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://gitlab.syncad.com/hive/condenser/uploads/f5417cdefb5d92bdca036ab9c1d83992/Screen_Shot_2021-04-15_at_2.47.54_pm.jpg" /><media:content medium="image" url="https://gitlab.syncad.com/hive/condenser/uploads/f5417cdefb5d92bdca036ab9c1d83992/Screen_Shot_2021-04-15_at_2.47.54_pm.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Beta testing the Keychain in-App browser</title><link href="https://hivedocs.info/news/projects/hive-keychain/2021/04/19/beta-testing-the-keychain-in-app-browser.html" rel="alternate" type="text/html" title="Beta testing the Keychain in-App browser" /><published>2021-04-19T23:25:51-07:00</published><updated>2021-04-19T23:25:51-07:00</updated><id>https://hivedocs.info/news/projects/hive-keychain/2021/04/19/beta-testing-the-keychain-in-app-browser</id><content type="html" xml:base="https://hivedocs.info/news/projects/hive-keychain/2021/04/19/beta-testing-the-keychain-in-app-browser.html">&lt;div id=&quot;content-keychain-beta-testing-the-keychain-in-app-browser&quot;&gt;![social_keychainforhive.jpg](https://files.peakd.com/file/peakd-hive/keychain/xnmVXGi6-social_keychain-for-hive.jpg)

The first version of our in-App browser is ready for testing, on both TestFlight (iOS) and Google Play as version 1.1.0.

This new version adds a browser tab to the Keychain menu, on which users can have the same Keychain experience as on their desktop browser. Testers, please update your App to 1.1.0 to test this new feature. If you wish to try it but are not on our tester list yet, join us on Discord (see below) and drop a message in the join-testers channel.
 
Although it's not complete yet, the most widely used operations are all included and ready to get tested:

- Login methods 
- Generic broadcasts
- Post / Comment
- Vote
- Transfer (with or without encrypted memo)
- Hive Engine Transfer
- Power up / down
- Delegations
- Proposal votes
- Witness vote / proxy
- Encode / Decode message
- Sign transaction / buffer

Please don't hesitate to open issue on [our Github](https://github.com/stoodkev/hive-keychain-mobile/issues).

Future improvements for the in-App browser that are already on the roadmap for the next update include:
- Adding missing requests
- Handle browser history
- Url autocomplete
- Handling multiple browser tabs
- Bookmarking 
- Automatically accept posting authority requests if whitelisted (similar to the browser extension)
 

## Download the Apps

[&lt;img src=&quot;https://images.hive.blog/200x50/https://files.peakd.com/file/peakd-hive/keychain/23vsHsRHWYjefYMReCeLtoPxb5L8sov9BR52RXpnmax9qiGzCQnRRghLBVGq7rKp642hA&quot; /&gt;](https://apps.apple.com/us/app/hive-keychain/id1552190010)
[&lt;img src=&quot;https://images.hive.blog/200x50/https://files.peakd.com/file/peakd-hive/keychain/23wMPrC1wiKKXTYQVQHViGYKC61ZEo4nSKGHY7aW2m4EzsLf2sSB5MhewMQZysNS4fBTS&quot; /&gt;](https://play.google.com/store/apps/details?id=com.mobilekeychain)

1. This is a first release and the Application is still in Beta. It has been tested extensively but it should not by any means be the only place you store your keys on.
2. To import accounts quickly from your Hive Keychain extension to your mobile App, use the QR Code scanner by pressing the QR code logo:

On your extension, navigate to the menu (top right button), then to `Manage Accounts` and finally click on `Show QR Code`.

## Discord

To communicate with us or become an Alpha tester, join our Discord by following this link :
https://discord.gg/3EM6YfRrGv

Or scanning this QR Code : 

![image.png](https://files.peakd.com/file/peakd-hive/keychain/BRNgvm9y-image.png)

#### Core Team

@stoodkev : Lead Dev - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=stoodkev&amp;amp;approve=1)
@nateaguila : UI/UX
@yabapmatt : Founder - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=yabapmatt&amp;amp;approve=1)
@aggroed : Founder - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=aggroed&amp;amp;approve=1)


---

### Support Hive Keychain development by voting for [our proposal](https://peakd.com/hive/@keychain/hive-keychain-development-proposal-2) on [PeakD](https://peakd.com/proposals/140) (on the upcoming section)or with [HiveSigner](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5B140%5D&amp;amp;approve=true).

&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hive-content-renderer/dist/hive-content-renderer.min.js&quot;&gt;&lt;/script&gt; --&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
      // const renderer = new HiveContentRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@keychain&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/beta-testing-the-keychain-in-app-browser&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-keychain-beta-testing-the-keychain-in-app-browser').html();
      const outputElem = $('#content-keychain-beta-testing-the-keychain-in-app-browser');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-keychain-beta-testing-the-keychain-in-app-browser {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-keychain-beta-testing-the-keychain-in-app-browser code {
    background: white;
  }
  #content-keychain-beta-testing-the-keychain-in-app-browser a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-keychain-beta-testing-the-keychain-in-app-browser a:hover {
    border-bottom: 0;
  }
  #content-keychain-beta-testing-the-keychain-in-app-browser h1 {
    font-size: 2.2em;
  }
  #content-keychain-beta-testing-the-keychain-in-app-browser h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-keychain-beta-testing-the-keychain-in-app-browser header small {
    color: #999;
    font-size: 50%;
  }
  #content-keychain-beta-testing-the-keychain-in-app-browser img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://peakd.com/keychain/@keychain/beta-testing-the-keychain-in-app-browser&quot;&gt;Beta testing the Keychain in-App browser&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@keychain&quot;&gt;@keychain&lt;/a&gt;
&lt;/p&gt;</content><author><name>keychain</name></author><category term="news" /><category term="projects" /><category term="hive-keychain" /><summary type="html">![social_keychainforhive.jpg](https://files.peakd.com/file/peakd-hive/keychain/xnmVXGi6-social_keychain-for-hive.jpg) The first version of our in-App browser is ready for testing, on both TestFlight (iOS) and Google Play as version 1.1.0. This new version adds a browser tab to the Keychain menu, on which users can have the same Keychain experience as on their desktop browser. Testers, please update your App to 1.1.0 to test this new feature. If you wish to try it but are not on our tester list yet, join us on Discord (see below) and drop a message in the join-testers channel. Although it's not complete yet, the most widely used operations are all included and ready to get tested: - Login methods - Generic broadcasts - Post / Comment - Vote - Transfer (with or without encrypted memo) - Hive Engine Transfer - Power up / down - Delegations - Proposal votes - Witness vote / proxy - Encode / Decode message - Sign transaction / buffer Please don't hesitate to open issue on [our Github](https://github.com/stoodkev/hive-keychain-mobile/issues). Future improvements for the in-App browser that are already on the roadmap for the next update include: - Adding missing requests - Handle browser history - Url autocomplete - Handling multiple browser tabs - Bookmarking - Automatically accept posting authority requests if whitelisted (similar to the browser extension) ## Download the Apps [](https://apps.apple.com/us/app/hive-keychain/id1552190010) [](https://play.google.com/store/apps/details?id=com.mobilekeychain) 1. This is a first release and the Application is still in Beta. It has been tested extensively but it should not by any means be the only place you store your keys on. 2. To import accounts quickly from your Hive Keychain extension to your mobile App, use the QR Code scanner by pressing the QR code logo: On your extension, navigate to the menu (top right button), then to `Manage Accounts` and finally click on `Show QR Code`. ## Discord To communicate with us or become an Alpha tester, join our Discord by following this link : https://discord.gg/3EM6YfRrGv Or scanning this QR Code : ![image.png](https://files.peakd.com/file/peakd-hive/keychain/BRNgvm9y-image.png) #### Core Team @stoodkev : Lead Dev - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=stoodkev&amp;amp;approve=1) @nateaguila : UI/UX @yabapmatt : Founder - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=yabapmatt&amp;amp;approve=1) @aggroed : Founder - [Witness](https://hivesigner.com/sign/account-witness-vote?witness=aggroed&amp;amp;approve=1) --- ### Support Hive Keychain development by voting for [our proposal](https://peakd.com/hive/@keychain/hive-keychain-development-proposal-2) on [PeakD](https://peakd.com/proposals/140) (on the upcoming section)or with [HiveSigner](https://hivesigner.com/sign/update-proposal-votes?proposal_ids=%5B140%5D&amp;amp;approve=true). See: Beta testing the Keychain in-App browser by @keychain</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://files.peakd.com/file/peakd-hive/keychain/xnmVXGi6-social_keychain-for-hive.jpg" /><media:content medium="image" url="https://files.peakd.com/file/peakd-hive/keychain/xnmVXGi6-social_keychain-for-hive.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Tin Toy - HF25 on a Local Testnet</title><link href="https://hivedocs.info/tools/docker/testnet/2021/04/15/tin-toy-hf26-on-a-local-testnet.html" rel="alternate" type="text/html" title="Tin Toy - HF25 on a Local Testnet" /><published>2021-04-15T00:20:51-07:00</published><updated>2021-04-15T00:20:51-07:00</updated><id>https://hivedocs.info/tools/docker/testnet/2021/04/15/tin-toy-hf26-on-a-local-testnet</id><content type="html" xml:base="https://hivedocs.info/tools/docker/testnet/2021/04/15/tin-toy-hf26-on-a-local-testnet.html">&lt;div id=&quot;content-inertia-tin-toy-hf26-on-a-local-testnet&quot;&gt;&lt;div class=&quot;pull-right&quot;&gt;
  &lt;img src=&quot;https://i.imgur.com/FkZIVUu.jpg&quot; /&gt;
&lt;/div&gt;

One of the tools I maintain is Tin Toy.  It's a docker image for running a tiny Hive testnet on your local computer.

With it, you can point your application and test new functionality, without having to broadcast to the mainnet.

I just did a refresh on the `develop` branch so you can try out the next hardfork, HF25.

It's also a tool that comes in handy for me, when I'm doing [documentation](https://peakd.com/c/hive-139531/search?q=devportal), because it helps me find new functionality and create tutorials.  You'll find that anytime the devportal mentions a testnet, it's going to recommend tintoy.  And so for this reason, I feel like this is time well spent when researching and improving the devportal.

To try out the hived 1.26.0, right now:

```bash
docker run -d -p 8090:8090 inertia/tintoy:develop
```

Then point your app API endpoint at `http://127.0.0.1:8080`

--- 

Tin Toy - A tiny Hive testnet based on [tinman](https://gitlab.syncad.com/hive/tinman)

# Quickstart

```bash
docker run -d -p 8090:8090 inertia/tintoy:latest
```

Using `-p 8090:8090` will expose json-rpc.

... or ...

```bash
docker run -d -P inertia/tintoy:latest
```

Using `-P` will expose all of the ports, ephemerally (see below).

If you want to modify the scripts before deploying:

```bash
git clone https://gist.github.com/b88e7bfff8862858e54c59392e2bce20.git tintoy
cd tintoy
docker build -t myname/tintoy:mybranch .
docker run -d -P myname/tintoy:mybranch
```

For example, you can modify the first line of `Dockerfile` to switch versions of `hived`.

Tin Toy uses:

```Dockerfile
FROM hiveio/hive:latest
```

But you can switch to any branch and try it out.  Suggested branches to try can be found in [hive/activity](https://gitlab.syncad.com/hive/hive/activity).

Say we want to take a look at a branch like `develop`.  Change the first line of the `Dockerfile` to:

```Dockerfile
FROM hiveio/hive:develop
```

Then build and run.

# Shell In

* Use `docker ps` to get the name of the existing container.
* Use the command `docker exec -it &lt;container name=&quot;&quot;&gt; /bin/bash` to get a bash shell in the container.

# How to Use

Once the docker container has fully deployed, you'll have access to various port.  Internally, the docker container responds to:

| Port | Purpose   |
|------|-----------|
| 2001 | p2p       |
| 8090 | jussi json-rpc |
| 8091 | hived json-rpc |
| 8092 | hivemind json-rpc |
| 5000 | tinman server (if enabled) |

If you launched with `-P` (ephemeral ports enabled), you can get a list of ports:

```bash
docker ps
```

Which might return something like:

```
CONTAINER ID        IMAGE                   COMMAND                  CREATED             STATUS              PORTS                                                                                                NAMES
290810dba18e        inertia/tintoy:latest   &quot;/bin/sh -c /app/boo…&quot;   5 minutes ago       Up 5 minutes        0.0.0.0:32832-&amp;gt;2001/tcp, 0.0.0.0:32831-&amp;gt;8080/tcp, 0.0.0.0:32830-&amp;gt;8090/tcp, 0.0.0.0:32829-&amp;gt;8091/tcp   tintoy
```

## Default Secret Key

Normally, the secret key for a testnet is kept secret.  But for a local testnet, there's no reason to keep it a secret.  For tintoy, the default secret key is set in the `Dockerfile`:

```bash
ENV SHARED_SECRET tintoy
```

Which means, if you want to derive the private keys for `tnman`, you could use the following command:

```bash
get_dev_key tintoy owner-tnman active-tnman posting-tnman memo-tnman | jq
```

```json
[
  {
    &quot;private_key&quot;: &quot;5K5kjWq8pY23YptZaiEkiiaKi1wafufj63nzAtaDu1epVXw9fvz&quot;,
    &quot;public_key&quot;: &quot;TST7uubH7SpknapasQTzW1rFho3LUn1pFmdR7X4f1cHmK22aTJYm3&quot;,
    &quot;account_name&quot;: &quot;owner-tnman&quot;
  },
  {
    &quot;private_key&quot;: &quot;5K3NwkFwCnsSfJNACw1qm3zzojWBtP8k4rTb2kbLQ4DDR6TgGnw&quot;,
    &quot;public_key&quot;: &quot;TST4w9GXogQtqPprzPhp7WKZPPKWXv4KvqqMMgd5agJQCDtYLBJwA&quot;,
    &quot;account_name&quot;: &quot;active-tnman&quot;
  },
  {
    &quot;private_key&quot;: &quot;5Jrdrbt5xfjVeHfHd5JMiJy1FfrGtuieRvzr9WFYhcdHpjgfwPY&quot;,
    &quot;public_key&quot;: &quot;TST883nSqJL5KbVgfdV44snPPDTStQQxfR7vj8XttsZo25sXvHAnQ&quot;,
    &quot;account_name&quot;: &quot;posting-tnman&quot;
  },
  {
    &quot;private_key&quot;: &quot;5KB3ddeh5o3WghSM3qQaUthxVt7QZWfNYCoiAW3XYfeDki1oH9z&quot;,
    &quot;public_key&quot;: &quot;TST56jtUgZrajuBUgdECYaew6cebjSbKWVdtCKkc4xxLAFZQ9f8A9&quot;,
    &quot;account_name&quot;: &quot;memo-tnman&quot;
  }
]
```

Every account on the testnet uses `tnman` as their account authority.  Using this account, you can sign any transaction for any account.

## Snapshot Refresh

Occasionally, it's a good idea to refresh the `sample-snapshot.json` file.  This process is usually only required to be performed by the repo maintainer, but if you want to do it yourself, here are the steps:

1. Install `tinman` by following that product's [README.md](https://gitlab.syncad.com/hive/tinman#installation).
2. Next, [generate a new snapshot](https://gitlab.syncad.com/hive/tinman#taking-a-snapshot).
  * Example: `tinman snapshot -s https://anyx.io -o - | pv &amp;gt; snapshot.json`
3. Once we have our new snapshot, create a sample, overwriting the previous one.
  * Example: `tinman sample -i snapshot.json -o sample-snapshot.json`
4. Delete (or move) `snapshot.json` (we don't need it anymore now that we have `sample-snapshot.json`).
&amp;lt;/div&amp;gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;
&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hive-content-renderer/dist/hive-content-renderer.min.js&quot;&gt;&lt;/script&gt; --&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
      // const renderer = new HiveContentRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@inertia&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/tin-toy-hf26-on-a-local-testnet&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-inertia-tin-toy-hf26-on-a-local-testnet').html();
      const outputElem = $('#content-inertia-tin-toy-hf26-on-a-local-testnet');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;
&lt;style&gt;
  #content-inertia-tin-toy-hf26-on-a-local-testnet {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-inertia-tin-toy-hf26-on-a-local-testnet code {
    background: white;
  }
  #content-inertia-tin-toy-hf26-on-a-local-testnet a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-inertia-tin-toy-hf26-on-a-local-testnet a:hover {
    border-bottom: 0;
  }
  #content-inertia-tin-toy-hf26-on-a-local-testnet h1 {
    font-size: 2.2em;
  }
  #content-inertia-tin-toy-hf26-on-a-local-testnet h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-inertia-tin-toy-hf26-on-a-local-testnet header small {
    color: #999;
    font-size: 50%;
  }
  #content-inertia-tin-toy-hf26-on-a-local-testnet img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;
&lt;p&gt;
  See: &lt;a href=&quot;https://peakd.com/hive-139531/@inertia/tin-toy-hf26-on-a-local-testnet&quot;&gt;Tin Toy - HF25 on a Local Testnet&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@inertia&quot;&gt;@inertia&lt;/a&gt;
&lt;/p&gt;

&lt;/container&gt;&lt;/div&gt;</content><author><name>inertia</name></author><category term="tools" /><category term="docker" /><category term="testnet" /><summary type="html">One of the tools I maintain is Tin Toy. It's a docker image for running a tiny Hive testnet on your local computer. With it, you can point your application and test new functionality, without having to broadcast to the mainnet. I just did a refresh on the `develop` branch so you can try out the next hardfork, HF25. It's also a tool that comes in handy for me, when I'm doing [documentation](https://peakd.com/c/hive-139531/search?q=devportal), because it helps me find new functionality and create tutorials. You'll find that anytime the devportal mentions a testnet, it's going to recommend tintoy. And so for this reason, I feel like this is time well spent when researching and improving the devportal. To try out the hived 1.26.0, right now: ```bash docker run -d -p 8090:8090 inertia/tintoy:develop ``` Then point your app API endpoint at `http://127.0.0.1:8080` --- Tin Toy - A tiny Hive testnet based on [tinman](https://gitlab.syncad.com/hive/tinman) # Quickstart ```bash docker run -d -p 8090:8090 inertia/tintoy:latest ``` Using `-p 8090:8090` will expose json-rpc. ... or ... ```bash docker run -d -P inertia/tintoy:latest ``` Using `-P` will expose all of the ports, ephemerally (see below). If you want to modify the scripts before deploying: ```bash git clone https://gist.github.com/b88e7bfff8862858e54c59392e2bce20.git tintoy cd tintoy docker build -t myname/tintoy:mybranch . docker run -d -P myname/tintoy:mybranch ``` For example, you can modify the first line of `Dockerfile` to switch versions of `hived`. Tin Toy uses: ```Dockerfile FROM hiveio/hive:latest ``` But you can switch to any branch and try it out. Suggested branches to try can be found in [hive/activity](https://gitlab.syncad.com/hive/hive/activity). Say we want to take a look at a branch like `develop`. Change the first line of the `Dockerfile` to: ```Dockerfile FROM hiveio/hive:develop ``` Then build and run. # Shell In * Use `docker ps` to get the name of the existing container. * Use the command `docker exec -it /bin/bash` to get a bash shell in the container. # How to Use Once the docker container has fully deployed, you'll have access to various port. Internally, the docker container responds to: | Port | Purpose | |------|-----------| | 2001 | p2p | | 8090 | jussi json-rpc | | 8091 | hived json-rpc | | 8092 | hivemind json-rpc | | 5000 | tinman server (if enabled) | If you launched with `-P` (ephemeral ports enabled), you can get a list of ports: ```bash docker ps ``` Which might return something like: ``` CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 290810dba18e inertia/tintoy:latest &quot;/bin/sh -c /app/boo…&quot; 5 minutes ago Up 5 minutes 0.0.0.0:32832-&amp;gt;2001/tcp, 0.0.0.0:32831-&amp;gt;8080/tcp, 0.0.0.0:32830-&amp;gt;8090/tcp, 0.0.0.0:32829-&amp;gt;8091/tcp tintoy ``` ## Default Secret Key Normally, the secret key for a testnet is kept secret. But for a local testnet, there's no reason to keep it a secret. For tintoy, the default secret key is set in the `Dockerfile`: ```bash ENV SHARED_SECRET tintoy ``` Which means, if you want to derive the private keys for `tnman`, you could use the following command: ```bash get_dev_key tintoy owner-tnman active-tnman posting-tnman memo-tnman | jq ``` ```json [ { &quot;private_key&quot;: &quot;5K5kjWq8pY23YptZaiEkiiaKi1wafufj63nzAtaDu1epVXw9fvz&quot;, &quot;public_key&quot;: &quot;TST7uubH7SpknapasQTzW1rFho3LUn1pFmdR7X4f1cHmK22aTJYm3&quot;, &quot;account_name&quot;: &quot;owner-tnman&quot; }, { &quot;private_key&quot;: &quot;5K3NwkFwCnsSfJNACw1qm3zzojWBtP8k4rTb2kbLQ4DDR6TgGnw&quot;, &quot;public_key&quot;: &quot;TST4w9GXogQtqPprzPhp7WKZPPKWXv4KvqqMMgd5agJQCDtYLBJwA&quot;, &quot;account_name&quot;: &quot;active-tnman&quot; }, { &quot;private_key&quot;: &quot;5Jrdrbt5xfjVeHfHd5JMiJy1FfrGtuieRvzr9WFYhcdHpjgfwPY&quot;, &quot;public_key&quot;: &quot;TST883nSqJL5KbVgfdV44snPPDTStQQxfR7vj8XttsZo25sXvHAnQ&quot;, &quot;account_name&quot;: &quot;posting-tnman&quot; }, { &quot;private_key&quot;: &quot;5KB3ddeh5o3WghSM3qQaUthxVt7QZWfNYCoiAW3XYfeDki1oH9z&quot;, &quot;public_key&quot;: &quot;TST56jtUgZrajuBUgdECYaew6cebjSbKWVdtCKkc4xxLAFZQ9f8A9&quot;, &quot;account_name&quot;: &quot;memo-tnman&quot; } ] ``` Every account on the testnet uses `tnman` as their account authority. Using this account, you can sign any transaction for any account. ## Snapshot Refresh Occasionally, it's a good idea to refresh the `sample-snapshot.json` file. This process is usually only required to be performed by the repo maintainer, but if you want to do it yourself, here are the steps: 1. Install `tinman` by following that product's [README.md](https://gitlab.syncad.com/hive/tinman#installation). 2. Next, [generate a new snapshot](https://gitlab.syncad.com/hive/tinman#taking-a-snapshot). * Example: `tinman snapshot -s https://anyx.io -o - | pv &amp;gt; snapshot.json` 3. Once we have our new snapshot, create a sample, overwriting the previous one. * Example: `tinman sample -i snapshot.json -o sample-snapshot.json` 4. Delete (or move) `snapshot.json` (we don't need it anymore now that we have `sample-snapshot.json`). &amp;lt;/div&amp;gt; See: Tin Toy - HF25 on a Local Testnet by @inertia</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.imgur.com/FkZIVUu.jpg" /><media:content medium="image" url="https://i.imgur.com/FkZIVUu.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Hive core developer meeting #21</title><link href="https://hivedocs.info/news/core/development/2021/04/13/hive-core-developer-meeting-21.html" rel="alternate" type="text/html" title="Hive core developer meeting #21" /><published>2021-04-13T06:12:39-07:00</published><updated>2021-04-13T06:12:39-07:00</updated><id>https://hivedocs.info/news/core/development/2021/04/13/hive-core-developer-meeting-21</id><content type="html" xml:base="https://hivedocs.info/news/core/development/2021/04/13/hive-core-developer-meeting-21.html">&lt;div id=&quot;content-howo-hive-core-developer-meeting-21&quot;&gt;https://www.youtube.com/watch?v=2tOH_yCANCo


2:47 - Intro(Howo)
3:34 - (Blocktrades) - changes and future planning
8:53 - RC plugin
10:40 - Usage of memory
15:33 - incoming RC delegation api feature
17:08 - json operation limit per block
21:46 - Testnet + Bug bounty
22:54 - Hive stem hackathon
26:01 - test voice on another platform like jitsi and stop paying zoom fees
26:53 - move the meeting ahead by few hours
29:18 - Soft cap hf25 or hf26
31:00 - Max curation rewards on top of author rewards
33:15 : Review Issues on gitlab

If you're listening to the whole thing, please post timestamps as a comment, the first one to do so (and correctly) will get a 100% upvote from me :)

# meeting tl;dr:

## Dev sync

As usual it's better to listen to this part

## RC delegations

@blocktrades and team are concerned about some design decisions (operations in a non consensus plugin), after some offline discussions we realized that it was fine, we were just not aligned on semantics. 

Then there are some memory concerns (a lot of new data is stored). I will be running some tests this week to build a million delegations and see the memory impact it would have on nodes, it shouldn't cost more than a extra gig of ram. So I'll be building a test to monitor this. 

Also while we were discussing offline, we realized that rc delegates were non consensus meaning that it could be rolled out without a hard fork, and ultimately decided to push them to hf25.1, the reasoning being that there is no reason to risk the health of the chain making a big release when we can release hf25 and then a bit later release hf25.1 with rc delegations. I know it will come as a disapointment to some, but one of the core principles of the dev team is risk averse and if we can avoid a risk / spread it over multiple smaller releases, we will do it.

## Incoming rc delegations index

Us implementing the index or not will depend on the result from the memory cost of the rc plugin, but it may have to be done via L2

## Increase custom json operation limit per block

Would be a problem as we go into the middle of 2021 with a lot of applications relying on it, it's actually not a problem, as the limit is &quot;per account per block&quot; and not &quot;per block&quot;. 

## Testnet setup + date (?) + bug bounty ?

Testnet will be setup by voluntary witnesses (most likely myself), date is still kinda undetermined, but could be as early as the end of the week, the &quot;human&quot; cost of organizing a bug bounty was deemed to big compared to the benefits it brings.

## HiveStem hackathon on core dev things ?

We figured that it would be interesting to let people hack on hivemind, so I will be creating a guide on how to setup a dev hivemind environment so participants can participate on it if they want (things like communities, sorting algorithms etc) 

## Test another platform like jitsi and stop paying zoom fees

We'll need to see with @roelandp who currently pays for the account and @crimsonclad who manages the stream but we are inclined to use any platform really.

## Move the meeting ahead by a few hours

There is a bit of wiggle room (1/2 hours early, an hour after), we'll run a poll with current regular participants to see what would fit them best.

## soft cap in hf25 or hf26

https://gitlab.syncad.com/hive/hive/-/issues/140 we will roll out a fix on hf25, it's a very small change but an important one for hive -&amp;gt; hbd conversions.

## from @guiltyparties: 
`Review of open issues on gitlab (who, when, ...). Some are 1 year old.`
```
The possibility for authors/dapps to set a) max accepted rewards to author AND b) max accepted rewards to curator ---- both values required or set to default. Usecase: dapp wants to limit rewards for posts through it to 1$ for authors but to $10 for curators.
```

I think it would be possible to get close to that output via beneficiaries and max payout, I can't remember if curation rewards are before or after beneficiaries (before would make more sense) so let's say you want 1$ to the author and 10$ to curators, you can set the max reward to 20$, and a 90% beneficiary to @null, that way when it's computed you get:

50% of the reward goes to curators = 10$, out of the remaining 10$ for the author 9$ goes to @null, and 1$ goes to the author. 

Something to play around with, but I think this can be done purely using the existing chain functionalities.

##  from @arcange:

`Review of open issues on gitlab (who, when, ...). Some are 1 year old.` 

Some discussion regarding on who's responsibility it falls to follow up with open tickets and who should close tickets, better to listen to this part. 

Then we reviewed and closed https://gitlab.syncad.com/hive/hive/-/issues/61 and https://gitlab.syncad.com/hive/hive/-/issues/14


# Support what I'm doing 

If you like what I'm doing, please consider voting on my new proposal:
https://peakd.com/proposals/167
[hivesigner](https://hivesigner.com/import?redirect=%2Fsign%2Fupdate-proposal-votes%3Fproposal_ids%3D%255B167%255D%26approve%3Dtrue&amp;amp;authority=active)&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hive-content-renderer/dist/hive-content-renderer.min.js&quot;&gt;&lt;/script&gt; --&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
      // const renderer = new HiveContentRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@howo&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/hive-core-developer-meeting-21&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-howo-hive-core-developer-meeting-21').html();
      const outputElem = $('#content-howo-hive-core-developer-meeting-21');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-howo-hive-core-developer-meeting-21 {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-howo-hive-core-developer-meeting-21 code {
    background: white;
  }
  #content-howo-hive-core-developer-meeting-21 a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-howo-hive-core-developer-meeting-21 a:hover {
    border-bottom: 0;
  }
  #content-howo-hive-core-developer-meeting-21 h1 {
    font-size: 2.2em;
  }
  #content-howo-hive-core-developer-meeting-21 h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-howo-hive-core-developer-meeting-21 header small {
    color: #999;
    font-size: 50%;
  }
  #content-howo-hive-core-developer-meeting-21 img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://peakd.com/meeting/@howo/hive-core-developer-meeting-21&quot;&gt;Hive core developer meeting #21&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@howo&quot;&gt;@howo&lt;/a&gt;
&lt;/p&gt;</content><author><name>howo</name></author><category term="news" /><category term="core" /><category term="development" /><summary type="html">https://www.youtube.com/watch?v=2tOH_yCANCo 2:47 - Intro(Howo) 3:34 - (Blocktrades) - changes and future planning 8:53 - RC plugin 10:40 - Usage of memory 15:33 - incoming RC delegation api feature 17:08 - json operation limit per block 21:46 - Testnet + Bug bounty 22:54 - Hive stem hackathon 26:01 - test voice on another platform like jitsi and stop paying zoom fees 26:53 - move the meeting ahead by few hours 29:18 - Soft cap hf25 or hf26 31:00 - Max curation rewards on top of author rewards 33:15 : Review Issues on gitlab If you're listening to the whole thing, please post timestamps as a comment, the first one to do so (and correctly) will get a 100% upvote from me :) # meeting tl;dr: ## Dev sync As usual it's better to listen to this part ## RC delegations @blocktrades and team are concerned about some design decisions (operations in a non consensus plugin), after some offline discussions we realized that it was fine, we were just not aligned on semantics. Then there are some memory concerns (a lot of new data is stored). I will be running some tests this week to build a million delegations and see the memory impact it would have on nodes, it shouldn't cost more than a extra gig of ram. So I'll be building a test to monitor this. Also while we were discussing offline, we realized that rc delegates were non consensus meaning that it could be rolled out without a hard fork, and ultimately decided to push them to hf25.1, the reasoning being that there is no reason to risk the health of the chain making a big release when we can release hf25 and then a bit later release hf25.1 with rc delegations. I know it will come as a disapointment to some, but one of the core principles of the dev team is risk averse and if we can avoid a risk / spread it over multiple smaller releases, we will do it. ## Incoming rc delegations index Us implementing the index or not will depend on the result from the memory cost of the rc plugin, but it may have to be done via L2 ## Increase custom json operation limit per block Would be a problem as we go into the middle of 2021 with a lot of applications relying on it, it's actually not a problem, as the limit is &quot;per account per block&quot; and not &quot;per block&quot;. ## Testnet setup + date (?) + bug bounty ? Testnet will be setup by voluntary witnesses (most likely myself), date is still kinda undetermined, but could be as early as the end of the week, the &quot;human&quot; cost of organizing a bug bounty was deemed to big compared to the benefits it brings. ## HiveStem hackathon on core dev things ? We figured that it would be interesting to let people hack on hivemind, so I will be creating a guide on how to setup a dev hivemind environment so participants can participate on it if they want (things like communities, sorting algorithms etc) ## Test another platform like jitsi and stop paying zoom fees We'll need to see with @roelandp who currently pays for the account and @crimsonclad who manages the stream but we are inclined to use any platform really. ## Move the meeting ahead by a few hours There is a bit of wiggle room (1/2 hours early, an hour after), we'll run a poll with current regular participants to see what would fit them best. ## soft cap in hf25 or hf26 https://gitlab.syncad.com/hive/hive/-/issues/140 we will roll out a fix on hf25, it's a very small change but an important one for hive -&amp;gt; hbd conversions. ## from @guiltyparties: `Review of open issues on gitlab (who, when, ...). Some are 1 year old.` ``` The possibility for authors/dapps to set a) max accepted rewards to author AND b) max accepted rewards to curator ---- both values required or set to default. Usecase: dapp wants to limit rewards for posts through it to 1$ for authors but to $10 for curators. ``` I think it would be possible to get close to that output via beneficiaries and max payout, I can't remember if curation rewards are before or after beneficiaries (before would make more sense) so let's say you want 1$ to the author and 10$ to curators, you can set the max reward to 20$, and a 90% beneficiary to @null, that way when it's computed you get: 50% of the reward goes to curators = 10$, out of the remaining 10$ for the author 9$ goes to @null, and 1$ goes to the author. Something to play around with, but I think this can be done purely using the existing chain functionalities. ## from @arcange: `Review of open issues on gitlab (who, when, ...). Some are 1 year old.` Some discussion regarding on who's responsibility it falls to follow up with open tickets and who should close tickets, better to listen to this part. Then we reviewed and closed https://gitlab.syncad.com/hive/hive/-/issues/61 and https://gitlab.syncad.com/hive/hive/-/issues/14 # Support what I'm doing If you like what I'm doing, please consider voting on my new proposal: https://peakd.com/proposals/167 [hivesigner](https://hivesigner.com/import?redirect=%2Fsign%2Fupdate-proposal-votes%3Fproposal_ids%3D%255B167%255D%26approve%3Dtrue&amp;amp;authority=active) See: Hive core developer meeting #21 by @howo</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://img.youtube.com/vi/2tOH_yCANCo/0.jpg" /><media:content medium="image" url="https://img.youtube.com/vi/2tOH_yCANCo/0.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">My new contributions to the Hive Condenser and Wallet apps.</title><link href="https://hivedocs.info/news/nodejs/condenser/2021/04/13/5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps.html" rel="alternate" type="text/html" title="My new contributions to the Hive Condenser and Wallet apps." /><published>2021-04-13T00:27:24-07:00</published><updated>2021-04-13T00:27:24-07:00</updated><id>https://hivedocs.info/news/nodejs/condenser/2021/04/13/5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps</id><content type="html" xml:base="https://hivedocs.info/news/nodejs/condenser/2021/04/13/5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps.html">&lt;div id=&quot;content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps&quot;&gt;## Context
I have been involved (voluntarily) with the development of the Condenser &amp;amp; Wallet apps (that are powering https://hive.blog and https://wallet.hive.blog) for quite a while now. There are other great frontends to Hive out there such as https://peakd.com and https://ecency.com but I have always been more or less faithful with the Condenser.

This is a regular report on my new contributions. Some of the new work below might still be in test and not yet deployed.

## Sanitize input fields
I noticed that when creating a new community, users were allowed to use HTML code. Although the HTML is not interpreted it is still displayed (encoded) on the screen which looks bad. Apparently, there is no sanitising code of user input for those fields. This code change adds input sanitisation at creation and content filtering at display to clean up existing data.

Merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/232

## Modifying the community selection on post creation
Myself and other users have often accidentally posted our content in the wrong community because we forgot to select the right one when creating the post. Currently the community selection process is not very obvious. For this change what I've done is:
- create an actually community selector drop down menu in the post editing form
- move it to the bottom right next to the `Post` button

![Community selector](https://gitlab.syncad.com/hive/condenser/uploads/2c64f4229ba3743c83cf0afcb37f9d91/Screen_Shot_2021-04-09_at_4.51.17_pm.jpg)

To change community, you don't have to go back to browse through them anymore, the menu should make it easier.
![Community selector](https://gitlab.syncad.com/hive/condenser/uploads/00cc3a8373a5914ee8dc506928e7af4a/Screen_Shot_2021-04-09_at_5.07.49_pm.jpg)

---

**Vote for my witness**
[![Support @quochuy Witness.jpg](https://images.hive.blog/DQmecYTZemY8SwU6rrg7awhpNRBsehUp7ivk9RGyZsUUpVw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1)
On Hive, Witnesses are playing the important role of providing a performant and safe network for all of us. You have the power to choose 30 trusty witnesses to package transactions and sign the blocks that will go in the Hive blockchain. [Vote for me via HiveSigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) to support my work for the community.&lt;/div&gt;
&lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot; src=&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/steem-content-renderer&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hive-content-renderer/dist/hive-content-renderer.min.js&quot;&gt;&lt;/script&gt; --&gt;
&lt;script&gt;
  $(document).ready(function() {
    try {
      const renderer = new SteemContentRenderer.DefaultRenderer({
      // const renderer = new HiveContentRenderer({
        baseUrl: &quot;https://hive.blog/&quot;,
        breaks: true,
        skipSanitization: false,
        allowInsecureScriptTags: false,
        addNofollowToLinks: true,
        doNotShowImages: false,
        ipfsPrefix: &quot;&quot;,
        assetsWidth: 640,
        assetsHeight: 480,
        imageProxyFn: (url) =&gt; url,
        usertagUrlFn: (account) =&gt; &quot;/@quochuy&quot;,
        hashtagUrlFn: (hashtag) =&gt; &quot;/5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps&quot;,
        isLinkSafeFn: (url) =&gt; true,
      });
      
      const inputElem = $('#content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps').html();
      const outputElem = $('#content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps');
      const output = renderer.render(inputElem);
      
      outputElem.html(output);
    } catch(e) {
      console.log(e);
    }
  });
&lt;/script&gt;

&lt;style&gt;
  #content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps {
    padding: 0 3rem;
    color: #444444;
    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.8;
    text-shadow: 0 1px 0 #ffffff;
    padding: 0.5rem;
  }
  #content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps code {
    background: white;
  }
  #content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps a {
    border-bottom: 1px solid #444444; color: #444444; text-decoration: none;
  }
  #content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps a:hover {
    border-bottom: 0;
  }
  #content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps h1 {
    font-size: 2.2em;
  }
  #content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps h2, h3, h4, h5 {
    margin-bottom: 0;
  }
  #content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps header small {
    color: #999;
    font-size: 50%;
  }
  #content-quochuy-5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps img {
    max-width: 100%;
  }
&lt;/style&gt;

&lt;hr /&gt;

&lt;p&gt;
  See: &lt;a href=&quot;https://hive.blog/hive-139531/@quochuy/5ps1ah-my-new-contributions-to-the-hive-condenser-and-wallet-apps&quot;&gt;My new contributions to the Hive Condenser and Wallet apps.&lt;/a&gt;
  by
  &lt;a href=&quot;https://hive.blog/@quochuy&quot;&gt;@quochuy&lt;/a&gt;
&lt;/p&gt;</content><author><name>quochuy</name></author><category term="news" /><category term="nodejs" /><category term="condenser" /><summary type="html">## Context I have been involved (voluntarily) with the development of the Condenser &amp;amp; Wallet apps (that are powering https://hive.blog and https://wallet.hive.blog) for quite a while now. There are other great frontends to Hive out there such as https://peakd.com and https://ecency.com but I have always been more or less faithful with the Condenser. This is a regular report on my new contributions. Some of the new work below might still be in test and not yet deployed. ## Sanitize input fields I noticed that when creating a new community, users were allowed to use HTML code. Although the HTML is not interpreted it is still displayed (encoded) on the screen which looks bad. Apparently, there is no sanitising code of user input for those fields. This code change adds input sanitisation at creation and content filtering at display to clean up existing data. Merge request: https://gitlab.syncad.com/hive/condenser/-/merge_requests/232 ## Modifying the community selection on post creation Myself and other users have often accidentally posted our content in the wrong community because we forgot to select the right one when creating the post. Currently the community selection process is not very obvious. For this change what I've done is: - create an actually community selector drop down menu in the post editing form - move it to the bottom right next to the `Post` button ![Community selector](https://gitlab.syncad.com/hive/condenser/uploads/2c64f4229ba3743c83cf0afcb37f9d91/Screen_Shot_2021-04-09_at_4.51.17_pm.jpg) To change community, you don't have to go back to browse through them anymore, the menu should make it easier. ![Community selector](https://gitlab.syncad.com/hive/condenser/uploads/00cc3a8373a5914ee8dc506928e7af4a/Screen_Shot_2021-04-09_at_5.07.49_pm.jpg) --- **Vote for my witness** [![Support @quochuy Witness.jpg](https://images.hive.blog/DQmecYTZemY8SwU6rrg7awhpNRBsehUp7ivk9RGyZsUUpVw/quochuy-hive-witness.jpg)](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) On Hive, Witnesses are playing the important role of providing a performant and safe network for all of us. You have the power to choose 30 trusty witnesses to package transactions and sign the blocks that will go in the Hive blockchain. [Vote for me via HiveSigner](https://hivesigner.com/sign/account-witness-vote?witness=quochuy&amp;amp;approve=1) to support my work for the community. See: My new contributions to the Hive Condenser and Wallet apps. by @quochuy</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://gitlab.syncad.com/hive/condenser/uploads/2c64f4229ba3743c83cf0afcb37f9d91/Screen_Shot_2021-04-09_at_4.51.17_pm.jpg" /><media:content medium="image" url="https://gitlab.syncad.com/hive/condenser/uploads/2c64f4229ba3743c83cf0afcb37f9d91/Screen_Shot_2021-04-09_at_4.51.17_pm.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>